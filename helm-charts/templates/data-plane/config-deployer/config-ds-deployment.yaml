# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

{{- if and .Values.wso2.kgw.dp.enabled .Values.wso2.kgw.dp.configdeployer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-config-ds-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.kgw.dp.configdeployer.deployment.replicas }}
  strategy:
    type: {{ .Values.wso2.kgw.dp.configdeployer.deployment.strategy }}
  selector:
    matchLabels:
{{ include "kubernetes-gateway-helm.pod.selectorLabels" (dict "root" . "app" "configdeployer-ds" ) | indent 6}}
  template:
    metadata:
      labels:
{{ include "kubernetes-gateway-helm.pod.selectorLabels" (dict "root" . "app" "configdeployer-ds" ) | indent 8}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/data-plane/config-deployer/config-ds-configmap.yaml") . | sha256sum }}
    spec:
      affinity: {{- include "kubernetes-gateway-helm.deployment.affinity" ( dict "value" .Values.wso2.kgw.dp.configdeployer.deployment.affinity "app" "config-ds" "context" $) | nindent 8 }}
      {{- if .Values.wso2.kgw.dp.configdeployer.deployment.nodeSelector }}
      nodeSelector: {{- include "kubernetes-gateway-helm.deployment.nodeSelector" ( dict "value" .Values.wso2.kgw.dp.configdeployer.deployment.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.wso2.kgw.auth.serviceAccountName }}
      containers:
        - name: config-ds
          image: {{ .Values.wso2.kgw.dp.configdeployer.deployment.image }}
          imagePullPolicy: {{ .Values.wso2.kgw.dp.configdeployer.deployment.imagePullPolicy }}
          ports:
            - containerPort: 9443
              protocol: "TCP"
            {{ if and .Values.wso2.kgw.metrics .Values.wso2.kgw.metrics.enabled }}
            - containerPort: 18006
              protocol: "TCP"
            - containerPort: 18007
              protocol: "TCP"
            {{ end }}
{{ include "kubernetes-gateway-helm.deployment.env" .Values.wso2.kgw.dp.configdeployer.deployment.env | indent 10 }}
            {{ if and .Values.wso2.kgw.metrics .Values.wso2.kgw.metrics.enabled }}
            - name: METRICS_ENABLED
              value: "true"
            {{ end }}
          readinessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.wso2.kgw.dp.configdeployer.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.kgw.dp.configdeployer.deployment.readinessProbe.periodSeconds }}    
          livenessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.wso2.kgw.dp.configdeployer.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.kgw.dp.configdeployer.deployment.livenessProbe.periodSeconds }}
{{ include "kubernetes-gateway-helm.deployment.resources" .Values.wso2.kgw.dp.configdeployer.deployment.resources | indent 10 }}
          volumeMounts:
            - mountPath: /home/wso2kgw/conf/Config.toml
              name: config-toml-volume
              subPath: Config.toml
            {{- if and .Values.wso2.kgw.metrics .Values.wso2.kgw.metrics.enabled }}
            - name: prometheus-jmx-config-volume	
              mountPath: /tmp/metrics/prometheus-jmx-config-configds.yml	
              subPath: prometheus-jmx-config-configds.yml
            {{- end }}
            - name: config-ds-tls-volume
              mountPath: /home/wso2kgw/security/config.key
            {{- if and .Values.wso2.kgw.dp.configdeployer.deployment.configs .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls }}
              subPath: {{ .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls.certKeyFilename | default "tls.key" }}
            {{- else }}
              subPath: tls.key
            {{- end }}
            - name: config-ds-tls-volume
              mountPath: /home/wso2kgw/security/config.pem
            {{- if and .Values.wso2.kgw.dp.configdeployer.deployment.configs .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls }}
              subPath: {{ .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            {{if and .Values.wso2.kgw.dp.partitionServer .Values.wso2.kgw.dp.partitionServer.tls}}
            - name:  partition-server-truststore-secret-volume
              mountPath: /home/wso2kgw/security/partition-server.pem
              subPath: {{.Values.wso2.kgw.dp.partitionServer.tls.fileName | default "tls.crt"}}
            {{- end }}
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2kgw/security/mg.pem
              subPath: mg.pem
            - name: tmp
              mountPath: /tmp
            - name: config-deployer-temp
              mountPath: /home/wso2kgw/tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
      {{- if and .Values.wso2.subscription .Values.wso2.subscription.imagePullSecrets}}
      imagePullSecrets:
        - name: {{ .Values.wso2.subscription.imagePullSecrets }}
      {{ end }}      
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"

      volumes:
        - name: config-toml-volume
          configMap:
            name: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-config-ds-configmap
        {{- if and .Values.wso2.kgw.metrics .Values.wso2.kgw.metrics.enabled }}
        - name: prometheus-jmx-config-volume
          configMap:
            name: prometheus-jmx-config-configds
        {{- end }}
        - name: config-ds-tls-volume
          secret:
       {{ if and .Values.wso2.kgw.dp.configdeployer.deployment.configs .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls }}
            secretName: {{ .Values.wso2.kgw.dp.configdeployer.deployment.configs.tls.secretName | default (printf "%s-config-ds-server-cert" (include "kubernetes-gateway-helm.resource.prefix" .)) }}
       {{ else }}
            secretName: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-config-ds-server-cert
       {{ end }}
        {{if and .Values.wso2.kgw.dp.partitionServer .Values.wso2.kgw.dp.partitionServer.tls}}
        - name:  partition-server-truststore-secret-volume
          secret:
            secretName: {{.Values.wso2.kgw.dp.partitionServer.tls.secretName}}
        {{ end }}
        - name: enforcer-jwt-secret-volume
          secret: 
            secretName: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-enforcer-keystore-secret
        - name: tmp
          emptyDir: {}
        - name: config-deployer-temp
          emptyDir: {}
{{- end -}}
