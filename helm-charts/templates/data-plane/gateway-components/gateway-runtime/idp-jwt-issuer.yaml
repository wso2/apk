{{ if or .Values.wso2.apk.dp.enabled .Values.wso2.apk.cp.enabled }}
kind: JWTIssuer
apiVersion: dp.wso2.com/v1alpha1
metadata:
  name: {{ template "apk-helm.resource.prefix" . }}-idp-jwt-issuer
  namespace: {{ .Release.Namespace }}
spec:
  name: "Domain-service-idp"
  consumerKeyClaim: {{ .Values.wso2.apk.idp.consumerKeyClaim | default "azp" }}
  scopesClaim: {{ .Values.wso2.apk.idp.scopeClaim | default "scope" }}
  issuer: "{{ .Values.wso2.apk.idp.issuer }}"
  organization: "apk-system"
  signatureValidation:
  {{if and .Values.wso2.apk.idp.signing }}
   {{if .Values.wso2.apk.idp.signing.secretName }}
    certificate:
      secretRef:
        name: "{{.Values.wso2.apk.idp.signing.secretName}}"
        key: "{{.Values.wso2.apk.idp.signing.fileName}}"
    {{else if .Values.wso2.apk.idp.signing.configMapName }}
    certificate:
      configMapRef:
        name: "{{.Values.wso2.apk.idp.signing.configMapName}}"
        key: "{{.Values.wso2.apk.idp.signing.fileName}}"
    {{else if .Values.wso2.apk.idp.signing.jwksEndpoint }}
    jwks:
      url: "{{ .Values.wso2.apk.idp.signing.jwksEndpoint }}"
    {{if and .Values.wso2.apk.idp.tls}}
      tls:
        {{if .Values.wso2.apk.idp.tls.secretName }}
        secretRef:
            name: "{{.Values.wso2.apk.idp.tls.secretName}}"
            key: "{{.Values.wso2.apk.idp.tls.fileName}}"
        {{else if .Values.wso2.apk.idp.tls.configMapName }}
        configMapRef:
            name: "{{.Values.wso2.apk.idp.tls.configMapName}}"
            key: "{{.Values.wso2.apk.idp.tls.fileName}}"
        {{end}}
    {{end}}
    {{end}}
    {{else}}
    certificate:
      secretRef:
        name: "{{ template "apk-helm.resource.prefix" . }}-enforcer-truststore-secret"
        key: "wso2carbon.pem"
    {{ end }}
    {{ if .Values.wso2.apk.idp.organizationClaim }}
  claimMappings:
    - remoteClaim: "{{.Values.wso2.apk.idp.organizationClaim}}"
      localClaim:  "x-wso2-organization"
    {{ else }}
  claimMappings:
    - remoteClaim: "organization"
      localClaim:  "x-wso2-organization"
    {{ end }}
  targetRef:
    kind: Gateway
    name: default
    group: gateway.networking.k8s.io
{{- end -}}