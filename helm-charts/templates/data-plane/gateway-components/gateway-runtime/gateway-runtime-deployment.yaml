# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

{{ if or .Values.wso2.apk.dp.enabled .Values.wso2.apk.cp.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apk-helm.resource.prefix" . }}-gateway-runtime-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.replicas }}
  strategy:
    type: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.strategy }}
  selector:
    matchLabels:
{{ include "apk-helm.pod.selectorLabels" (dict "root" . "app" .Values.wso2.apk.dp.gatewayRuntime.appName ) | indent 6}}
  template:
    metadata:
      labels:
        networkPolicyId: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.npi }}
{{ include "apk-helm.pod.selectorLabels" (dict "root" . "app" .Values.wso2.apk.dp.gatewayRuntime.appName ) | indent 8}}
    spec:
      initContainers:
        - name: check-adapter
          image: busybox:1.32
          env:
            - name: ADAPTER_HOST
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ADAPTER_XDS_PORT
              value : "18000"  
          command: ['sh', '-c', 'echo -e "Checking for the availability of Adapter deployment"; while ! nc -z $ADAPTER_HOST $ADAPTER_XDS_PORT; do sleep 1; printf "-"; done; echo -e "  >> Adapter has started";']
      containers:
        - name: enforcer
          image: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.image }}
          imagePullPolicy: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.imagePullPolicy }}
          ports:
            - containerPort: 8081
              protocol: "TCP"
            - containerPort: 9001
              protocol: "TCP"
{{ include "apk-helm.deployment.resources" .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.resources | indent 10 }}
{{ include "apk-helm.deployment.env" .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.env | indent 10 }}
            - name: ADAPTER_HOST_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ADAPTER_HOST
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ENFORCER_PRIVATE_KEY_PATH
              value: /home/wso2/security/keystore/enforcer.key  
            - name: ENFORCER_PUBLIC_CERT_PATH
              value: /home/wso2/security/keystore/enforcer.crt
            - name: ENFORCER_SERVER_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-enforcer-service.{{ .Release.Namespace }}.svc
            - name: TRUSTED_CA_CERTS_PATH
              value: "/home/wso2/security/truststore"
            - name: ADAPTER_XDS_PORT
              value : "18000"
            - name: ENFORCER_LABEL
              value : default
            - name: ENFORCER_REGION
              value: UNKNOWN
            - name: XDS_MAX_MSG_SIZE
              value: "4194304"
            - name: XDS_MAX_RETRIES 
              value: "3"
            - name: enforcer_admin_pwd
              value: admin
            - name: analytics_authURL
              value: "https://localhost:8080"
            - name: JAVA_OPTS
              value: -Dhttpclient.hostnameVerifier=AllowAll -Xms512m -Xmx512m -XX:MaxRAMFraction=2
          volumeMounts:
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/enforcer.key
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certKeyFilename | default "tls.key" }}
            {{- else }}
              subPath: tls.key
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/enforcer.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/apk.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.caCertFileName | default "ca.crt" }}
            {{- else }}
              subPath: ca.crt
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/enforcer.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: adapter-truststore-secret-volume
              mountPath: /home/wso2/security/truststore/adapter.crt
            {{- if and .Values.wso2.apk.dp.adapter.configs .Values.wso2.apk.dp.adapter.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.adapter.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: router-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/router.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: log-conf-volume
              mountPath: /home/wso2/conf/
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/keystore/mg.pem
              subPath: mg.pem
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/truststore/mg.pem
              subPath: mg.pem
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/keystore/mg.key
              subPath: mg.key
            - name: enforcer-trusted-certs
              mountPath: /home/wso2/security/truststore/wso2carbon.pem
              subPath: wso2carbon.pem
          readinessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.failureThreshold }}
          livenessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.failureThreshold }}
        - name: router
          image: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.image }}
          imagePullPolicy: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.wso2.apk.dp.gateway.listener.port }}
              protocol: "TCP"
            - containerPort: 9090
              protocol: "TCP"
            - containerPort: 9091
              protocol: "TCP"
            - containerPort: 9000
              protocol: "TCP"
{{ include "apk-helm.deployment.resources" .Values.wso2.apk.dp.gatewayRuntime.deployment.router.resources | indent 10 }}
{{ include "apk-helm.deployment.env" .Values.wso2.apk.dp.gatewayRuntime.deployment.router.env | indent 10 }}
            - name: ADAPTER_HOST_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ADAPTER_HOST
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ENFORCER_HOST_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-enforcer-service.{{ .Release.Namespace }}.svc
            - name: ENFORCER_HOST
              value: "127.0.0.1"
            - name: ROUTER_ADMIN_HOST
              value: "0.0.0.0"
            - name: ROUTER_ADMIN_PORT
              value: "9000"
            - name: ROUTER_PORT
              value: "{{ .Values.wso2.apk.dp.gateway.listener.port }}"
            - name: ROUTER_CLUSTER
              value: "default_cluster"
            - name: ROUTER_LABEL
              value: {{ .Values.wso2.apk.dp.gateway.name }}
            - name: ROUTER_PRIVATE_KEY_PATH
              value: "/home/wso2/security/keystore/router.key"
            - name: ROUTER_PUBLIC_CERT_PATH
              value: "/home/wso2/security/keystore/router.crt"
            - name: ADAPTER_PORT
              value: "18000"
            - name: ADAPTER_CA_CERT_PATH
              value: "/home/wso2/security/truststore/adapter.crt"
            - name: ENFORCER_PORT
              value: "8081"
            - name: ENFORCER_ANALYTICS_RECEIVER_PORT
              value: "18090"
            - name: ENFORCER_CA_CERT_PATH
              value: "/home/wso2/security/truststore/enforcer.crt"
            - name: CONCURRENCY
              value: "2"
          volumeMounts:
            - name: router-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/router.key
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls.certKeyFilename | default "tls.key" }}
            {{- else }}
              subPath: tls.key
            {{- end }}
            - name: router-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/router.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: adapter-truststore-secret-volume
              mountPath: /home/wso2/security/truststore/adapter.crt
            {{- if and .Values.wso2.apk.dp.adapter.configs .Values.wso2.apk.dp.adapter.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.adapter.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/enforcer.crt
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.publicKey | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: log-conf-volume
              mountPath: /home/wso2/conf/
        {{ if .Values.wso2.apk.dp.ratelimiter.enabled }}
            - name: ratelimiter-truststore-secret-volume
              mountPath: /home/wso2/security/truststore/ratelimiter.crt
            {{- if and .Values.wso2.apk.dp.ratelimiter.configs .Values.wso2.apk.dp.ratelimiter.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.ratelimiter.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: ratelimiter-truststore-secret-volume
              mountPath: /home/wso2/security/truststore/ratelimiter-ca.crt
            {{- if and .Values.wso2.apk.dp.ratelimiter.configs .Values.wso2.apk.dp.ratelimiter.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.ratelimiter.configs.tls.certCAFilename | default "ca.crt" }}
            {{- else }}
              subPath: ca.crt
            {{- end }}
        {{ end }}
          livenessProbe:
            exec:
              command: [ "sh", "router_check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.livenessProbe.failureThreshold }}
      {{- if and .Values.wso2.subscription .Values.wso2.subscription.imagePullSecrets}}
      imagePullSecrets:
        - name: {{ .Values.wso2.subscription.imagePullSecrets }}
      {{- else if and .Values.wso2.subscription (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "apk-helm.resource.prefix" . }}-apk-wso2-private-registry-creds
      {{ end }}
      volumes:
      {{ if .Values.wso2.apk.dp.ratelimiter.enabled }}
        - name: ratelimiter-truststore-secret-volume
          secret:
            {{- if and .Values.wso2.apk.dp.ratelimiter.configs .Values.wso2.apk.dp.ratelimiter.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.ratelimiter.configs.secretName | default (printf "%s-ratelimiter-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-ratelimiter-server-cert
          {{- end }}
      {{ end }}
        - name: enforcer-keystore-secret-volume
          secret: 
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.secretName | default (printf "%s-enforcer-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-server-cert
          {{- end }}
        - name: log-conf-volume
          configMap: 
            name: {{ template "apk-helm.resource.prefix" . }}-log-conf
        - name: router-keystore-secret-volume
          secret: 
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.secretName | default (printf "%s-router-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-router-server-cert
          {{- end }}
        - name: adapter-truststore-secret-volume
          secret: 
          {{- if and .Values.wso2.apk.dp.adapter.configs .Values.wso2.apk.dp.adapter.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.adapter.configs.tls.certificatesSecret | default (printf "%s-adapter-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-adapter-server-cert
          {{- end }}
        - name: enforcer-jwt-secret-volume
          secret: 
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-keystore-secret
        - name: enforcer-trusted-certs
          secret: 
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-truststore-secret 
{{- end -}}
