# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

{{- if .Values.wso2.kgw.dp.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-common-controller-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.kgw.dp.commonController.deployment.replicas }}
  strategy:
    type: {{ .Values.wso2.kgw.dp.commonController.deployment.strategy }}
  selector:
    matchLabels:
{{ include "kubernetes-gateway-helm.pod.selectorLabels" (dict "root" . "app" "commoncontroller" ) | indent 6}}
  template:
    metadata:
      labels:
{{ include "kubernetes-gateway-helm.pod.selectorLabels" (dict "root" . "app" "commoncontroller" ) | indent 8}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/data-plane/gateway-components/common-log-conf.yaml") . | sha256sum }}
    spec:
      affinity: {{- include "kubernetes-gateway-helm.deployment.affinity" ( dict "value" .Values.wso2.kgw.dp.commonController.deployment.affinity "app" "common-controller" "context" $) | nindent 8 }}
      {{- if .Values.wso2.kgw.dp.commonController.deployment.nodeSelector }}
      nodeSelector: {{- include "kubernetes-gateway-helm.deployment.nodeSelector" ( dict "value" .Values.wso2.kgw.dp.commonController.deployment.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.wso2.kgw.auth.serviceAccountName }}
      containers:
        - name: commoncontroller
          image: {{ .Values.wso2.kgw.dp.commonController.deployment.image }}
          imagePullPolicy: {{ .Values.wso2.kgw.dp.commonController.deployment.imagePullPolicy }}
          ports:
            - containerPort: 18005
              protocol: TCP
            - containerPort: 18002
              protocol: TCP
            - containerPort: 9543
              protocol: TCP
            - containerPort: 18003
              protocol: TCP
            {{ if and .Values.wso2.kgw.metrics .Values.wso2.kgw.metrics.enabled }}
            - containerPort: 18006
              protocol: "TCP"
            {{ end }}
{{ include "kubernetes-gateway-helm.deployment.resources" .Values.wso2.kgw.dp.commonController.deployment.resources | indent 10 }}
{{ include "kubernetes-gateway-helm.deployment.env" .Values.wso2.kgw.dp.commonController.deployment.env | indent 10 }}
          - name: OPERATOR_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: COMMON_CONTROLLER_PRIVATE_KEY_PATH
            value: /home/wso2/security/keystore/commoncontroller.key
          - name: COMMON_CONTROLLER_PUBLIC_CERT_PATH
            value: /home/wso2/security/keystore/commoncontroller.crt
          - name: COMMON_CONTROLLER_SERVER_NAME
            value: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-common-controller-service.{{ .Release.Namespace }}.svc
          volumeMounts:
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/commoncontroller.key
            {{- if and .Values.wso2.kgw.dp.commonController.deployment.configs .Values.wso2.kgw.dp.commonController.deployment.configs.tls }}
              subPath: {{ .Values.wso2.kgw.dp.commonController.deployment.configs.tls.certKeyFilename | default "tls.key" }}
            {{- else }}
              subPath: tls.key
            {{- end }}
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/commoncontroller.crt
            {{- if and .Values.wso2.kgw.dp.commonController.deployment.configs .Values.wso2.kgw.dp.commonController.deployment.configs.tls }}
              subPath: {{ .Values.wso2.kgw.dp.commonController.deployment.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/adapter-ca.crt
            {{- if and .Values.wso2.kgw.dp.commonController.deployment.configs .Values.wso2.kgw.dp.commonController.deployment.configs.tls }}
              subPath: {{ .Values.wso2.kgw.dp.commonController.deployment.configs.tls.certFilename | default "ca.crt" }}
            {{- else }}
              subPath: ca.crt
            {{- end }}
            - name: log-conf-volume
              mountPath: /home/wso2/conf/
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: adapter-webhook-server-cert
              readOnly: true
            - mountPath: /home/wso2/security/sts/
              name: sts-shared-auth-key
              readOnly: true
          readinessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.kgw.dp.commonController.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.kgw.dp.commonController.deployment.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.kgw.dp.commonController.deployment.readinessProbe.failureThreshold }}
          livenessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.kgw.dp.commonController.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.kgw.dp.commonController.deployment.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.kgw.dp.commonController.deployment.livenessProbe.failureThreshold }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
      {{- if and .Values.wso2.subscription .Values.wso2.subscription.imagePullSecrets}}
      imagePullSecrets:
        - name: {{ .Values.wso2.subscription.imagePullSecrets }}
      {{ end }}      
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      volumes:
        - name: common-controller-keystore-secret-volume
          secret:
          {{- if and .Values.wso2.kgw.dp.commonController.deployment.configs .Values.wso2.kgw.dp.commonController.deployment.configs.tls }}
            secretName: {{ .Values.wso2.kgw.dp.commonController.deployment.configs.tls.secretName | default (printf "%s-common-controller-server-cert" (include "kubernetes-gateway-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-common-controller-server-cert
          {{- end }}
            defaultMode: 420
        - name: log-conf-volume
          configMap: 
            name: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-common-log-conf
        - name: adapter-webhook-server-cert
          secret:
            secretName: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-webhook-server-cert
            defaultMode: 420
        - name: sts-shared-auth-key
          secret:
            secretName: {{ template "kubernetes-gateway-helm.resource.prefix" . }}-sts-shared-auth-key
            defaultMode: 420
{{- end -}}
