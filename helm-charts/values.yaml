# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

wso2:
  apk:
    auth:
      enabled: true
      enableServiceAccountCreation: true
      enableClusterRoleCreation: true
      serviceAccountName: wso2apk-platform
      roleName: wso2apk-role
    idp:
      issuer: "https://idp.am.wso2.com/token"
      authorizeEndpoint: "https://idp.am.wso2.com:9095/oauth2/authorize"
      tokenEndpoint: "https://idp.am.wso2.com:9095/oauth2/token"
      revokeEndpoint: "https://idp.am.wso2.com:9095/oauth2/revoke"
      #jwksEndpoint: ""
      usernameClaim: "sub"
      groupClaim: "groups"
      organizationClaim: "organization"
      # organizationResolver: "controlplane" # controlplane,none
      # credentials:
      #   secretName: "wso2apk-idp-credentials"
      # certificatesSecret:
      #   secretName: "wso2apk-idp-certificates"
      #   fileName: "idp.crt"
    cp:
      enabled: true
      database:
        enabled: true
        driver: "org.postgresql.Driver"
        url: "jdbc:postgresql://wso2apk-db-service:5432/WSO2AM_DB"
        host: "wso2apk-db-service"
        port: 5432
        databaseName: "WSO2AM_DB"
        username: "wso2carbon"
        password: "wso2carbon"
        validationQuery: "SELECT 1"
        validationTimeout: 250
      devportal:
        appName: "devportal-ds"
        deployment:
          npi: devportal-ds-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/devportal-domain-service:latest
      admin:
        appName: "admin-ds"
        deployment:
          npi: admin-ds-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/admin-domain-service:latest
      backoffice:
        appName: "backoffice-ds"
        deployment:
          npi: backoffice-ds-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /health
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/backoffice-domain-service:latest
      devportalUI:
        appName: "devportal-ui"
        deployment:
          npi: devportal-ui-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 0
          imagePullPolicy: IfNotPresent
          # TODO update image
          image: chanaka3d/portals:linux1.0.0
      managementServer:
        appName: "management-server"
        deployment:
          npi: management-server-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/management-server:latest
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5

        # configs:
        #   tls:
        # certificatesSecret: "management-server-cert"
        # fileName: "certificate.crt"
        # adapters:
        #   - name: adapter-1
        #     certificatesSecret: "adapter-1-cert"
        #     fileName: "certificate.crt"
      cnpg:
        npi: cnpg-npi
        instances: 1
        clusterName: cluster-example
        appUserPassword: password
        superUserPassword: password
    dp:
      enabled: true
      gatewayAPI:
        enabled: true
      gateway:
        name: default
        listener:
          name: httpslistener
          hostname: "*.gw.wso2.com"
          port: 9095
          protocol: HTTPS
      # controlPlane:
      #   serviceUrl: "http://control-plane-wso2-apk-admin-ds-service.control-plane.svc.cluster.local:9444/api/am/internal/v1"
      #   enableHostNameVerification: true
      # tls:
      #   enabled: false
      #   certificatesSecret: "organization-managetment-server-cert"
      #   fileName: "certificate.crt"
      # headers:
      #   - name: "apiKey"
      #     value: "123-456-789"
      # managementServer:
      #   enabled: false
      #   serviceUrl: "https://control-plane-wso2-apk-management-server.control-plane.svc.cluster.local"
      # tls:
      #   certificatesSecret: "organization-managetment-server-cert"
      #   fileName: "certificate.crt"
      runtime:
        appName: "runtime-ds"
        deployment:
          npi: runtime-ds-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/runtime-domain-service:latest
          configs:
        #   authrorization: true
        #   baseUrl: "https://api.am.wso2.com:9095/api/am/runtime"
          # tls:
          #   certificatesSecret: "my-secret"
          #   certKeyFilename: "tls.key"
          #   certFilename: "certchain.crt"
      adapter:
        appName: "adapter"
        deployment:
          npi: adapter-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/adapter:latest
          security:
            sslHostname: "adapter"
        # configs:
        # apiNamespaces:
        #   - "dataplane-1"
        #   - "dataplane-2"
        # tls:
        #   certificatesSecret: "adapter-cert"
        #   certKeyFilename: ""
        #   certFilename: ""
      ratelimiter:
        enabled: true
        appName: "ratelimiter"
        deployment:
          npi: ratelimiter-npi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /healthcheck
            port: 8090
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /healthcheck
            port: 8090
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: wso2/ratelimiter:latest
          security:
            sslHostname: "ratelimiter"
        # configs:
        #   tls:
        #     certificatesSecret: "ratelimiter-cert"
        #     certKeyFilename: ""
        #     certFilename: ""
        #     certCAFilename: ""
      gatewayRuntime:
        appName: "router"
        deployment:
          replicas: 1
          router:
            npi: router-npi
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "1028Mi"
                cpu: "1000m"
            readinessProbe:
              host: "prod.gw.wso2.com"
              initialDelaySeconds: 20
              periodSeconds: 20
              failureThreshold: 5
            livenessProbe:
              host: "prod.gw.wso2.com"
              initialDelaySeconds: 20
              periodSeconds: 20
              failureThreshold: 5
            strategy: Recreate
            imagePullPolicy: Always
            image: wso2/router:latest
            # configs:
            #   tls:
            #     certificatesSecret: "router-cert"
            #     certKeyFilename: ""
            #     certFilename: ""
          enforcer:
            npi: enforcer-npi
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "1028Mi"
                cpu: "1000m"
            readinessProbe:
              initialDelaySeconds: 20
              periodSeconds: 20
              failureThreshold: 5
            livenessProbe:
              initialDelaySeconds: 20
              periodSeconds: 20
              failureThreshold: 5
            strategy: Recreate
            imagePullPolicy: Always
            image: wso2/enforcer:latest
            security:
              sslHostname: "enforcer"
            # configs:
            #   tls:
            #     certificatesSecret: "router-cert"
            #     certKeyFilename: ""
            #     certFilename: ""
            #   filters:
            #     - className: org.wso2.micro.gateway.enforcer.filter.RequestFilter
            #       position: 1
            #       properties:
            #         - name: filterConfig1
            #           value: filterConfig1
    migration:
      # This flag should be enabled only in a migration scenario.
      # It is not recommended to run a production deployment with this flag enabled.
      enabled: false
certmanager:
  enabled: true
  enableClusterIssuer: true
  enableRootCa: true
postgresql:
  enabled: true
  fullnameOverride: "wso2apk-db-service"
  auth:
    database: WSO2AM_DB
    postgresPassword: wso2carbon
    username: wso2carbon
    password: wso2carbon
  primary:
    extendedConfiguration: |
      max_connections = 400
    initdb:
      scriptsConfigMap: postgres-initdb-scripts-configmap
      user: wso2carbon
      password: wso2carbon
    service:
      ports:
        postgresql: 5432
  image:
    debug: true

idp:
  enabled: true
  database:
    enabled: true
    driver: "org.postgresql.Driver"
    url: "jdbc:postgresql://wso2apk-db-service:5432/WSO2AM_DB"
    host: "wso2apk-db-service"
    port: 5432
    databaseName: "WSO2AM_DB"
    username: "wso2carbon"
    password: "wso2carbon"
    validationQuery: "SELECT 1"
    validationTimeout: 250
  idpds:
    config:
      issuer: "https://idp.am.wso2.com/token"
      keyId: "gateway_certificate_alias"
      hostname: "idp.am.wso2.com"
      loginPageURl: "https://idp.am.wso2.com:9095/authenticationEndpoint/login"
      loginErrorPageUrl: "https://idp.am.wso2.com:9095/authenticationEndpoint/error"
      loginCallBackURl: "https://idp.am.wso2.com:9095/authenticationEndpoint/login-callback"
    appName: "idp-ds"
    deployment:
      npi: idp-ds-npi
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1028Mi"
          cpu: "1000m"
      readinessProbe:
        path: /health
        port: 9443
        initialDelaySeconds: 20
        periodSeconds: 20
        failureThreshold: 5
      livenessProbe:
        path: /health
        port: 9443
        initialDelaySeconds: 20
        periodSeconds: 20
        failureThreshold: 5
      strategy: Recreate
      replicas: 1
      imagePullPolicy: Always
      image: wso2/idp-domain-service:latest
  idpui:
    appName: "idp-ui"
    deployment:
      npi: idp-ui-npi
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1028Mi"
          cpu: "1000m"
      readinessProbe:
        path: /authenticationEndpoint/health
        port: 9443
        initialDelaySeconds: 20
        periodSeconds: 20
        failureThreshold: 5
      livenessProbe:
        path: /authenticationEndpoint/health
        port: 9443
        initialDelaySeconds: 20
        periodSeconds: 20
        failureThreshold: 5
      strategy: Recreate
      replicas: 1
      imagePullPolicy: Always
      image: wso2/idp-ui:latest
    configs:
      idpLoginUrl: "https://idp.am.wso2.com:9095/commonauth/login"
      idpAuthCallBackUrl: "https://idp.am.wso2.com:9095/oauth2/auth-callback"
redis:
  enabled: true
  architecture: standalone
  fullnameOverride: redis
  primary:
    service:
      ports:
        redis: 6379
  auth:
    enabled: false
  image:
    debug: true
gateway-system:
  enabled: true
