# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

wso2:
  subscription:
  
    # -- Optionally specify image pull secrets.
    imagePullSecrets: ""

  choreo:
    deployment:
        enabled: false
      # This skips the following
      # 1. Common Controller Notification API

  apk:
    secretProviderClass:
      # -- Enable the use of a secret provider class instead of mounting secrets as files
      enabled: false
    helmHooks:
      # -- Helm hooks for cleaning up webhooks before installing, upgrading and uninstalling
      webhooksCleanupEnabled: true
    webhooks:
      validatingwebhookconfigurations : true
      mutatingwebhookconfigurations : true
      conversionwebhookconfigurations : true
    auth:
      # -- Enable Service Account Creation
      enabled: true
      # --  Enable Service Account Creation
      enableServiceAccountCreation: true
      # --  Enable Cluster Role Creation
      enableClusterRoleCreation: true
      # -- Service Account name
      serviceAccountName: wso2apk-platform
      # --  Cluster Role name
      roleName: wso2apk-role
    listener:
      # -- System api listener hostname
      hostname: "api.am.wso2.com"
      # -- Gatewaylistener port
      port: 9095
      # -- System api listener certificates. If you are using a custom certificate.
      secretName: "system-api-listener-cert"
    idp:
      # -- IDP issuer value
      issuer: "https://idp.am.wso2.com/token"
      usernameClaim: "sub"
      # -- Optionally configure scope Claim in JWT.
      scopeClaim: "scope"
      # -- Optionally configure organization Claim in JWT.
      organizationClaim: "organization"
      # -- Optionally configure organization Resolution method for APK (none)).
      organizationResolver: "none"
      tls:
        # -- IDP public certificate configmap name
        configMapName: ""
        # --  IDP public certificate secret name
        secretName: ""
        # -- IDP public certificate file name
        fileName: ""
      signing:
        # -- IDP jwks endpoint (optional)
        jwksEndpoint: ""
        # -- IDP jwt signing certificate configmap name
        configMapName: ""
        # -- IDP jwt signing certificate secret name
        secretName: ""
        # -- IDP jwt signing certificate file name
        fileName: ""
    cp:
      # -- Enable controlplane connection
      enableApiPropagation: false
      # -- Enable controlplane connection for subscription
      enabledSubscription: false
      # -- Hostname of the APK agent service
      host: "apim-apk-agent-service.apk.svc.cluster.local"
      # -- Skip SSL verification
      skipSSLVerification: false
      # -- Provide persistence mode DB/K8s
      persistence:
        type: "K8s"
    dp:
     # -- Enable the deployment of the Data Plane
      enabled: true
      environment: 
        # -- Environment Name of the Data Plane
        name: "Development"
      # -- GatewayClass custom resource name
      gatewayClass: 
        name: "wso2-apk-default"
      gateway:
        # -- Gateway custom resource name
        name: "wso2-apk-default"
        listener:
          # -- Gateway Listener Hostname
          hostname: "gw.wso2.com"
          # -- Gateway Listener Certificate Secret Name
          secretName: ""
          # -- DNS entries for gateway listener certificate
          dns: 
            - "*.gw.wso2.com"
            - "*.sandbox.gw.wso2.com"
            - "prod.gw.wso2.com"
        httpListener: 
          # -- HTTP listener enabled or not
          enabled: false
          # -- HTTP listener hostname
          hostname: "api.am.wso2.com"
          # -- HTTP listener port
          port: 9080
        autoscaling:
          # -- Enable autoscaling for Gateway
          enabled: false
          # -- Minimum number of replicas for Gateway
          minReplicas: 1
          # -- Maximum number of replicas for Gateway
          maxReplicas: 2
          # -- Target memory utilization percentage for Gateway
          targetMemory: 80
          # -- Target CPU utilization percentage for Gateway
          targetCPU: 80
        # -- Kubernetes service type for Gateway
        service: 
          type: "LoadBalancer"
      redis: 
        # -- Redis type
        type: "single"
        # -- Redis URL
        url: "redis-master:6379"
        # -- TLS enabled 
        tls: false
        auth: 
          # -- Redis ceritificate secret
          certificatesSecret:
          # -- Redis secret key
          secretKey:
        # -- Redis pool size
        poolSize: 
      partitionServer:
        # -- Enable partition server for Data Plane.
        enabled: false
        # -- Partition Server Service URL
        host: ""
        # -- Partition Server Service Base Path.
        serviceBasePath: "/api/publisher/v1"
        # -- Partition Name.
        partitionName: "default"
        tls:
          # -- TLS secret name for Partition Server Public Certificate.
          secretName: "managetment-server-cert"
          # -- TLS certificate file name.
          fileName: "certificate.crt"
      kvResolver:
        # -- Enable Key Value Resolver for Data Plane.
        enabled: true
        # -- Key Value Resolver Service URL.
        serviceURL: "https://wso2apk-kv-resolver-service.apk.svc.cluster.local:8080"
        # -- Key Value Resolver Retry configurations.
        retryInterval: 5
        # -- Key Value Resolver Retry count.
        maxRetryCount: 3
      consul:
        # -- Enable Consul for Data Plane.
        enabled: false
      configdeployer:
        enabled: true
        deployment:
          # -- Configure Affinity for the deployment. 
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/app
                      operator: In
                      values:
                      - config-ds
          # -- Configure Node Selector for the deployment. 
          nodeSelector: {}
          resources:
            requests:
              # -- CPU request for the container
              memory: "128Mi"
              # -- Memory request for the container
              cpu: "100m"
            limits:
              # -- CPU limit for the container
              memory: "1028Mi"
              # -- Memory limit for the container
              cpu: "1000m"
          readinessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          livenessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          # -- Deployment strategy
          strategy: RollingUpdate
          # -- Number of replicas
          replicas: 1
          # -- Image pull policy
          imagePullPolicy: Always
          # -- Image
          image: wso2/apk-config-deployer-service:1.3.0
          configs:
            # -- Enable authorization for runtime api.
            authorization: true
            # -- Baseurl for runtime api.
            baseUrl: "https://api.am.wso2.com:9095/api/runtime"
            tls:
              # -- TLS secret name for runtime public certificate.
              secretName: ""
              # -- TLS certificate file name.
              certKeyFilename: ""
              # -- TLS certificate file name.
              certFilename: ""
        # -- List of vhost
        vhosts: 
          - name: "default"
            hosts: ["gw.wso2.com"]
            type: "production"
          - name: "default"
            hosts: ["sandbox.gw.wso2.com"]
            type: "sandbox"
      adapter:
        deployment:
          resources:
            requests:
              # -- CPU request for the container
              memory: "128Mi"
              # -- Memory request for the container
              cpu: "100m"
            limits:
              # -- CPU limit for the container
              memory: "1028Mi"
              # -- Memory limit for the container
              cpu: "1000m"
          readinessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          livenessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          # -- Deployment strategy
          strategy: RollingUpdate
          # -- Number of replicas
          replicas: 1
          # -- Image pull policy
          imagePullPolicy: Always
          # -- Image
          image: wso2/apk-adapter:1.3.0
          security:
            # -- Enable security for adapter.
            sslHostname: "adapter"
          # -- Configure Affinity for the deployment. 
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/app
                      operator: In
                      values:
                      - adapter
                     # - "{{ .Template.Name }}"
                     # - "{{ .Values.somevalue }}"
          # -- Configure Node Selector for the deployment. 
          nodeSelector: {}
        configs:
          # -- Optionally configure namespaces to watch for apis.
          apiNamespaces:
          tls:
            # -- TLS secret name for adapter public certificate.
            secretName: ""
            # -- TLS certificate file name.
            certKeyFilename: ""
            # -- TLS certificate file name.
            certFilename: ""
        logging:
          # -- Optionally configure logging for adapter.
          # LogLevels can be "DEBG", "FATL", "ERRO", "WARN", "INFO", "PANC"
          level: "INFO"
          # -- Log file name
          logFile: "logs/adapter.log"
          # -- Log format can be "JSON", "TEXT"
          logFormat: "TEXT"
      commonController:
        deployment:
          resources:
            requests:
              # -- Memory request for the container
              memory: "128Mi"
              # -- CPU request for the container
              cpu: "100m"
            limits:
              # -- Memory limit for the container
              memory: "1028Mi"
              # -- CPU limit for the container
              cpu: "1000m"
          readinessProbe:
            # -- Number of seconds after the container has started before readinessProbe probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          livenessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          # -- Deployment strategy
          strategy: RollingUpdate
          # -- Number of replicas
          replicas: 1
          # -- Image pull policy
          imagePullPolicy: Always
          # -- Image
          image: wso2/apk-common-controller:1.3.0
          security:
            # -- hostname for the common controller
            sslHostname: "commoncontroller"
          configs:
             # -- Optionally configure namespaces to watch for apis,ratelimitpolicies,etc.
             apiNamespaces:
               - "apk-v12"
          # -- Configure Affinity for the deployment. 
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/app
                      operator: In
                      values:
                      - common-controller
          # -- Configure Node Selector for the deployment. 
          nodeSelector: {}
          redis:
              # -- Redis host
              host: "redis-master"
              # -- Redis port
              port: "6379"
              # -- Redis user name
              username: "default"
              # -- Redis password
              password: ""
              # -- Redis TLS enabled or not
              tlsEnabled: false
              # -- Redis user cert to use for redis connections
              userCertPath: "/home/wso2/security/keystore/commoncontroller.crt"
              # -- Redis user key to use for redis connections
              userKeyPath: "/home/wso2/security/keystore/commoncontroller.key"
              # -- Redis CA cert to use for redis connections
              cACertPath: "/home/wso2/security/keystore/commoncontroller.crt"
              # -- Token revocation subscription channel name
              channelName: "wso2-apk-revoked-tokens-channel"
          database:
            # -- Enable Database mode for persistence
            enabled: false
            # -- name of the database containing controlplane data for the use of dataplane
            name: "DATAPLANE"
            host: "wso2apk-db-service.apk"
            port: 5432
            username: "wso2carbon"
            password: "wso2carbon"
            poolOptions:
              poolMaxConns: 4
              poolMinConns: 0
              poolMaxConnLifetime: "1h"
              poolMaxConnIdleTime: "1h"
              poolHealthCheckPeriod: "1m"
              poolMaxConnLifetimeJitter: "1s"
        logging:
          # -- Optionally configure logging for common controller.
          # LogLevels can be "DEBG", "FATL", "ERRO", "WARN", "INFO", "PANC"
          level: "INFO"
          # -- Log format can be "JSON", "TEXT"
          logFormat: "TEXT"
      ratelimiter:
        # -- Enable the deployment of the Rate Limiter
        enabled: true
        deployment:
          resources:
            requests:
              # -- CPU request for the container
              memory: "128Mi"
              # -- Memory request for the container
              cpu: "100m"
            limits:
              # -- CPU limit for the container
              memory: "1028Mi"
              # -- Memory limit for the container
              cpu: "1000m"
          readinessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          livenessProbe:
            # -- Number of seconds after the container has started before liveness probes are initiated.
            initialDelaySeconds: 20
            # -- How often (in seconds) to perform the probe.
            periodSeconds: 20
            # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
            failureThreshold: 5
          # -- Deployment strategy
          strategy: RollingUpdate
          # -- Number of replicas
          replicas: 1
          # -- Image pull policy
          imagePullPolicy: Always
          # -- Image
          image: wso2/apk-ratelimiter:1.3.0
          security:
            # -- hostname for the rate limiter
            sslHostname: "ratelimiter"
          configs:
            tls:
              # -- TLS secret name for rate limiter public certificate.
              secretName: "ratelimiter-cert"
              # -- TLS certificate file name.
              certKeyFilename: ""
              # -- TLS certificate file name.
              certFilename: ""
              # -- TLS CA certificate file name.
              certCAFilename: ""
          # -- Configure Affinity for the deployment. 
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/app
                      operator: In
                      values:
                      - rate-limiter
          # -- Configure Node Selector for the deployment. 
          nodeSelector: {}
      gatewayRuntime:
        service:
          # -- Gateway service related annotations.
          annotations:
        deployment:
          # -- Number of replicas
          replicas: 1
          # -- Configure Node Selector for the deployment. 
          nodeSelector: {}
          # -- Configure Affinity for the deployment. 
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/app
                      operator: In
                      values:
                      - gateway-runtime
          router:
            resources:
              requests:
                # -- CPU request for the container
                memory: "128Mi"
                # -- Memory request for the container
                cpu: "100m"
              limits:
                # -- CPU limit for the container
                memory: "1028Mi"
                # -- Memory limit for the container
                cpu: "1000m"
            readinessProbe:
              # -- Number of seconds after the container has started before liveness probes are initiated.
              initialDelaySeconds: 20
              # -- How often (in seconds) to perform the probe.
              periodSeconds: 20
              # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
              failureThreshold: 5
            livenessProbe:
              # -- Number of seconds after the container has started before liveness probes are initiated.
              initialDelaySeconds: 20
              # -- How often (in seconds) to perform the probe.
              periodSeconds: 20
              # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
              failureThreshold: 5
            # -- Deployment strategy
            strategy: RollingUpdate
            # -- Image pull policy
            imagePullPolicy: Always
            # -- Image
            image: wso2/apk-router:1.3.0
            configs:
              # -- The timeout for response coming from enforcer to route per API request
              enforcerResponseTimeoutInSeconds: 20
              # -- If configured true, router appends the immediate downstream ip address to the x-forward-for header
              useRemoteAddress: false
              # -- System hostname for system API resources (eg: /testkey and /health)
              systemHost: "localhost"
              # -- Enable Semantic Versioning based Intelligent Routing for Gateway
              enableIntelligentRouting: false
              tls:
                # -- TLS secret name for router public certificate.
                secretName: "router-cert"
                # -- TLS certificate file name.
                certKeyFilename: ""
                # -- TLS certificate file name.
                certFilename: "" 
              upstream:
                tls:
                  # -- Enable/Disable Verifying host name
                  verifyHostName: true
                  # -- Disable SSL verification
                  disableSslVerification: false
                dns:
                  # -- DNS refresh rate in miliseconds
                  dnsRefreshRate: 5000
                  # -- set cluster’s DNS refresh rate to resource record’s TTL which comes from DNS resolution
                  respectDNSTtl:  false
            logging:
              # -- Optionally configure logging for router.
              wireLogs:
              # -- Enable wire logs for router.
                enable: true
              accessLogs:
                # -- Enable access logs for router.
                enable: true
                # -- Log file name
                logfile: "/tmp/envoy.access.log"
          enforcer:
            # -- Enforcer's external processing functionalities are disabled
            disabled: false
            resources:
              requests:
                # -- CPU request for the container
                memory: "128Mi"
                # -- Memory request for the container
                cpu: "100m"
              limits:
                # -- CPU limit for the container
                memory: "1028Mi"
                # -- Memory limit for the container
                cpu: "1000m"
            readinessProbe:
              # -- Number of seconds after the container has started before liveness probes are initiated.
              initialDelaySeconds: 20
              # -- How often (in seconds) to perform the probe.
              periodSeconds: 20
              # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
              failureThreshold: 5
            livenessProbe:
              # -- Number of seconds after the container has started before liveness probes are initiated.
              initialDelaySeconds: 20
              # -- How often (in seconds) to perform the probe.
              periodSeconds: 20
              # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
              failureThreshold: 5
            # -- Deployment strategy
            strategy: RollingUpdate
            # -- Image pull policy
            imagePullPolicy: Always
            # -- Image
            image: wso2/apk-enforcer:1.3.0
            security:
              # -- hostname for the enforcer
              sslHostname: "enforcer"
            configs:
              tls:
                # -- TLS secret name for enforcer public certificate.
                secretName: ""
                # -- TLS certificate file name.
                certKeyFilename: ""
                # -- TLS certificate file name.
                certFilename: ""
              # -- The configurations of gRPC netty based server in Enforcer that handles the incoming requests from ext_authz
              authService:
                maxMessageSize: 1000000000
                maxHeaderLimit: 8192
                keepAliveTime: 600
                threadPool:
                  coreSize: 400
                  maxSize: 1000
                  keepAliveTime: 600
                  queueSize: 2000
              # -- Specifies whether subscription validation is mandated for all APIs.
              mandateSubscriptionValidation: false
              # -- Specifies whether Internal-Key validation is mandated for all APIs.
              mandateInternalKeyValidation: false
            logging:
              # -- Optionally configure logging for enforcer.
              # -- Log level can be one of DEBUG, INFO, WARN, ERROR, OFF
              level: DEBUG
              # -- Log file name
              logFile: logs/enforcer.log
            redis:
              # -- Redis host
              host: "redis-master"
              # -- Redis port
              port: "6379"
              # -- Redis user name
              username: "default"
              # -- Redis password
              password: ""
              # -- Redis user cert to use for redis connections
              # -- Redis TLS enabled or not
              tlsEnabled: false
              userCertPath: "/home/wso2/security/keystore/commoncontroller.crt"
              # -- Redis user key to use for redis connections
              userKeyPath: "/home/wso2/security/keystore/commoncontroller.key"
              # -- Redis CA cert to use for redis connections
              cACertPath: "/home/wso2/security/keystore/commoncontroller.crt"
              # -- Token revocation subscription channel name
              channelName: "wso2-apk-revoked-tokens-channel"
        # Tracing configurations for gateway runtime
        tracing: 
          # -- Enable/Disable tracing in gateway runtime.
          enabled: true
          # -- Type of tracer exporter (e.g: azure, zipkin). Use zipkin type for Jaeger as well.
          type: "zipkin"
          configProperties:   
            # -- Jaeger/Zipkin host.
            host: "jaeger"
            # -- Jaeger/Zipkin port.
            port: "9411"
            # -- Jaeger/Zipkin collector endpoint path.
            endpoint: "/api/v2/spans"
            # -- Library Name to be tagged in traces (`otel.library.name`).
            instrumentationName: "APK"
            # -- Maximum number of sampled traces per second string.
            maximumTracesPerSecond: "2"
            # -- Maximum length of the request path to extract and include in the HttpUrl tag.
            maxPathLength: "256"
            # -- New Relic OTLP gRPC collector endpoint.
            connectionString: "https://otlp.nr-data.net"
            # -- Auth header name.
            authHeaderName: "api-key"
            # -- Auth header value.
            authHeaderValue: "<INGEST_LICENSE_KEY>"
            # -- Connection timeout for the otlp service.
            connectionTimeout: "20"
            tls: 
              # -- Enable/Disable TLS for the otlp service.
              enabled: true
              # -- TLS certificate file name.
              secretName: "ratelimiter-cert"
              # -- TLS certificate file name.
              certFilename: ""
              # -- TLS certificate file name.
              certCAFilename: ""
        analytics:
          # -- Enable/Disable analytics in gateway runtime.
          enabled: true
          # -- Analytics Publishers
          publishers:
          - enabled: true
            type: "default"
            secretName: "choreo-analytics-secret" # user created secret name
          - enabled: true
            type: "elk"
          - enabled: true
            type: "moesif"
            secretName: "moesif-secret"
          # -- Optional: File name of the log file.
          logFileName: "logs/enforcer_analytics.log"
          # -- Optional: Log level the analytics data. Can be one of DEBUG, INFO, WARN, ERROR, OFF.
          logLevel: "INFO"
          # -- gRPC access log service within Enforcer
          receiver:
            # -- Maximum message size in bytes
            maxMessageSize: 1000000000
            # -- Maximum header size in bytes
            maxHeaderLimit: 8192
            # -- Keep alive time of gRPC access log connection
            keepAliveTime: 600
            # -- Thread pool configuration for gRPC access log server
            threadPool:
              # -- Minimum number of workers to keep alive
              coreSize: 10
              # -- Maximum pool size
              maxSize: 100
              # -- Timeout in seconds for idle threads waiting for work
              keepAliveTime: 600
              # -- Queue size of the worker threads
              queueSize: 1000
    metrics:
      # -- Enable Prometheus metrics
      enabled: false
      # -- Configure the host for exposing the config ds ballerina metrics
      # configDSBalHost: 0.0.0.0
      # -- Configure the host for exposing the idp ds ballerina metrics.
      # idpDSBalHost: 0.0.0.0
      # -- Statsd is required to expose metrics from ratelimiter
      # statsd:
      #   image:
      #     repository: prom/statsd-exporter
      #     tag: v0.26.0
      #   imagePullPolicy: IfNotPresent
      #   resources:
      #     limits:
      #       memory: 128Mi
      #     requests:
      #       cpu: 0.1
      #       memory: 64Mi

idp:
  # -- Enable Non production identity server
  enabled: true
  listener:
    # -- identity server hostname
    hostname: "idp.am.wso2.com"
    # -- identity server certificate
    secretName: "idp-tls"
  database:
    # -- identity server database driver
    driver: "org.postgresql.Driver"
    # -- identity server database url
    url: "jdbc:postgresql://wso2apk-db-service:5432/WSO2AM_DB"
    # -- identity server database host
    host: "wso2apk-db-service"
    # -- identity server database port
    port: 5432
    # -- identity server database name
    databaseName: "WSO2AM_DB"
    # -- identity server database username
    username: "wso2carbon"
    # -- identity server database password secret name
    secretName: "apk-db-secret"
    # -- identity server database password secret key
    secretKey: "DB_PASSWORD"
    # -- identity server database validation query
    validationQuery: "SELECT 1"
    # -- identity server database validation timeout
    validationTimeout: 250
  idpds:
    config:
      # -- identity server issuer url
      issuer: "https://idp.am.wso2.com/token"
      # -- identity server keyId
      keyId: "gateway_certificate_alias"
      # -- identity server hostname.
      hostname: "idp.am.wso2.com"
      # -- identity server login page url
      loginPageURl: "https://idp.am.wso2.com:9095/authenticationEndpoint/login"
      # -- identity server login error page url
      loginErrorPageUrl: "https://idp.am.wso2.com:9095/authenticationEndpoint/error"
      # -- identity server login callback page url
      loginCallBackURl: "https://idp.am.wso2.com:9095/authenticationEndpoint/login-callback"
    deployment:
      resources:
        requests:
          # -- CPU request for the container
          memory: "128Mi"
          # -- Memory request for the container
          cpu: "100m"
        limits:
          # -- CPU limit for the container
          memory: "1028Mi"
          # -- Memory limit for the container
          cpu: "1000m"
      readinessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 20
        # -- How often (in seconds) to perform the probe.
        periodSeconds: 20
        # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
        failureThreshold: 5
      livenessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 20
        # -- How often (in seconds) to perform the probe.
        periodSeconds: 20
        # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
        failureThreshold: 5
      # -- Deployment strategy
      strategy: RollingUpdate
      # -- Number of replicas
      replicas: 1
      # -- Image pull policy
      imagePullPolicy: Always
      # -- Image
      image: wso2/apk-idp-domain-service:1.3.0
  idpui:
    deployment:
      resources:
        requests:
          # -- CPU request for the container
          memory: "128Mi"
          # -- Memory request for the container
          cpu: "100m"
        limits:
          # -- CPU limit for the container
          memory: "1028Mi"
          # -- Memory limit for the container
          cpu: "1000m"
      readinessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 20
        # -- How often (in seconds) to perform the probe.
        periodSeconds: 20
        # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
        failureThreshold: 5
      livenessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 20
        # -- How often (in seconds) to perform the probe.
        periodSeconds: 20
        # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
        failureThreshold: 5
      # -- Deployment strategy
      strategy: RollingUpdate
      # -- Number of replicas
      replicas: 1
      # -- Image pull policy
      imagePullPolicy: Always
      # -- Image
      image: wso2/apk-idp-ui:1.3.0
    configs:
      # -- identity server Login URL
      idpLoginUrl: "https://idp.am.wso2.com:9095/commonauth/login"
      # -- identity server authCallBackUrl
      idpAuthCallBackUrl: "https://idp.am.wso2.com:9095/oauth2/auth-callback"

gatewaySystem:
  # -- Enable gateway system to install gateway system components
  enabled: true
  enableServiceAccountCreation: true
  enableClusterRoleCreation: true
  serviceAccountName: gateway-api-admission
  applyGatewayWehbhookJobs: true
  deployment:
    image: registry.k8s.io/gateway-api/admission-server:v1.0.0
    imagePullPolicy: Always
    # -- Configure Affinity for the deployment. 
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/app
                operator: In
                values:
                - gateway-api-ad-server
    # -- Configure Node Selector for the deployment. 
    nodeSelector: {}
certmanager:
  # -- Enable certificate manager to generate certificates
  enabled: true
  # -- Enable cluster issuer to generate certificates
  enableClusterIssuer: true
  # -- Enable root CA to generate certificates
  enableRootCa: true
  # -- Enable CA certificate secret name.
  rootCaSecretName: "apk-root-certificate"
  listeners:
    # -- Issuer name
    issuerName: "selfsigned-issuer"
    # -- Issuer kind
    issuerKind: "ClusterIssuer"
  servers: 
    # -- Issuer name
    issuerName: "selfsigned-issuer"
    # -- Issuer kind
    issuerKind: "ClusterIssuer"
postgresql:
  # -- Enable postgresql database
  enabled: true
  # -- String to fully override common.names.fullname template
  fullnameOverride: "wso2apk-db-service"
  auth:
    # -- Name for a custom database to create
    database: WSO2AM_DB
    # -- Password for the "postgres" admin user. Ignored if auth.existingSecret is provided
    postgresPassword: wso2carbon
    # -- Name for a custom user to create
    username: wso2carbon
    # -- Password for the custom user to create. Ignored if auth.existingSecret is provided
    password: wso2carbon
  primary:
    # -- Extended PostgreSQL Primary configuration (appended to main or default configuration)
    extendedConfiguration: |
      max_connections = 400
    initdb:
      # -- ConfigMap with PostgreSQL initialization scripts
      scriptsConfigMap: postgres-initdb-scripts-configmap
      # -- Specify the PostgreSQL username to execute the initdb scripts
      user: wso2carbon
      # -- Specify the PostgreSQL password to execute the initdb scripts
      password: wso2carbon
    service:
      ports:
        # -- PostgreSQL service port
        postgresql: 5432
    podSecurityContext:
      # -- Enable pod security context
      enabled: true
      # -- Pod security context fsGroup
      fsGroup: null
      # -- Pod security context runAsNonRoot
      runAsNonRoot: true
      seccompProfile:
        # -- Pod security context seccomp profile type
        type: RuntimeDefault
    containerSecurityContext:
      # -- Enable container security context
      enabled: true
      # -- Container security context allow privilege escalation
      allowPrivilegeEscalation: false
      capabilities:
        # -- Container security context capabilities drop
        drop: ["ALL"]
      # -- Container security context runAsUser
      runAsUser: null

redis:
  # -- Enable redis
  enabled: true
  # -- Redis® architecture. Allowed values: standalone or replication. 
  architecture: standalone
  # -- String to fully override common.names.fullname template
  fullnameOverride: redis
  primary:
    service:
      ports:
        # -- Redis service port
        redis: 6379
  master:
    podSecurityContext:
      # -- Enable pod security context
      enabled: true
      # -- Pod security context fsGroup
      fsGroup: null
      # -- Pod security context runAsNonRoot
      runAsNonRoot: true
      seccompProfile:
        # -- Pod security context seccomp profile type
        type: RuntimeDefault
    containerSecurityContext:
      # -- Enable container security context
      enabled: true
      # -- Container security context allow privilege escalation
      allowPrivilegeEscalation: false
      capabilities:
        # -- Container security context capabilities drop
        drop: ["ALL"]
      # -- Container security context runAsUser
      runAsUser: null
  auth:
    # -- Enable password authentication	
    enabled: false

# -- Skip generate of CRD templates
skipCrds: false

# -- Integration test configurations
integrationTest:
    # -- create k8s configurations required for integration tests
    # -- Ideally these should be not required and integration tests should be updated to cater Choreo use cases only
  addHelmConfigsRequiredForTests: true
