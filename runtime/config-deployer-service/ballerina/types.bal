import ballerina/constraint;
// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.
import ballerina/http;

# Configuration for a successful response.
#
# + body - The body of the response containing any data.
public type OkAnydata record {|
    *http:Ok;
    anydata body;
|};

# Configuration for a Not Found error response.
#
# + body - The body of the response containing error details.
public type NotFoundError record {|
    *http:NotFound;
    Error body;
|};

# Configuration for a Bad Request error response.
#
# + body - The body of the response containing error details.
public type BadRequestError record {|
    *http:BadRequest;
    Error body;
|};

# Configuration for an Accepted response.
#
# + body - The body of the response containing a string.
public type AcceptedString record {|
    *http:Accepted;
    string body;
|};

# Configuration for Internal Server Error response.
#
# + body - The body of the response containing error details.
public type InternalServerErrorError record {|
    *http:InternalServerError;
    Error body;
|};

# Configuration for a list of errors.
#
# + code - The code representing the error.
# + message - Description about individual errors occurred.
# + description - A detailed description about the error message.
public type ErrorListItem record {
    string code;
    string message;
    string description?;
};

# Configuration for Endpoint Security.
#
# + enabled - Indicates whether the endpoint security is enabled.
# + securityType - Configuration for the basic endpoint security.
public type EndpointSecurity record {
    boolean enabled?;
    BasicEndpointSecurity|APIKeyEndpointSecurity|AWSKeyEndpointSecurity securityType?;
};

# Configuration for Custom Claims.
#
# + claim - The name of the custom claim.
# + value - The value of the custom claim.
# + type - The type of the custom claim.
public type CustomClaims record {
    string claim;
    string value;
    string 'type = "string";
};

# Configuration for a K8s Service.
#
# + name - The name of the K8s service.
# + namespace - The namespace in which the service is defined.
# + port - The port on which the service is exposed.
# + protocol - The protocol used by the service (e.g., "TCP", "UDP").
public type K8sService record {
    string name?;
    string namespace?;
    int port?;
    string protocol?;
};

# Configuration for Rate Limiting.
#
# + requestsPerUnit - Number of requests allowed per specified unit of time.
# + unit - Unit of time for the rate limit.
public type RateLimit record {
    int requestsPerUnit;
    string unit;
};

# Configuration for Basic Endpoint Security.
#
# + secretName - The name of the secret containing the credentials.
# + userNameKey - The key to retrieve the username from the secret.
# + passwordKey - The key to retrieve the password from the secret.
public type BasicEndpointSecurity record {
    string secretName;
    string userNameKey;
    string passwordKey;
};

# Configuration for API Key Endpoint Security.
# 
# + secretName - The name of the secret containing the API key.
# + in - The mode of sending Ex: header/query.
# + apiKeyNameKey - API key Header name.
# + apiKeyValueKey - Key to retrieve API key Header value from the secret.
public type APIKeyEndpointSecurity record {
    string secretName;
    string 'in;
    string apiKeyNameKey;
    string apiKeyValueKey;
};

# Configuration for AWS Key Endpoint Security.
#
# + service - The name of the service of the AWS key.
# + in - The mode of sending Ex: header/query.
# + regionRef - Reference to the AWS region.
# + accessKeyRef - Reference to the AWS access key.
# + secretKeyRef - Reference to the AWS secret key.
public type AWSKeyEndpointSecurity record {
    string 'service;
    string 'in;
    string regionRef;
    string accessKeyRef;
    string secretKeyRef;
};

# Configuration for APK Operations.
#
# + target - The target endpoint for the operation.
# + verb - The HTTP verb for the operation.
# + secured - Indicates if authentication is applied to the operation(true/false).
# + endpointConfigurations - Configuration for the endpoint.
# + operationPolicies - Policies to be applied for the operation.
# + rateLimit - Rate limiting configuration for the operation.
# + scopes - Scopes required for the operation.
public type APKOperations record {
    string target?;
    string verb?;
    boolean secured?;
    EndpointConfigurations endpointConfigurations?;
    APIOperationPolicies operationPolicies?;
    RateLimit rateLimit?;
    string[] scopes?;
};

public type APKOperationPolicy APKRequestOperationPolicy|APKResponseOperationPolicy;

# Common type for request operation policies.
public type APKRequestOperationPolicy InterceptorPolicy|BackendJWTPolicy|HeaderModifierPolicy|RequestMirrorPolicy|RequestRedirectPolicy|ModelBasedRoundRobinPolicy|CommonPolicy;

# Common type for response operation policies.
public type APKResponseOperationPolicy InterceptorPolicy|BackendJWTPolicy|HeaderModifierPolicy|CommonPolicy;

# Header modification configuration for an operation.
#
# + parameters - Contains header name and value of the header.
public type HeaderModifierPolicy record {
    *BaseOperationPolicy;
    HeaderModifierPolicyParameters parameters;
};

# Configuration for header modifiers as received from the apk-conf file.
#
# + headerName - Header name to be added, set or removed.
# + headerValue - Header value to be added, set or removed.
public type HeaderModifierPolicyParameters record {|
    string headerName;
    string headerValue?;
|};

# Request mirror configuration for an operation.
#
# + parameters - Contains the urls to request the mirror to.
public type RequestMirrorPolicy record {
    *BaseOperationPolicy;
    RequestMirrorPolicyParameters parameters;
};

# Configuration containing the different headers.
#
# + urls - The urls to mirror the filters to.
public type RequestMirrorPolicyParameters record {|
    string[] urls;
|};

# Request redirect configuration for an operation.
#
# + parameters - Contains the url to redirect the request to.
public type RequestRedirectPolicy record {
    *BaseOperationPolicy;
    RequestRedirectPolicyParameters parameters;
};

# Configuration containing the different headers.
#
# + url - The url to redirect the filters to.
# + statusCode - The status code to be sent as response to the client.
public type RequestRedirectPolicyParameters record {|
    string url;
    int statusCode?;
|};

# Configuration for API deployment using the apk-conf file.
#
# + apkConfiguration - APK Configuration (apk-conf) file.
# + definitionFile - API definition (OAS/Graphql/WebSocket).
public type DeployApiBody record {
    record {byte[] fileContent; string fileName;} apkConfiguration?;
    record {byte[] fileContent; string fileName;} definitionFile?;
};

# Configuration of APK Operation Policies.
#
# + request - List of policies to be applied on the request.
# + response - List of policies to be applied on the response.
public type APIOperationPolicies record {
    APKRequestOperationPolicy[] request?;
    APKResponseOperationPolicy[] response?;
};

# Additional properties for APK configuration.
#
# + name - The name of the additional property.
# + value - The value of the additional property.
public type APKConf_additionalProperties record {
    string name?;
    string value?;
};

# Configuration of Resiliency settings.
#
# + circuitBreaker - Configuration for the CircuitBreaker.
# + timeout - Configuration for the Timeout.
# + retryPolicy - Configuration for the RetryPolicy.
public type Resiliency record {
    CircuitBreaker circuitBreaker?;
    Timeout timeout?;
    RetryPolicy retryPolicy?;
};

# Configuration of AIRatelimit settings.
#
# + enabled - Indicates whether the AI rate limit is enabled.
# + token - Configuration for the CircuitBreaker.
# + request - Configuration for the Timeout.
public type AIRatelimit record {
    boolean enabled;
    TokenAIRL token;
    RequestAIRL request;
};

# Configuration for Token AI rate limit settings.
#
# + promptLimit - Limit for prompts within the specified unit.
# + completionLimit - Limit for completions within the specified unit.
# + totalLimit - Total limit combining prompt and completion counts.
# + unit - The time unit for the rate limits (Minute, Hour, Day).
public type TokenAIRL record {
    int promptLimit;
    int completionLimit;
    int totalLimit;
    string unit;
};

# Configuration for Request AI rate limit settings.
#
# + requestLimit - Limit for requests within the specified unit.
# + unit - The time unit for the request limits (Minute, Hour, Day).
public type RequestAIRL record {
    int requestLimit;
    string unit;
};

# Configuration of CircuitBreaker settings.
#
# + maxConnectionPools - The maximum number of connection pools allowed.
# + maxConnections - The maximum number of connections allowed.
# + maxPendingRequests - The maximum number of pending requests allowed.
# + maxRequests - The maximum number of requests allowed.
# + maxRetries - The maximum number of retries allowed.
public type CircuitBreaker record {
    int maxConnectionPools?;
    int maxConnections?;
    int maxPendingRequests?;
    int maxRequests?;
    int maxRetries?;
};

# Common type for all authentication types.
public type AuthenticationRequest OAuth2Authentication|APIKeyAuthentication|MTLSAuthentication|JWTAuthentication;

# Configuration for production and sandbox endpoints.
#
# + production - Production endpoints.
# + sandbox - Sandbox endpoints.
public type EndpointConfigurations record {
    EndpointConfiguration[] production?;
    EndpointConfiguration[] sandbox?;
};

# Configuration for production and sandbox endpoints.
#
# + endpoint - The endpoint which can be a string or a Kubernetes service.
# + endpointSecurity - The security configuration for the endpoint.
# + certificate - The certificate configuration for the endpoint.
# + resiliency - The resiliency configuration for the endpoint.
# + aiRatelimit - The AIRatelimit configuration for the AI ratelimit.
# + weight - The weight of the endpoint in weighted routing.
public type EndpointConfiguration record {
    string|K8sService endpoint;
    EndpointSecurity endpointSecurity?;
    Certificate certificate?;
    Resiliency resiliency?;
    AIRatelimit aiRatelimit?;
    int weight?;
};

# Configuration of OAuth2 Authentication type.
#
# + required - Is OAuth2 authentication mandatory/optional.
# + sendTokenToUpstream - Enables sending the value to the upstream.
# + headerName - Header name for sending the OAuth2 value.
# + headerEnable - Enable sending OAuth2 as a header.
public type OAuth2Authentication record {|
    *Authentication;
    string required = "mandatory";
    boolean sendTokenToUpstream = false;
    string headerName = "Authorization";
    boolean headerEnable = true;
|};

# Configuration of JWT Authentication type.
#
# + required - Is JWT authentication mandatory/optional.
# + sendTokenToUpstream - Enables sending the value to the upstream.
# + headerName - Header name for sending the JWT value.
# + headerEnable - Enable sending the JWT as a header.
# + audience - List of audiences for the JWT.
public type JWTAuthentication record {|
    *Authentication;
    string required = "mandatory";
    boolean sendTokenToUpstream = false;
    string headerName = "Authorization";
    boolean headerEnable = true;
    string[] audience = [];
|};

# Configuration of timeout.
#
# + downstreamRequestIdleTimeout - field description  
# + upstreamResponseTimeout - field description
public type Timeout record {
    int downstreamRequestIdleTimeout?;
    int upstreamResponseTimeout?;
};

# Configuration needed to generate K8s resources.
#
# + apkConfiguration - APK Configuration (apk-conf) file.
# + definitionFile - API definition (OAS/Graphql/WebSocket)
# + apiType - Type of API.
public type GenerateK8sResourcesBody record {
    record {byte[] fileContent; string fileName;} apkConfiguration?;
    record {byte[] fileContent; string fileName;} definitionFile?;
    string apiType?;
};

# Configuration of an error.
#
# + code - Error code.
# + message - Error message.
# + description - A detailed description about the error message.
# + moreInfo - Preferably a URL with more details about the error.
# + 'error - A list containing multiple errors if any. For example, list out validation errors by each field.
public type Error record {
    int code;
    string message;
    string description?;
    string moreInfo?;
    ErrorListItem[] 'error?;
};

# Definition body of the API definition.
#
# + definition - API definition (OAS/Graphql/WebSocket).
# + url - URL of API definition.
# + apiType - Type of API.
public type DefinitionBody record {
    record {byte[] fileContent; string fileName;} definition?;
    string url?;
    string apiType?;
};

# CORS Configuration of API
#
# + corsConfigurationEnabled - field description  
# + accessControlAllowOrigins - Field Description  
# + accessControlAllowCredentials - Field Description  
# + accessControlAllowHeaders - Field Description  
# + accessControlAllowMethods - Field Description  
# + accessControlAllowMaxAge - Field Description  
# + accessControlExposeHeaders - Field Description
public type CORSConfiguration record {
    boolean corsConfigurationEnabled = false;
    string[] accessControlAllowOrigins?;
    boolean accessControlAllowCredentials?;
    string[] accessControlAllowHeaders?;
    string[] accessControlAllowMethods?;
    int accessControlAllowMaxAge?;
    string[] accessControlExposeHeaders?;
};

# Common configuration of all policies.
#
# + policyName - Name of the policy.
# + policyVersion - Version of the policy.
# + policyId - ID of the policy.
public type BaseOperationPolicy record {
    PolicyName policyName;
    string policyVersion = "v1";
    string policyId?;
};

# Enum for all possible policy types.
public enum PolicyName {
    BackendJwt,
    Interceptor,
    AddHeader,
    SetHeader,
    RemoveHeader,
    RequestMirror,
    RequestRedirect,
    ModelBasedRoundRobin,
    RegexGuardrail,
    WordCountGuardrail,
    SentenceCountGuardrail,
    ContentLengthGuardrail,
    SemanticCache,
    URLGuardrail,
    AzureContentSafetyContentModeration,
    AWSBedrockGuardrail
}

# Configuration for authentication types.
#
# + authType - Type of authentication.
# + enabled - Enable/disable the specific authentication type.
public type Authentication record {|
    string authType?;
    boolean enabled = true;
|};

# Interceptor policy configuration for an operation.
#
# + parameters - Contains interceptor policy parameters
public type InterceptorPolicy record {
    *BaseOperationPolicy;
    InterceptorPolicy_parameters parameters?;
};

# Model based round robin policy configuration for an operation.
#
# + parameters - Contains model based routing policy parameters
public type ModelBasedRoundRobinPolicy record {
    *BaseOperationPolicy;
    ModelBasedRoundRobinPolicy_parameters parameters;
};

# Configuration for model based round robin policy parameters.
#
# + onQuotaExceedSuspendDuration - The duration to suspend on quota exceed.
# + productionModels - The production models for routing.
# + sandboxModels - The sandbox models for routing.
public type ModelBasedRoundRobinPolicy_parameters record {
    int onQuotaExceedSuspendDuration;
    ModelRouting[] productionModels;
    ModelRouting[] sandboxModels;
};

# Configuration for model routing.
# 
# + model - The model to route.
# + endpoint - The endpoint to route to.
# + weight - The weight of the model.
public type ModelRouting record {
    string model;
    string endpoint;
    int weight;
};

# Common policy configuration for an operation.
# 
# + parameters - Contains common policy parameters.
public type CommonPolicy record {
    *BaseOperationPolicy;
    CommonPolicy_parameter[] parameters?;
};

# Configuration for common policy parameters.
# 
# + key - The key of the parameter.
# + value - The value of the parameter.
public type CommonPolicy_parameter record {
    string key;
    string value;
};

# APK configuration for a given API
#
# + id - UUID of the API.
# + name - Name of the API.
# + basePath - Context of the API.
# + version - Version of the API.
# + 'type - Type of the API. ex: REST, GraphQL
# + definitionPath - Endpoint to expose API Definition.
# + defaultVersion - Is this the default version of the API.
# + subscriptionValidation - Is subscription validation enabled for the API.
# + environment - Environment of the API.
# + endpointConfigurations - Sandbox and production endpoint configurations of the API
# + aiProvider - AI provider configuration for the API.
# + operations - List of operations for this API.
# + apiPolicies - Policies like interceptor to be added to the entire API.
# + rateLimit - Rate limiting configuration for the API.
# + authentication - Authentication configuration for the API.
# + additionalProperties - Map of custom properties of API  
# + corsConfiguration - CORS Configuration of API
public type APKConf record {
    string id?;
    @constraint:String {maxLength: 60, minLength: 1}
    string name;
    @constraint:String {maxLength: 256, minLength: 1}
    string basePath;
    @constraint:String {maxLength: 30, minLength: 1}
    string version;
    string 'type = API_TYPE_REST;
    string definitionPath?;
    boolean defaultVersion = false;
    boolean subscriptionValidation = false;
    string environment?;
    EndpointConfigurations endpointConfigurations?;
    AIProvider aiProvider?;
    APKOperations[] operations?;
    APIOperationPolicies apiPolicies?;
    RateLimit rateLimit?;
    AuthenticationRequest[] authentication?;
    APKConf_additionalProperties[] additionalProperties?;
    CORSConfiguration corsConfiguration?;
};

# Configuration for an AI provider.
# 
# + name - The name of the AI provider.
# + apiVersion - The version of the AI provider.
public type AIProvider record {
    string name;
    string apiVersion;
};

# Configuration for Interceptor Policy parameters.
#
# + backendUrl - Backend URL of the interceptor service.
# + headersEnabled - Indicates whether request/response headers should be sent to the interceptor service.
# + bodyEnabled - Indicates whether request/response body should be sent to the interceptor service.
# + trailersEnabled - Indicates whether request/response trailers should be sent to the interceptor service.
# + contextEnabled - Indicates whether context details should be sent to the interceptor service.
# + tlsSecretName - (Optional parameter) The reference name for K8s ConfigMap with TLS information.
# + tlsSecretKey - (Optional parameter)The TLS key name.
public type InterceptorPolicy_parameters record {|
    string backendUrl?;
    boolean headersEnabled?;
    boolean bodyEnabled?;
    boolean trailersEnabled?;
    boolean contextEnabled?;
    string tlsSecretName?;
    string tlsSecretKey?;
|};

# Configuration for Backend JWT Policy parameters.
#
# + encoding - The encoding method for the JWT.
# + signingAlgorithm - The algorithm used for signing the JWT.
# + header - The header used for the JWT.
# + tokenTTL - The time-to-live (TTL) for the token.
# + customClaims - Custom claims to be included in the JWT.
public type BackendJWTPolicy_parameters record {|
    string encoding?;
    string signingAlgorithm?;
    string header?;
    int tokenTTL?;
    CustomClaims[] customClaims?;
|};

# Configuration for Backend JWT Policy.
#
# + parameters - The parameters for the backend JWT policy.
public type BackendJWTPolicy record {
    *BaseOperationPolicy;
    BackendJWTPolicy_parameters parameters?;
};

# Configuration for Retry Policy.
#
# + count - The number of retry attempts.
# + baseIntervalMillis - The base interval between retries in milliseconds.
# + statusCodes - The status codes that trigger a retry.
public type RetryPolicy record {
    int count?;
    int baseIntervalMillis?;
    int[] statusCodes?;
};

# Configuration for API Key Auth Type
#
# + required - If APIKey is optional or mandatory
# + sendTokenToUpstream - Enables sending the API Key to upstream.
# + headerName - Name of APIKey header.
# + queryParamName - Name of APIKey query parameter.
# + headerEnable - Enable sending API Key in header.
# + queryParamEnable - Enable sending API Key as a query param.
public type APIKeyAuthentication record {|
    *Authentication;
    string required = "optional";
    boolean sendTokenToUpstream = false;
    string headerName = "apiKey";
    string queryParamName = "apiKey";
    boolean headerEnable = true;
    boolean queryParamEnable = false;
|};

# Mutual SSL configuration of this API
#
# + required - If mTLS is optional or mandatory
# + certificates - The list of config map refs referring to the client certificates
public type MTLSAuthentication record {|
    *Authentication;
    string required = "optional";
    ConfigMapRef[] certificates;
|};

# Configuration for K8s Secret.
#
# + secretName - Name of Secret. 
# + secretKey - Key containing the relevant value.
public type Certificate record {
    string secretName?;
    string secretKey?;
};

# Configuration for K8s ConfigMap.
#
# + name - Name of ConfigMap.
# + key - Key containing the relevant value.
public type ConfigMapRef record {
    string name;
    string key;
};

