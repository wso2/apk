---
openapi: 3.0.1
info:
  title: WSO2 API Platform for Kubernetes - Configuration generator API
  description: |
    This document specifies a **RESTful API** for WSO2 **APK** - **Runtime Component**.
  version: 1.0.0
paths:
  /apis/generate-configuration:
    post:
      tags:
        - APIs
      summary: Create API configuration file from api specification.
      description: |

      operationId: generateConfiguration
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/definition-body"
      responses:
        "200":
          description: |
            Created. Successful response with the newly created object as entity in the body. Location header contains URL of newly created entity.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/yaml:
              schema:
                $ref: "#/components/schemas/APKConf"
        "400":
          $ref: "#/components/responses/BadRequest"

        "500":
          $ref: "#/components/responses/InternalServerError"      
  /apis/generate-k8s-resources:
    post:
      tags:
        - APIs
      summary: Generate K8s Resources
      description: | 
      operationId: generateK8sResources
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/generate-k8s-resources-body"
      responses:
        "200":
          description: |

          headers:
            Content-Type:
              description: |
                The content type of the body.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/zip:
              schema:
                type: string
                format: binary
                example: "api.zip"
        "400":
          $ref: "#/components/responses/BadRequest"

        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    APKConf:
      title: API object
      required:
        - context
        - name
        - version
      type: object
      properties:
        id:
          type: string
          description: |
            UUID of the API
          readOnly: true
        name:
          maxLength: 60
          minLength: 1
          type: string
        context:
          maxLength: 232
          minLength: 1
          type: string
        version:
          maxLength: 30
          minLength: 1
          pattern: ^[^~!@#;:%^*()+={}|\\<>"',&/$\[\]\s+\/]+$
          type: string
        type:
          type: string
          default: REST
          enum:
            - REST
            - GRAPHQL
            - GRPC
            - WEBSOCKET
        organization:
          type: string
          description: |
            Organization of the API
        endpointConfigurations:
          $ref: "#/components/schemas/EndpointConfigurations"
        operations:
          type: array
          items:
            $ref: "#/components/schemas/APKOperations"
        apiPolicies:
          $ref: "#/components/schemas/APIOperationPolicies"
        apiRateLimit:
          $ref: "#/components/schemas/RateLimit"
        securityScheme:
          type: array
          items:
            type: string
        additionalProperties:
          type: array
          description: Map of custom properties of API
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
        vhosts:
          type: object
          description: |
            Map of virtual hosts of API
          properties:
            production:
              type: array
              items:
                type: string
            sandbox:
              type: array
              items:
                type: string
        corsConfiguration:
          $ref: "#/components/schemas/CORSConfiguration"
    CORSConfiguration:
      type: object
      description: |
        CORS Configuration of API
      properties:
        corsConfigurationEnabled:
          type: boolean
          default: false
        accessControlAllowOrigins:
          type: array
          items:
            type: string
        accessControlAllowCredentials:
          type: boolean
          default: false
        accessControlAllowHeaders:
          type: array
          items:
            type: string
        accessControlAllowMethods:
          type: array
          items:
            type: string
        accessControlAllowMaxAge:
          type: integer
          default: 0
    APIOperationPolicies:
      title: API Operation Level Policies
      properties:
        request:
          type: array
          items:
            $ref: "#/components/schemas/APKOperationPolicy"
        response:
          type: array
          items:
            $ref: "#/components/schemas/APKOperationPolicy"
    APKOperationPolicy:
      title: API Operation Policy
      required:
        - policyName
      type: object
      properties:
        policyName:
          type: string
        policyVersion:
          type: string
          default: v1
        policyId:
          type: string
        parameters:
          type: object
          example: {"headerName":"header1"}
    RateLimit:
      title: API Rate Limit Details
      type: object
      required:
        - requestsPerUnit
        - unit
      properties:
        requestsPerUnit:
          type: integer
          description: Number of requests allowed per specified unit of time
          example: 30
        unit:
          type: string
          description: Unit of time
          enum:
          - Minute
          - Hour
          - Day
          example: Minute
    EndpointConfigurations:
      title: Endpoint configs
      properties:
        production:
          $ref: "#/components/schemas/EndpointConfiguration"
        sandbox:
          $ref: "#/components/schemas/EndpointConfiguration"
    EndpointConfiguration:
      required:
        - endpoint
      type: object
      properties:
        endpoint:
          type: object
          oneOf:
            - type: string
            - $ref: "#/components/schemas/K8sService"
        endpointSecurity:
          $ref: "#/components/schemas/EndpointSecurity"
        certificate:
          type: object
          $ref: "#/components/schemas/Certificate"
        resiliency:
          $ref: "#/components/schemas/Resiliency"
    Certificate:
      type: object
      properties:
        secretName:
          type: string
        secretKey:
          type: string
    EndpointSecurity:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        securityType:
          oneOf:
            - $ref: "#/components/schemas/BasicEndpointSecurity"
    BasicEndpointSecurity:
      type: object
      properties:
        secretName:
          type: string
        userNameKey:
          type: string
        passwordKey:
          type: string
    Resiliency:
      type: object
      properties: {}
    APKOperations:
      title: Operation
      type: object
      properties:
        target:
          type: string
          example: /order/{orderId}
        verb:
          type: string
          example: POST
        authTypeEnabled:
          type: boolean
          example: true
          default: true
          description: Authentication mode for resource (true/false)
        endpointConfigurations:
          $ref: "#/components/schemas/EndpointConfigurations"
        operationPolicies:
          $ref: "#/components/schemas/APIOperationPolicies"
        operationRateLimit:
          $ref: "#/components/schemas/RateLimit"
        scopes:
          type: array
          example: []
          items:
            type: string
    K8sService:
      type: object
      properties:
        name:
          type: string
          example: pizzashack-service
        namespace:
          type: string
          example: apk-platform
        port:
          type: integer
          example: 8080
        protocol:
          type: string
          example: http
    Error:
      title: Error object returned with 4XX HTTP Status
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          description: Error message.
        description:
          type: string
          description: |
            A detail description about the error message.
        moreInfo:
          type: string
          description: |
            Preferably an url with more details about the error.
        error:
          type: array
          description: |
            If there are more than one error list them out.
            For example, list out validation errors by each field.
          items:
            $ref: "#/components/schemas/ErrorListItem"
    ErrorListItem:
      title: Description of individual errors that may have occurred during a request.
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          description: |
            Description about individual errors occurred
        description:
          type: string
          description: |
            A detail description about the error message.
    generate-k8s-resources-body:
      properties:
        apkConfiguration:
          type: string
          description: apk-configuration file
          format: binary
          example: "api.apk-conf"
        definitionFile:
          type: string
          description: api definition (OAS/Graphql/WebSocket)
          format: binary
          example: "openapi.yaml"
        apiType:
          type: string
          description: Type of API
          example: REST

    definition-body:
      properties:
        definition:
          type: string
          description: api definition (OAS/Graphql/WebSocket)
          format: binary
          example: "openapi.yaml"
        url:
          type: string
          description: url of api definition
          example: "https://petstore3.swagger.io/api/v3/openapi.json"
        apiType:
          type: string
          description: Type of API
          example: REST
      
  responses:
    BadRequest:
      description: Bad Request. Invalid request or validation error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Bad Request
            description: Invalid request or validation error
            moreInfo: ""
            error: []
    Conflict:
      description: Conflict. Specified resource already exists.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 409
            message: Conflict
            description: Specified resource already exists
            moreInfo: ""
            error: []
    Forbidden:
      description: Forbidden. The request must be conditional but no condition has been specified.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
            description: The request must be conditional but no condition has been specified
            moreInfo: ""
            error: []
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 500
            message: Internal Server Error
            description: The server encountered an internal error. Please contact administrator.
            moreInfo: ""
            error: []
    NotAcceptable:
      description: Not Acceptable. The requested media type is not supported.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 406
            message: Not Acceptable
            description: The requested media type is not supported
            moreInfo: ""
            error: []
    NotFound:
      description: Not Found. The specified resource does not exist.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not Found
            description: The specified resource does not exist
            moreInfo: ""
            error: []
    PreconditionFailed:
      description: Precondition Failed. The request has not been performed because one of the preconditions is not met.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 412
            message: Precondition Failed
            description: The request has not been performed because one of the preconditions is not met
            moreInfo: ""
            error: []
    Unauthorized:
      description: Unauthorized. The user is not authorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Unauthorized
            description: The user is not authorized
            moreInfo: ""
            error: []
    UnsupportedMediaType:
      description: Unsupported Media Type. The entity of the request was not in a supported format.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 415
            message: Unsupported media type
            description: The entity of the request was not in a supported format
            moreInfo: ""
            error: []
  parameters:
    apiId:
      name: apiId
      in: path
      description: |
        **API ID** consisting of the **Name** of the API.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    organizationId:
      name: X-WSO2-Organization
      in: header
      description: |
        **Organization ID** of the organization the API belongs to.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      description: |
        Media types acceptable for the response. Default is application/json.
      required: false
      style: simple
      explode: false
      schema:
        type: string
        default: application/json
