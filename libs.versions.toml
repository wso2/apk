# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[libraries]
amazonaws-awslambda = {module = "org.wso2.orbit.com.amazonaws:awslambda", version.ref = "awslambda"}
analytic-publisher = {module = "org.wso2.am.analytics.publisher:org.wso2.am.analytics.publisher.client", version.ref = "am-analytics"}
apicurio-data-models = {module = "io.apicurio:apicurio-data-models", version.ref = "apicurio"}
aspectjrt = {module = "org.aspectj:aspectjrt", version.ref = "aspectj"}
azure-applicationinsights = {module = "com.microsoft.azure:applicationinsights-core", version.ref = "azure-applicationinsights"}
azure-messaging = {module = "com.azure:azure-messaging-eventhubs", version.ref = "azure-messaging"}
azure-monitor-opentelemetry = {module = "com.azure:azure-monitor-opentelemetry-exporter", version.ref = "azure-monitor-opentelemetry"}
azure-okhttp = {module = "com.azure:azure-core-http-okhttp", version.ref = "azure-okhttp"}
commons-codec = {module = "commons-codec:commons-codec", version.ref = "commons-codec"}
commons-collection = {module = "org.apache.commons:commons-collections4", version.ref = "commons-collection"}
commons-io = {module = "commons-io:commons-io", version.ref = "commons-io"}
commons-lang = {module = "commons-lang:commons-lang", version.ref = "commons-lang"}
commons-lang3 = {module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3"}
commons-logging = {module = "commons-logging:commons-logging", version.ref = "commons-logging"}
commons-pool = {module = "commons-pool.wso2:commons-pool", version.ref = "commons-pool"}
commons-validator = {module = "commons-validator:commons-validator", version.ref = "commons-validator"}
cxf-rt-frontend-jaxrs = {module = "org.apache.cxf:cxf-rt-frontend-jaxrs", version.ref = "cxf"}
cxf-rt-rs-service-description = {module = "org.apache.cxf:cxf-rt-rs-service-description", version.ref = "cxf"}
envoyproxy-controlplane = {module = "io.envoyproxy.controlplane:api", version.ref = "envoyproxy"}
everit-json-schema = {module = "org.wso2.orbit.org.everit.json:org.everit.json.schema", version.ref = "everit"}
fasterxml-woodstox = {module = "com.fasterxml.woodstox:woodstox-core", version.ref = "fasterxml-woodstox"}
geronimo = {module = "org.wso2.orbit.org.apache.geronimo.specs:geronimo-jms_1.1_spec", version.ref = "geronimo"}
graphql = {module = "com.graphql-java:graphql-java", version.ref = "graphql"}
grpc-netty = {module = "io.grpc:grpc-netty-shaded", version.ref = "grpc"}
grpc-protobuf = {module = "io.grpc:grpc-protobuf", version.ref = "grpc"}
grpc-stub = {module = "io.grpc:grpc-stub", version.ref = "grpc"}
gson = {module = "com.google.code.gson:gson", version.ref = "gson"}
guava = {module = "com.google.guava:guava", version.ref = "guava"}
handy-uri-templates = {module = "com.damnhandy:handy-uri-templates", version.ref = "damnhandy"}
hibernate-validator = {module = "org.hibernate:hibernate-validator", version.ref = "hibernate-validator"}
hikaricp = {module = "com.zaxxer:HikariCP", version.ref = "hikari"}
httpcomponents-client = {module = "org.apache.httpcomponents:httpclient", version.ref = "httpcomponents"}
httpcomponents-httpmime = {module = "org.apache.httpcomponents:httpmime", version.ref = "httpcomponents"}
jackson-annotations = {module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson"}
jackson-databind = {module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson"}
jackson-dataformat-yaml = {module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson"}
jackson-datatype-guava = {module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "jackson"}
javax-cache = {module = "javax.cache:cache-api", version.ref = "javax-cache"}
javax-validation-api = {module = "javax.validation:validation-api", version.ref = "javax-validation-api"}
javax-xml-soap = {module = "javax.xml.soap:javax.xml.soap-api", version.ref = "javax-xml-soap"}
json = {module = "org.json:json", version.ref = "org-json"}
json-simple = {module = "com.googlecode.json-simple.wso2:json-simple", version.ref = "json-simple-wso2"}
junit = {module = "junit:junit", version.ref = "junit"}
lmax-disruptor = {module = "org.wso2.orbit.com.lmax:disruptor", version.ref = "lmax"}
log4j-api = {module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j"}
log4j-core = {module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j"}
log4j-jcl = {module = "org.apache.logging.log4j:log4j-jcl", version.ref = "log4j"}
log4j-slf4j = {module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j"}
mapstruct = {module = "org.mapstruct:mapstruct", version.ref = "mapstruct"}
minidev-json = {module = "net.minidev:json-smart", version.ref = "minidev"}
netty-http = {module = "io.netty:netty-codec-http", version.ref = "netty"}
netty-http2 = {module = "io.netty:netty-codec-http2", version.ref = "netty"}
nimbus-jose-jwt = {module = "org.wso2.orbit.com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus"}
okhttp = {module = "org.wso2.orbit.com.squareup.okhttp:okhttp", version.ref = "okhttp"}
okio = {module = "org.wso2.orbit.com.squareup.okio:okio", version.ref = "okio"}
openapi-generator = {module = "org.openapitools:openapi-generator", version.ref = "openapi-generator-plugin"}
openfeign-feign-core = {module = "io.github.openfeign:feign-core", version.ref = "io-github-openfeign"}
openfeign-feign-gson = {module = "io.github.openfeign:feign-gson", version.ref = "io-github-openfeign"}
openfeign-feign-okhttp = {module = "io.github.openfeign:feign-okhttp", version.ref = "io-github-openfeign"}
opentelemetry-api = {module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry"}
opentelemetry-exporter-jaeger-thrift = {module = "io.opentelemetry:opentelemetry-exporter-jaeger-thrift", version.ref = "opentelemetry-jaeger-thrift"}
opentelemetry-exporter-otlp = {module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry"}
opentelemetry-exporter-zipkin = {module = "io.opentelemetry:opentelemetry-exporter-zipkin", version.ref = "opentelemetry"}
opentelemetry-extension-trace-propagators = {module = "io.opentelemetry:opentelemetry-extension-trace-propagators", version.ref = "opentelemetry"}
opentelemetry-sdk = {module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry"}
opentelemetry-semconv = {module = "io.opentelemetry:opentelemetry-semconv", version.ref = "opentelemetry-semconv"}
pdfbox = {module = "org.apache.pdfbox:pdfbox", version.ref = "apache-pdfbox"}
postgresql = {module = "org.postgresql:postgresql", version.ref = "postgresql"}
snakeyaml = {module = "org.yaml:snakeyaml", version.ref = "snakeyaml"}
sun-saaj-impl = {module = "com.sun.xml.messaging.saaj:saaj-impl", version.ref = "sun"}
swagger-annotations = {module = "io.swagger:swagger-annotations", version.ref = "io-swagger"}
swagger-codegen = {module = "io.swagger:swagger-codegen", version.ref = "swagger-codegen"}
swagger-core-v3 = {module = "io.swagger.core.v3:swagger-core", version.ref = "io-swagger-v3"}
swagger-jaxrs = {module = "io.swagger:swagger-jaxrs", version.ref = "swagger-jaxrs"}
swagger-models-v3 = {module = "io.swagger.core.v3:swagger-models", version.ref = "io-swagger-v3"}
swagger-parser-v3 = {module = "io.swagger.parser.v3:swagger-parser", version.ref = "swagger-parser-v3"}
tomcat = {module = "org.apache.tomcat:annotations-api", version.ref = "tomcat"}
toml = {module = "com.moandjiezana.toml:toml4j", version.ref = "moandjiezana"}
websocket = {module = "org.java-websocket:Java-WebSocket", version.ref = "websocket"}
wsdl4j = {module = "org.wso2.wsdl4j:wsdl4j.wso2", version.ref = "wsdl4j"}
wso2-uri-templates = {module = "org.wso2.uri.template:wso2-uri-templates", version.ref = "wso2-uri-templates"}
xerces = {module = "xerces.wso2:xercesImpl", version.ref = "xerces"}
#Added as direct dependency for transitive dependency version upgrades
reactor-netty-http = {module = "io.projectreactor.netty:reactor-netty-http", version.ref = "reactor-netty-http"}
protobuf-java = {module = "com.google.protobuf:protobuf-java", version.ref = "protobuf-java"}
#Test dependencies
hamcrest = {module = "org.hamcrest:hamcrest-all", version.ref = "hamcrest"}
jacoco-agent = {module = "org.jacoco:org.jacoco.agent", version.ref = "jacoco"}
mockito-core = {module = "org.mockito:mockito-core", version.ref = "mockito"}
powermock-api-mockito2 = {module = "org.powermock:powermock-api-mockito2", version.ref = "powermock"}
powermock-module-junit4 = {module = "org.powermock:powermock-module-junit4", version.ref = "powermock"}
xml-apis = {module = "xml-apis:xml-apis", version.ref = "xml-apis"}

[plugins]
openapi-generator-plugin = {id = "org.openapi.generator", version.ref = "openapi-generator-plugin"}

[versions]
am-analytics = "1.2.15-SNAPSHOT"
apache-pdfbox = "2.0.25"
apicurio = "1.1.5"
aspectj = "1.9.5"
awslambda = "1.11.1034.wso2v2"
azure-applicationinsights = "2.6.3"
azure-messaging = "5.15.2"
azure-monitor-opentelemetry = "1.0.0-beta.9"
azure-okhttp = "1.11.6"
commons-codec = "1.14"
commons-collection = "4.1"
commons-io = "2.11.0"
commons-lang = "2.4"
commons-lang3 = "3.10"
commons-logging = "1.1.1"
commons-pool = "1.5.6.wso2v1"
commons-validator = "1.7"
cxf = "3.5.4"
envoyproxy = "1.0.39"
fasterxml-woodstox="6.4.0"
everit = "1.5.0.wso2.v2"
geronimo = "1.1.1.wso2v1"
graphql = "21.1"
grpc = "1.53.0"
gson = "2.10"
guava = "32.1.2-jre"
hibernate-validator = "5.4.3.Final"
hikari = "5.0.1"
httpcomponents = "4.5.14"
io-github-openfeign = "11.0"
io-swagger = "1.6.9"
io-swagger-v3 = "2.2.9"
jackson = "2.14.2"
javax-cache = "1.1.1"
javax-validation = "2.0.1.Final"
javax-validation-api = "1.1.0.Final"
javax-xml-soap = "1.4.0"
json-simple-wso2 = "1.1.wso2v1"
junit = "4.13.2"
lmax = "3.4.2.wso2v1"
log4j = "2.19.0"
mapstruct = "1.5.3.Final"
minidev = "2.4.9"
moandjiezana = "0.7.2"
netty = "4.1.100.Final"
nimbus = "7.9.0.wso2v1"
okhttp = "4.9.3.wso2v1"
okio = "2.8.0.wso2v1"
opentelemetry = "1.24.0"
opentelemetry-jaeger-thrift = "1.24.0"
opentelemetry-semconv = "1.24.0-alpha"
org-json = "20231013"
postgresql = "42.5.0"
snakeyaml = "2.0"
sun = "1.5.3"
swagger-codegen = "2.4.11"
swagger-jaxrs = "1.6.1"
swagger-parser-v3 = "2.1.13"
tomcat = "6.0.53"
websocket = "1.5.3"
wsdl4j = "1.6.3.wso2v3"
damnhandy = "2.1.8"
wso2-uri-templates = "1.6.5"
xerces = "2.8.1.wso2v2"
#Added as direct dependency for transitive dependency version upgrades
reactor-netty-http = "1.0.34"
protobuf-java = "3.21.7"
#Test dependencies
hamcrest = "1.3"
jacoco = "0.8.4"
mockito = "2.23.4"
powermock = "2.0.2"
xml-apis = "1.4.01"
# Plugins
openapi-generator-plugin = "6.2.1"
