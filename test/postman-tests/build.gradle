/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.6/samples
 */
tasks.register('admin_postman_collection', Exec) {
    group 'postman'
    description 'Run postman collection'
    commandLine 'newman', 'run', 'resources/collections/Test_AdminAPI_Operations-collection.json', '--environment', "$buildDir/APK_environment.json", '--insecure', '--reporters', 'junit,cli', '--reporter-junit-export', "$buildDir/admin-test-report.xml", '--suppress-exit-code', '--verbose', '--delay-request', '1000'
}
tasks.register('devportal_postman_collection', Exec) {
    group 'postman'
    description 'Run postman collection'
    commandLine 'newman', 'run', 'resources/collections/Test_DevPortalAPI_Operations-collection.json', '--environment', "$buildDir/APK_environment.json", '--insecure', '--reporters', 'junit,cli', '--reporter-junit-export', "$buildDir/devportal-test-report.xml", '--suppress-exit-code', '--verbose', '--delay-request', '1000'
}
tasks.register('backoffice_postman_collection', Exec) {
    group 'postman'
    description 'Run postman collection'
    commandLine 'newman', 'run', 'resources/collections/Test_DevPortalAPI_Operations-collection.json', '--environment', "$buildDir/APK_environment.json", '--insecure', '--reporters', 'junit,cli', '--reporter-junit-export', "$buildDir/backoffice-test-report.xml", '--suppress-exit-code', '--verbose', '--delay-request', '1000'
}
tasks.register('runtime_postman_collection', Exec) {
    group 'postman'
    description 'Run postman collection'
    commandLine 'newman', 'run', 'resources/collections/Test_Runtime_API_Operations-collection.json', '--environment', "$buildDir/APK_environment.json", '--insecure', '--reporters', 'junit,cli', '--reporter-junit-export', "$buildDir/runtime-test-report.xml", '--suppress-exit-code', '--verbose', '--delay-request', '1000'
}
tasks.register('create_build_dir'){
    group 'postman'
    description 'create build dir'
    mkdir buildDir
}
tasks.register('clean', Exec){
    commandLine "rm", "-rf", "$project.buildDir"
}
task generate_environment_json {
    group 'postman'
    description 'update environment json file'
    mustRunAfter create_build_dir
    doLast {
        def gwHost;
        if (project.hasProperty("gwHost")) {
                gwHost = project.property("gwHost");
        }else {
            gwHost = "localhost";
        }
    def currentDir = System.getProperty("user.dir")
	println 'applying environment.json value' + gwHost
    def environmentJsonPlaceHolder = new File("${projectDir}/resources/environments/APK_environment.json.template")
    def newEnvironmentJson = environmentJsonPlaceHolder.text.replace("GW_HOST", gwHost);
    newEnvironmentJson = newEnvironmentJson.replace("TEST_ARTIFACT_PATH",currentDir+"/resources/artifacts");
    def newEnvironmentJsonFile = new File("$project.buildDir/APK_environment.json");
    newEnvironmentJsonFile.text = newEnvironmentJson;
    }
}
tasks.register('run_all_collection'){
    group 'postman'
    description 'Run postman collection'
    mustRunAfter 'generate_environment_json'
     doLast {
        def index = 0;
        fileTree(dir: 'resources/collections').visit { FileVisitDetails details ->
            if (details.file.isFile()) {
                def report_name = "test-report-"+index+".xml";
                def file_name  = details.file.absolutePath;
                exec {
                commandLine 'newman', 'run' , file_name , '--environment', "$buildDir/APK_environment.json", '--insecure', '--reporters', 'junit,cli', '--reporter-junit-export', "$buildDir/$report_name", '--suppress-exit-code', '--verbose', '--delay-request', '1000'
                }
                println("Found file: $file_name")
                index += 1;
            }
        }
    }
}

tasks.register('test'){
    group 'test'
    description 'Run tests'
    dependsOn generate_environment_json
    mustRunAfter generate_environment_json
    dependsOn run_all_collection
    doLast{
        println buildDir
    }   
}