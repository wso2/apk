---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 5432
---
# Source: kubernetes-gateway-helm/charts/redis/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: redis
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: redis
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    # Allow inbound connections
    - ports:
        - port: 6379
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
---
# Source: kubernetes-gateway-helm/charts/redis/templates/master/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
    app.kubernetes.io/component: master
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: master
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: apk-cert-manager-cainjector
  namespace: default
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: apk-cert-manager
  namespace: default
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: apk-cert-manager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
automountServiceAccountToken: false
---
# Source: kubernetes-gateway-helm/charts/redis/templates/master/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/apk-service-account.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wso2kgw-platform
  namespace: default
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
type: Opaque
data:
  postgres-password: "d3NvMmNhcmJvbg=="
  password: "d3NvMmNhcmJvbg=="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: kubernetes-gateway-helm/templates/cert-manager/issuers/apk-root-certificate-secret-original.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kgw-root-certificate
  namespace: default
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQWVXZ0F3SUJBZ0lVZDRuanY4eVNQZ283dDBGMWUyYUpFbzlUcFE0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0RqRU1NQW9HQTFVRUF3d0RZWEJyTUI0WERUSXpNRE13T1RBNE1UWXpORm9YRFRNek1ETXdOakE0TVRZegpORm93RGpFTU1Bb0dBMVVFQXd3RFlYQnJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUExRzlCQWNWYTNhTWVteEVSWStKOFVtSC9XOEpwY0VPdGRlTlg1WU5paG5OT1h0bHZoU3pGek9QYUs5N1AKcjRJcUdBU2JWTmlSKzFKNldFb2kvYjZaSlR4MHEzWVVuMFlsUUpyejdnMjBUZG9HSmp4R1ZXem4wRVc0YmVIWApHcTYwdlhMZjR0M21sTENMR0lLM2tKVFdBb1J6ZDc0ZGpWNys1djBCbS82S0JCQVdjdTVVYk9EOUtScE9zeEdNCm4zWjAxMDNvQUdWaXlxODRRdEZ2aFhWTld0dERMZTJqVS83bzQyZGRhSm96Ukw5eisxQWVwZG9XUHlKWklacVUKYlhjR0FrN2lkazdjLzhkS014d0FtM0NWL1d2Z1dyVks1UitZVGlHcVJmNXBkOVdXQ3lkRVZRa05xQ1pnVFBOeQpCVFJ2SG81Mm9uUG5UNkFMdE1JMG1uV0x0UUlEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVenhjQThjZUNGNXQrCnZQZU9wWWJpMTFDV2p3Y3dId1lEVlIwakJCZ3dGb0FVenhjQThjZUNGNXQrdlBlT3BZYmkxMUNXandjd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGQ0tkNXg4ejY0cDFqOUJub1NBbApKSnVOejR1V2p2L1lLOTRCM3MzS1VrWE9Yakh1THVhemtTc3MyVUhGYitLZUxkNnZoaW1NNVFxa0ZzVUVNc25DCjhSeUJaUDU4a2doY0x6SmxkNVVpd2xuci9SdU9BTnZjdjRlS1Nhdnd1NS9BQlh1TVVRYi9Hdkt0V1BycjJWYkoKVUxnM3A3TkdpZ1hISGc4NGVWTUE3b05YMVo1UjJjUzRJU2tsV1htNVNwTVBoK1NOQ2dxd3FoeFJOWUoySjBFWgpxbHA0b2ZRRzNHSjcySitEUkhsTnVqV0Vza1A1SUpqdzZ3OFEwempYeDI2eWVsR2UyK1RNNkJCN1BwQ042a05VCnpIbzJrLzU3NWJ1MmlaenRuWVZtRTc0SDFXM2NYSjdjMHE4MnVVRnZkVytGbFJ0bStPUElpSUdLNzRsRmlaTkIKT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFViMEVCeFZyZG94NmIKRVJGajRueFNZZjlid21sd1E2MTE0MWZsZzJLR2MwNWUyVytGTE1YTTQ5b3Izcyt2Z2lvWUJKdFUySkg3VW5wWQpTaUw5dnBrbFBIU3JkaFNmUmlWQW12UHVEYlJOMmdZbVBFWlZiT2ZRUmJodDRkY2FyclM5Y3QvaTNlYVVzSXNZCmdyZVFsTllDaEhOM3ZoMk5YdjdtL1FHYi9vb0VFQlp5N2xSczRQMHBHazZ6RVl5ZmRuVFhUZWdBWldMS3J6aEMKMFcrRmRVMWEyME10N2FOVC91ampaMTFvbWpORXYzUDdVQjZsMmhZL0lsa2htcFJ0ZHdZQ1R1SjJUdHoveDBvegpIQUNiY0pYOWErQmF0VXJsSDVoT0lhcEYvbWwzMVpZTEowUlZDUTJvSm1CTTgzSUZORzhlam5haWMrZFBvQXUwCndqU2FkWXUxQWdNQkFBRUNnZ0VBQ1VMRVdiaHB5cW0yeHRuS29Va1pWRm9UVU1PNzV2bjhVTnhWVTVzVHEzclIKV3M4dHptZHlSQWxXMUh6Rkh3aVVuekZzT0JtczI0RHY5bk5jN1NUbTlqbVplSFFRV0JVdHdKQkF2QXI2NWozdgo4TERGL0NsZ1BiTWNaQ1hwUTYrRUQ1STNjbU5zRHVWWFd2MHYxV3kzbTZwOGdpYldrUGdvTXBlcS8wcnNaMXJiCjB6TDhuNkpENUtxc3JjWE5WODNObTZqUmxUMzJZWGZreHpwczhpME1PZGYyLzllQmVrMC93N2xBTU0wNFQ3dXMKNWRHeVRFNHo3eThYVndscmF6WFlMM2VUL3RDOHY4M3BrWXNlOWdBZ2I4Z3MrRmlhTUc3WG1sMmpmY05YV1I0ZwpHRmRSMmRJVlNQbnJwdldLajNrS0IwVXFsVVplakp2WkhhQlk2cStDd1FLQmdRRGRKbFB3MUFONjhncVVMdjB2CmltMWNyVTJneS9kbzZpWjl0Y05MdjgxblMzS1JtRVllKzBTYzZZR3dNQWtPWjd0S1BTMnNsRU9IUDUzQjVseU8KakttSlhkQXBvZVUzSW5lOW5kRGs3TEoxNVpsTkFzNXlWb1pjdzdINHp2YTIwM0c2UDFnZWpja2RpOWVicDFnVAorUVpNSmZjdHJtaExDaDhQR1ZzZDRPaFFNUUtCZ1FEMTZWYVRDQ243MElESFNnLzJia1M3NjJzK2dmcHJpK3hCCjE4UmhMOVowL1RQQVl2dUpqNWNUaHh6S2hGWG53ZDRHVGZ4eFdnaURsV3lIb1BjRDhLT2JLM1htT1ZUUEg2WDcKNjdNdTc4bWxLZlVZY3VrM244ekFmc1FkQzBBNmNRRVlhcVFIMW4wSjZVM255RnNwL0hJWis1NjhQQmQwT0dMUQprWmdrc3oyMnhRS0JnR01uZEN0ZVk5RVVCTG83OXprQmo5Y2x2TkNEb3dKZk9iTFRkQ1RhY25ZRjFmQ0JuYTcyCmFlVVFyUjBaN0hXUS9PQmtYYjRyRzd2Z1FoTlYvZG5NSjVkM2dJV3FHT09IaUxoenNkMXlZdkdKYUJxblQzamsKWW9ubEZEN0NUTXZjTWZtWHZTSzEzNTVudk53RlEvQndqdXBGZTNYMzVMc0FacnlXV2N3anN3V0JBb0dBYTNidApQcFB5eFBqNVRoNHZtNkhVcDhyWnN4ZGFPR1dOZWJpeE9VZU9rTkdXTEIwVmo2Z1FmWmd1SE5KNE9DK2d0MkNkClVXdm5ESm5nTStWRURaUzc2ck96Y2tqYnB5aE5nU29meEFOR084ZDZOSlVERml2ZmJyLzNORG9XZDNPcTV1Q3oKampsTnEyY3BoSUVxVmM3Y2pqNUh3RHNDaE9lZlIwWlpGckM5NTRFQ2dZRUFwZHloY1FiL1o0WXJ5bHJmelJycAovR0RjdVg5TlQxWDdtT2tCamExVXUvSTV6ZFVMYzkrNjZUc3IyTEhiVUdtUkhnTGx4NHo1U1dIeVJiTnhOUENwCkN1Q0svdkh6TlN6YlZVeDRUSzBYZHJHOWI5SHRXcU4yU0pERk9tSXBVYUJPd25SYThxa3hwSTF3YWRsT2ZYejUKUFdIQ3RJcWRkdlRkeG50TnpxekRnVzg9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/common-controller-sts-shared-auth-key.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
data:
  auth_key.txt: MmpybXlwYWszOTF6c3F6OTc0dWdkZGRlYmY4MTJvZngxYjl0MW9xMjc1MzBpcjAydGM4MTVlZW1yeDQzNXF2Y3A0MXVjZ3k3djV1dWF3emk0cWNtanJ4MGsxemdveDJzMjhjcg==
kind: Secret
metadata:
  name: apk-wso2-kgw-sts-shared-auth-key
  namespace: default
type: Opaque
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-keystore-secret.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Secret
metadata:
  name: apk-wso2-kgw-enforcer-keystore-secret
  namespace: default
type: Opaque
data:
  mg.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGZXUkE5cUVRcHZYSDkKYnhCTDBkU2YwOEMycENYRDhrcno5am1ibk1XMVR3c2w2SjhwWFNpSmhJU2VpMzdqSzdzZWFLUVhseGN5SG9YUApDQ0kyUHlWTmhwWW9aNjVUeEpUQTBOa0xuTTJZME9wMm9wR0U1S2piRFRUQmZscjRyZXlCMUdITTkrcVNHL3BpClp2c1gwcDVVMldEK3RKSlhKUXZzZW9vVnVTRDV3Nmk0eWtMZmRWMTFBUlJ0dzFmcGJvVGtyQUs1dzZWWU5KTVkKSThIUHhTeU5iSW5BWVdFdFdNem1ETUR0MTE4WFdFOWtpQ3JtZHhhdGpVaDNkeHhOSTNCMG1oNXFYTll6ZU9KRAp1RGhHNWNQSE5rUWpwbFJRczJyK3h6d0ZLTVppQUFOZzdEQk43L01LUjNPdnlCSHhVbEZPNTBESlZHamQ3Z0NWCk1XUUZZY25QQWdNQkFBRUNnZ0VBTGZXMzM5ZzJYcGg3VW5sK1V2dlUweWJSNjBPUCtlaHNBQlBVK3U2aHlKT0IKYWNXYXF2cGVreDNQNUlnMERpODdqQ0JnVS9KbGRZek9ZREgrU0VkcU42L1FTblE3YlVWd2p0VHJOUGFKWUQ3dApZSWhIaFo5QUdBTjVyYStBck5ldGFYSDR4aUxtQkRiNXFUSWp6VjByODYzZnhjb0dxeVFXZGcwcFNSc1ZiQSt5Cng0Q0NuV0JsMkoxYWRWMXhRSXljTGU5Rk5ubTVvUm9Na2hrNjRuN2crY2REbVQ3UjNJOG1RNHhxaXVNaGpaZEoKQmplWEc1ZGExVjlRNEN4YTJ0QU9PZXhNNVJZYnVPd3dsaDVPc2c2eXZtaFNrZkZVbUhEVUplbEN2dVFaSm5hbApkaGxJbzNoL3R5RlN4NG05L2tCRG5ZcnB5RXdiQ2k4c3QyTGJ6cFd1MFFLQmdRRHg5NXNjL1N0NHFPczNsNyt3ClFGelpFUFhMSDhNZU0wWk96VmpIZ0k1YzVDbDZaR0tVR0ViWmpxd3E5YnlZZGp6SkJ2QmNXNS81TmMrMk5Oam4KRkQ0dDRCVE5wYVlVTWRPMHVSdy84R0VGYXFNVzRoT3pOUE1TaEM2RDc4NEU2eXhrZTdTaEJQZE5wZjErN2tSNgpuTzhrWFBIV1JNTEt1U1NQeVdGVVFTeEduUUtCZ1FEc1RRWWE4N3ZFTkNuWm1HWUM1Q1ZKRWFURTg0R2xXVlExCnRlOUt1YUtraFNjRDljam9Sdm1zMDVZNm8wdmJUb1Jma3hNT0V1WXQ1SldORzB6eFVYRWF3VVdZSGVuT1NhRU0KaXpNaDV5MkZxSStxV01WK0c5YVZCUDNGTGJaVHhaSU9XT3ZPRUxrYmkvc2FsMGxtTStKY29odUx5bG5scytsMwpXbjZRdnNCd1d3S0JnSHBaQ3hPamFBSEExLzdxT2tEeXFvQVB0VmthSEZ6KzdFUVlUUlhEaVRpckhkWUhRRmxGCjFUMVlpUEhJQTY3THlueVRoNklMcWw0bXVYcVdTajY5MjVyeXZWSW11azFuekhhTFN4K0JlbTEwdURadjVpb3QKVWVOQTl3dzdpMTZ0VTJzVHFnZnBMT3NVVFpPTEF4RkVuUjh6NkF6Q0JBVGhqUDB2aElsSDB3MTVBb0dCQU05awpIcHFqRmtYeWZsU0N3KzEvclJXL1RYeXFOendXOWFpYVFDVzJYWC9GZVdPcFlTWXp2TWdwZisyQkNuKzFIc3IvCk96Y2I4VGVRS28ySXkzUDB4YTcwdUE3MUdoSTZYd1d5V2pORVFaalFReDhBQUgxWkUzRUF5M1UyVkpLYmtUL1UKWFVrak5rTnVEUG5lazhZR2ZZSk5xSjE5QUg5dzh0UVU4WVk2VkkySEFvR0JBTnJNd2x3WGx5VnpWNzJzZ3BtZQpRc2tuZjdCeVUyOEJ0dlZraGtMdTdWVnhVd2F3cEFNM3ZES1pwc0trek1xQUlpa1hIeWMyRmtobUE4VkFMaHdiClZqNnMrTDUrL1BxcVloT045cG9hZGVJTUZUaHcvaldRYUVjcW9yc21HSHdJQnhkQi9MZStKc1o4ZmR4U0huUTAKd1B3TFFzVGVQLzJ3dnlFWXdZZzlxYVNjCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  mg.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrekNDQW51Z0F3SUJBZ0lKQVBEOGVTM2VtY3JRTUEwR0NTcUdTSWIzRFFFQkN3VUFNR1F4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpEUVRFV01CUUdBMVVFQnd3TlRXOTFiblJoYVc0Z1ZtbGxkekVOTUFzRwpBMVVFQ2d3RVYxTlBNakVOTUFzR0ExVUVDd3dFVjFOUE1qRVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQ0FYCkRUSXlNVEV4TnpFNE1EWXpPRm9ZRHpJd05USXhNVEE1TVRnd05qTTRXakJrTVFzd0NRWURWUVFHRXdKVlV6RUwKTUFrR0ExVUVDQXdDUTBFeEZqQVVCZ05WQkFjTURVMXZkVzUwWVdsdUlGWnBaWGN4RFRBTEJnTlZCQW9NQkZkVApUekl4RFRBTEJnTlZCQXNNQkZkVFR6SXhFakFRQmdOVkJBTU1DV3h2WTJGc2FHOXpkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTjlaRUQyb1JDbTljZjF2RUV2UjFKL1R3TGFrSmNQeVN2UDIKT1p1Y3hiVlBDeVhvbnlsZEtJbUVoSjZMZnVNcnV4NW9wQmVYRnpJZWhjOElJalkvSlUyR2xpaG5ybFBFbE1EUQoyUXVjelpqUTZuYWlrWVRrcU5zTk5NRitXdml0N0lIVVljejM2cEliK21KbSt4ZlNubFRaWVA2MGtsY2xDK3g2CmloVzVJUG5EcUxqS1F0OTFYWFVCRkczRFYrbHVoT1NzQXJuRHBWZzBreGdqd2MvRkxJMXNpY0JoWVMxWXpPWU0Kd08zWFh4ZFlUMlNJS3VaM0ZxMk5TSGQzSEUwamNIU2FIbXBjMWpONDRrTzRPRWJsdzhjMlJDT21WRkN6YXY3SApQQVVveG1JQUEyRHNNRTN2OHdwSGM2L0lFZkZTVVU3blFNbFVhTjN1QUpVeFpBVmh5YzhDQXdFQUFhTkdNRVF3ClFnWURWUjBSQkRzd09ZSUhZV1JoY0hSbGNvSUlaVzVtYjNKalpYS0NCbkp2ZFhSbGNvSUpiRzlqWVd4b2IzTjAKZ2hGdFlXNWhaMlZ0Wlc1MExYTmxjblpsY2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWNsY0NqWGppS3J1UwpyWUhNRjNDeDBPSmEwS2tlWkoxVkxFY0xseXAvTXp4VEdvdnk5MXR3NlhNVVFFbndqVkxLWUc5T3Q1MU9wc3pyCmdqQXBGSnE1QlZyblJsNHp0ajFsdHVMUmpyVzBlSnIrckNpbUFKdVI0ZUhMRTUrRU5uc2t1cGVNUXdyUG50dFMKdkVMUkZmMm1Zd3JqY2sxZFdNUGhsOGUyQmh4bDN3QXgwb1o0Z0k4d2dSSThndlVNYW0xd0hzeWR1NEpCYVRuWgpSM2FpOFpIU1Q2QlZHTUhBMFdUVTFpVWJyK0dDUkFjRE5kSkJpNHpCY0JzejREN09RdTBVK1dPbTBXWlNWNGZjCmNXdTE5K0pydk1KN0llWDNaaHFSdkdiblQzWVVSSFpoUGZsbGFoYWZTNlhMYzBzeExYMFV5RGJybkk2enZoRWMKb1NySFI0WGcwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-truststore-secret.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Secret
metadata:
  name: apk-wso2-kgw-enforcer-truststore-secret
  namespace: default
type: Opaque
data:
  mg.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrekNDQW51Z0F3SUJBZ0lKQVBEOGVTM2VtY3JRTUEwR0NTcUdTSWIzRFFFQkN3VUFNR1F4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpEUVRFV01CUUdBMVVFQnd3TlRXOTFiblJoYVc0Z1ZtbGxkekVOTUFzRwpBMVVFQ2d3RVYxTlBNakVOTUFzR0ExVUVDd3dFVjFOUE1qRVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQ0FYCkRUSXlNVEV4TnpFNE1EWXpPRm9ZRHpJd05USXhNVEE1TVRnd05qTTRXakJrTVFzd0NRWURWUVFHRXdKVlV6RUwKTUFrR0ExVUVDQXdDUTBFeEZqQVVCZ05WQkFjTURVMXZkVzUwWVdsdUlGWnBaWGN4RFRBTEJnTlZCQW9NQkZkVApUekl4RFRBTEJnTlZCQXNNQkZkVFR6SXhFakFRQmdOVkJBTU1DV3h2WTJGc2FHOXpkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTjlaRUQyb1JDbTljZjF2RUV2UjFKL1R3TGFrSmNQeVN2UDIKT1p1Y3hiVlBDeVhvbnlsZEtJbUVoSjZMZnVNcnV4NW9wQmVYRnpJZWhjOElJalkvSlUyR2xpaG5ybFBFbE1EUQoyUXVjelpqUTZuYWlrWVRrcU5zTk5NRitXdml0N0lIVVljejM2cEliK21KbSt4ZlNubFRaWVA2MGtsY2xDK3g2CmloVzVJUG5EcUxqS1F0OTFYWFVCRkczRFYrbHVoT1NzQXJuRHBWZzBreGdqd2MvRkxJMXNpY0JoWVMxWXpPWU0Kd08zWFh4ZFlUMlNJS3VaM0ZxMk5TSGQzSEUwamNIU2FIbXBjMWpONDRrTzRPRWJsdzhjMlJDT21WRkN6YXY3SApQQVVveG1JQUEyRHNNRTN2OHdwSGM2L0lFZkZTVVU3blFNbFVhTjN1QUpVeFpBVmh5YzhDQXdFQUFhTkdNRVF3ClFnWURWUjBSQkRzd09ZSUhZV1JoY0hSbGNvSUlaVzVtYjNKalpYS0NCbkp2ZFhSbGNvSUpiRzlqWVd4b2IzTjAKZ2hGdFlXNWhaMlZ0Wlc1MExYTmxjblpsY2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWNsY0NqWGppS3J1UwpyWUhNRjNDeDBPSmEwS2tlWkoxVkxFY0xseXAvTXp4VEdvdnk5MXR3NlhNVVFFbndqVkxLWUc5T3Q1MU9wc3pyCmdqQXBGSnE1QlZyblJsNHp0ajFsdHVMUmpyVzBlSnIrckNpbUFKdVI0ZUhMRTUrRU5uc2t1cGVNUXdyUG50dFMKdkVMUkZmMm1Zd3JqY2sxZFdNUGhsOGUyQmh4bDN3QXgwb1o0Z0k4d2dSSThndlVNYW0xd0hzeWR1NEpCYVRuWgpSM2FpOFpIU1Q2QlZHTUhBMFdUVTFpVWJyK0dDUkFjRE5kSkJpNHpCY0JzejREN09RdTBVK1dPbTBXWlNWNGZjCmNXdTE5K0pydk1KN0llWDNaaHFSdkdiblQzWVVSSFpoUGZsbGFoYWZTNlhMYzBzeExYMFV5RGJybkk2enZoRWMKb1NySFI0WGcwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  wso2carbon.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxVENDQXBHZ0F3SUJBZ0lFWWZFVlNqQU5CZ2txaGtpRzl3MEJBUXNGQURCa01Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhGakFVQmdOVkJBY01EVTF2ZFc1MFlXbHVJRlpwWlhjeERUQUxCZ05WQkFvTQpCRmRUVHpJeERUQUxCZ05WQkFzTUJGZFRUekl4RWpBUUJnTlZCQU1NQ1d4dlkyRnNhRzl6ZERBZUZ3MHlNakF4Ck1qWXdPVE15TlRoYUZ3MHlOREEwTXpBd09UTXlOVGhhTUdReEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUkKREFKRFFURVdNQlFHQTFVRUJ3d05UVzkxYm5SaGFXNGdWbWxsZHpFTk1Bc0dBMVVFQ2d3RVYxTlBNakVOTUFzRwpBMVVFQ3d3RVYxTlBNakVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBa2RnbmNvQ3J6NjU1THE4cFRkWDA3ZW9WQmpkWkRDVUU2dWVCZDBEMWhwSjAKL3pFM3gzQXo2dGx2enM5OFBzUHVHemFRT01tdUxhNHF4TkorT0t4Sm11dERVbENscHV2eHVmK2p5cTRnQ1Y1dApFSUlMV1JNQmpsQkVwSmZXbTYzK1ZLS1U0bnZCV05KN0tmaFdqbDgrRFVkTlNoMnBDRExwVU9ibWI5S3F1cWMxCng0Qmd0dGpONHJ4L1ArMy92KzFqRVRYeklQMUw0NHlIdHBRTnYwa2hZZjRqL2FIamNFcmk5eWt2cHoxbXRkYWMKYnJLSzI1TjRWMUhIUndEcVppSnpPQ0NJU1hEdXFCNndndVkvdjRuMGwxWHRyRXM3aUN5ZlJGd05TS05yTHFyMgozdFIxQ3NjbUxmYkg2WkxnNUNZSlREKzF1UFN4MEhNT0I0V3Y1MVBiV3dJREFRQUJvMk13WVRBVUJnTlZIUkVFCkRUQUxnZ2xzYjJOaGJHaHZjM1F3SFFZRFZSME9CQllFRkgwS1EzWVRaSnhUc05zUHlyWk9TRmdYWGhHK01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTEJnTlZIUThFQkFNQ0JQQXdEUVlKS29aSQpodmNOQVFFTEJRQURnZ0VCQUZOSjM0Q0lpSWxDeG15cDI3K0tBMjI0TGFIVnRMNUR1Y0ZLMFAyMkZRK1FLa09OCmlVd083MEtvVkZyZUJIMVNteHU0ZVBXazZyTVpGT001b0w4SFhZZzN0d3krNWVHY0wzUFFkN1g1ZHdBcWxWaXYKem9rb2k2U0RhQS9iSUc2Si9PMVU5UWQ0WEVWSmRWdUxxamsxK2NwNzBBTHQwWDZCN3NOTGZqRmNiejNqUVVMTgpuSzhITnZxYm43elF1UDEwczhwNXkycVZrUEJBL3BqaWdSRHNJV1I2cDc4UUVTRitUYUhGanhmY0Q2ZjljbllpCmUreUVIRVJ0RzhrOHg1akxGZStvZEkxL1FHWlA4Rnkwb0tUK0UvVEoxRkJoNHJCMUZ0S3lscUdlYXVQdTg5RG4KYUo5K2t2cE5ROTR5Rm1FdWh0REJ5dkRpanhBcXZsaW4zVFBJZnk4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  wso2-apim-carbon.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR1VENDQXFHZ0F3SUJBZ0lVWjNyWUtWTlpUL2FUTWpPQ21qc0JsUDlsT3ZRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pERUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWtOQk1SWXdGQVlEVlFRSERBMU5iM1Z1ZEdGcApiaUJXYVdWM01RMHdDd1lEVlFRS0RBUlhVMDh5TVEwd0N3WURWUVFMREFSWFUwOHlNUkl3RUFZRFZRUUREQWxzCmIyTmhiR2h2YzNRd0hoY05NalV3TWpFek1UTXdNREV4V2hjTk1qY3dOVEU1TVRNd01ERXhXakJrTVFzd0NRWUQKVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEZqQVVCZ05WQkFjTURVMXZkVzUwWVdsdUlGWnBaWGN4RFRBTApCZ05WQkFvTUJGZFRUekl4RFRBTEJnTlZCQXNNQkZkVFR6SXhFakFRQmdOVkJBTU1DV3h2WTJGc2FHOXpkRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSy9UejlGdnUxTXplUko5WWxFUGdCT3MKcitvQU5QeUJHZkhlSlV5M0pKdlZPWGhMdTZMWEZVcGxDZlBXcWVoZUxwTUlVeE5xTFZkaTN1ZU5mYnFYOVppbgorQU5weDVtK0Z0d2tqNXdjVFBDbmpEcnJobk81TFRReHJvdDlldHB5NTFIZ1ZXdTJpVTVsTWVSb0k0d0FkaWRnCndkS2NaS1JDRWV1UnlkU1hlekwwQ0dXRXAzdGRBNS8vc0o1bGl5WjF4ckIyODZrRUpyS2VHRE9KNWlUNWh3TFkKZEpUYzBQbGRJRjhIU2UvYnNXQWxEL05ZUUEyb0N4SUYxdmUvTVBlT2FMOGtmQml0eXQxNlJ0cDdQa25pUXZtNwp5VldjT01ja01uc0FhOTh0UHFtSFVwNHc5dnVEdHlDaG94dVkyWXg0VjBlaXFpUlFKQmRKcitpOUtCWlV2S01DCkF3RUFBYU5qTUdFd0ZBWURWUjBSQkEwd0M0SUpiRzlqWVd4b2IzTjBNQjBHQTFVZERnUVdCQlRCL2J3SzNZL0EKdUlYb05vOGxOdVdMNFZKSEJUQUxCZ05WSFE4RUJBTUNCUEF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFRwpDQ3NHQVFVRkJ3TUNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNsN2xXZm0xU05YeHh6MFBjY1R2WGIzVXV0CmowWUVlRms3NGJSMEFGa1ozV1RFT2NoVFpPYTNlakpwcHBMU2l3QWVSYldENm82LzBSMDRsTGdmQWU3WTVha2gKOFg5N0ozR0dob2pjbjlKclMrRkNDanhmSVQ2MXF3QXdzYUdKbWdvSUFwTEdhOUhLOTFWL0NnemkvbHdPalhpNgpSYWZpMEROSTkxWHJJQ3lNR292K1Z3bzV5YmJWeVk3bGFOMk5WTnVRa0dKbXZNNDZ3YjkrMmpuNFN6T3pZdU93Ck1ISmlYRFNoOVpidWFLaU5pQXRiaVZnWXNLbWZyaWFzVmVhd1oxbFFEcFhKQUJ0K0EyTm5BNFlySTNJSjZvazYKaFpqcmdKcWQyYzVhZGpEdzgrTERNR1lZNTIwamNhdjVuRXVMYWliMmJkRkRYSzZOaGtCMElBV2cwbFNHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ds/idp-signing-keystore-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: apk-wso2-kgw-idp-signing-keystore-secret
  namespace: default
type: Opaque
data:
  wso2carbon.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBa2RnbmNvQ3J6NjU1THE4cFRkWDA3ZW9WQmpkWkRDVUU2dWVCZDBEMWhwSjAvekUzCngzQXo2dGx2enM5OFBzUHVHemFRT01tdUxhNHF4TkorT0t4Sm11dERVbENscHV2eHVmK2p5cTRnQ1Y1dEVJSUwKV1JNQmpsQkVwSmZXbTYzK1ZLS1U0bnZCV05KN0tmaFdqbDgrRFVkTlNoMnBDRExwVU9ibWI5S3F1cWMxeDRCZwp0dGpONHJ4L1ArMy92KzFqRVRYeklQMUw0NHlIdHBRTnYwa2hZZjRqL2FIamNFcmk5eWt2cHoxbXRkYWNicktLCjI1TjRWMUhIUndEcVppSnpPQ0NJU1hEdXFCNndndVkvdjRuMGwxWHRyRXM3aUN5ZlJGd05TS05yTHFyMjN0UjEKQ3NjbUxmYkg2WkxnNUNZSlREKzF1UFN4MEhNT0I0V3Y1MVBiV3dJREFRQUJBb0lCQUFlRnd3QnpSZWxsWjJ5OQpXTlVNbkhYZnVyYU5DUFBKRTdMYmFXQnhvazI1cE5LUTJGUUV6bzRRMUdVeUZkelZsYVRPVzFhdExic1V5UWRKCk90SWVMaXhtY1hJcWVoRGRDZnA5QnNGcWhTUFdrZ0RscEVPSTZSaWlaKzFSYmtsWXRTTS93T0dFWHBtcWxFaGwKa3hsWmdrV0VaYWFBQWRCTUhVcXdvNHdsclVGZXBlN0xGSHdIV3paOGRjUlpuaUhwVURiSVd0VkVwKzJMZzFhOQpBdS9reEZTUklJK0Z6WU1RRExIVDh0WWRiajVXbjN4Sms0Tk01c09JRm5iZ2FNbHhwRXFlNWVjYzY0NHZ4NHRrCkVEYVdFOExidmNCZ2NSb2thR2daS05TVmRHM1JQdWFjWDhGUG9IeGdrbHEvMldENzlxUGRZdUdmRFQxWEhCUXEKeFRqb2R0a0NnWUVBeDhCcDJpOGh4Zmc3ekQxZDAzTmFZekFad3loZnVMNmhvQXhHUGdMVzQvVktNOEtHSnU3UQo2QnZrZUpkVkY4UzlvZlQ5RHRRUUFMS3FTN3NValBDdFdxK3FSeUR0S2VTM3lzRmxvUlRHZ1VnU3ZmNFpKMDByCkQyU28xTjhwUWtNcmNud2lPTnpzaWZtVE9ZWHpQQ0oyeXlnVk1kZGxQb3BCL21EN2ZLMmhUTGNDZ1lFQXV1bXoKODZCdzRuYzg1bGgyL2xDYTBORXdRcUU3Nm5rekNUaUhGdTU2SmswUUMxZ2pBUWRBc2J2WFloeHUrOGUxR2R4Twp1eVlhYkFYN042c0NJQzFuVlNZL2lVZWFnMnh2b0lZVkZiZ2xaWFNjWUxpQmZGNVZtOEF0aUlGdi9Fc0ZZZW03CkswT2l5U09GZ1NtRmlCRVRrTnFUNExwcGNYbzM2OGgwTzhnL3luMENnWUFwRjVJdkNrY2VYTVNnYlhkaHluY3IKdEhkNFNGUDR3MjZvYUI0REg3NXBRc3F5L3k5dHp1ODI4Slg5b05RbWdaaXBPcWJjYUErcXRSYUhZY01HZzNTRwpGV0VvSk1QbFBHSDYyZkk0UXZmYkhLS09aemx4ZGxTSFpDTy9OdkZiNmttRDBibVFqUkkwQ0IyYlZjMEY3K2tVClBmaXVPaXRmeEQxelFTdzdKOVRvM1FLQmdGbTR3MFBvT1NmTWV2UkxkTnRCRC8rNjJzS3hLTlMxMXhUUENMR3UKU2Y1R3NiUHdXK1VyZVJlWUJweTI3Mk4zQ3V6ZC93RUJHbC9PUXpnR281K1VpK3lvem9qMFVTeFRDZ1p4Tm4vVgpoRVgrUXU1K3d0RlRheDYza21QYlZra3lMZVJCVVRKRVprak0vMUh2LzRSQVJqY2JaUzdUN0xlbkpsN05PMVpUCkdxUDFBb0dBWUF3cmk0NEN1YzZieTFiRTY1TFpVZm4rZytTRCtib2M5N1doL0NCMzZlMm5zZ1pSVzBMTVluNysKenlRcU1kS1lUQ1kxVW1wZVRMSW4zQmp6Y1d0d0lVS0ZGc1NoSHVNNHNIL1kycWcwNGN0SHgyU2ZNMEpFRDg3Mgp3c1FGbXZKNkxwZGNwSElLTjU1SzdGTVdYQlZoN0FpNnI0SnB4Rkdlb3dJN3E5clJrbk09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  wso2carbon.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxVENDQXBHZ0F3SUJBZ0lFWWZFVlNqQU5CZ2txaGtpRzl3MEJBUXNGQURCa01Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhGakFVQmdOVkJBY01EVTF2ZFc1MFlXbHVJRlpwWlhjeERUQUxCZ05WQkFvTQpCRmRUVHpJeERUQUxCZ05WQkFzTUJGZFRUekl4RWpBUUJnTlZCQU1NQ1d4dlkyRnNhRzl6ZERBZUZ3MHlNakF4Ck1qWXdPVE15TlRoYUZ3MHlOREEwTXpBd09UTXlOVGhhTUdReEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUkKREFKRFFURVdNQlFHQTFVRUJ3d05UVzkxYm5SaGFXNGdWbWxsZHpFTk1Bc0dBMVVFQ2d3RVYxTlBNakVOTUFzRwpBMVVFQ3d3RVYxTlBNakVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBa2RnbmNvQ3J6NjU1THE4cFRkWDA3ZW9WQmpkWkRDVUU2dWVCZDBEMWhwSjAKL3pFM3gzQXo2dGx2enM5OFBzUHVHemFRT01tdUxhNHF4TkorT0t4Sm11dERVbENscHV2eHVmK2p5cTRnQ1Y1dApFSUlMV1JNQmpsQkVwSmZXbTYzK1ZLS1U0bnZCV05KN0tmaFdqbDgrRFVkTlNoMnBDRExwVU9ibWI5S3F1cWMxCng0Qmd0dGpONHJ4L1ArMy92KzFqRVRYeklQMUw0NHlIdHBRTnYwa2hZZjRqL2FIamNFcmk5eWt2cHoxbXRkYWMKYnJLSzI1TjRWMUhIUndEcVppSnpPQ0NJU1hEdXFCNndndVkvdjRuMGwxWHRyRXM3aUN5ZlJGd05TS05yTHFyMgozdFIxQ3NjbUxmYkg2WkxnNUNZSlREKzF1UFN4MEhNT0I0V3Y1MVBiV3dJREFRQUJvMk13WVRBVUJnTlZIUkVFCkRUQUxnZ2xzYjJOaGJHaHZjM1F3SFFZRFZSME9CQllFRkgwS1EzWVRaSnhUc05zUHlyWk9TRmdYWGhHK01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTEJnTlZIUThFQkFNQ0JQQXdEUVlKS29aSQpodmNOQVFFTEJRQURnZ0VCQUZOSjM0Q0lpSWxDeG15cDI3K0tBMjI0TGFIVnRMNUR1Y0ZLMFAyMkZRK1FLa09OCmlVd083MEtvVkZyZUJIMVNteHU0ZVBXazZyTVpGT001b0w4SFhZZzN0d3krNWVHY0wzUFFkN1g1ZHdBcWxWaXYKem9rb2k2U0RhQS9iSUc2Si9PMVU5UWQ0WEVWSmRWdUxxamsxK2NwNzBBTHQwWDZCN3NOTGZqRmNiejNqUVVMTgpuSzhITnZxYm43elF1UDEwczhwNXkycVZrUEJBL3BqaWdSRHNJV1I2cDc4UUVTRitUYUhGanhmY0Q2ZjljbllpCmUreUVIRVJ0RzhrOHg1akxGZStvZEkxL1FHWlA4Rnkwb0tUK0UvVEoxRkJoNHJCMUZ0S3lscUdlYXVQdTg5RG4KYUo5K2t2cE5ROTR5Rm1FdWh0REJ5dkRpanhBcXZsaW4zVFBJZnk4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kubernetes-gateway-helm/templates/postgres/database-secret.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

kind: Secret
apiVersion: v1
metadata:
  name: kgw-db-secret
  namespace: default
type: Opaque
stringData:
  DB_PASSWORD: "wso2carbon"
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/apk-account-secret.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Secret
metadata:
  name: apk-wso2-kgw-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: wso2kgw-platform
type: kubernetes.io/service-account-token
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-gateway-config
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
data:
  envoy-gateway.yaml: |
    apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: EnvoyGateway
    extensionApis:
      enableBackend: true
    extensionManager:
      hooks:
        xdsTranslator:
          post:
          - Route
      resources:
      - group: example.extensions.io
        kind: ListenerContextExample
        version: v1alpha1
      service:
        fqdn:
          hostname: envoy-gateway-extension-server-service.envoy-gateway-system.svc.cluster.local
          port: 5005
    gateway:
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
    logging:
      level:
        default: info
    provider:
      kubernetes:
        rateLimitDeployment:
          container:
            image: docker.io/envoyproxy/ratelimit:0141a24f
          patch:
            type: StrategicMerge
            value:
              spec:
                template:
                  spec:
                    containers:
                    - imagePullPolicy: IfNotPresent
                      name: envoy-ratelimit
        shutdownManager:
          image: docker.io/envoyproxy/gateway:v1.3.2
      type: Kubernetes
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/extended-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2kgw-db-service-extended-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
data:
  override.conf: |-
    max_connections = 400
---
# Source: kubernetes-gateway-helm/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
data:
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  replica.conf: |-
    dir /data
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration
  users.acl: |-
---
# Source: kubernetes-gateway-helm/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-health
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
data:
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: kubernetes-gateway-helm/charts/redis/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ -f /opt/bitnami/redis/mounted-etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/users.acl ]];then
        cp /opt/bitnami/redis/mounted-etc/users.acl /opt/bitnami/redis/etc/users.acl
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--protected-mode" "no")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-ds-configmap.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-config-ds-configmap
  namespace: default
data:
  Config.toml: |
   
    [ballerina.observe]
    metricsEnabled = false
   
    [wso2.config_deployer_service.keyStores.tls]
    keyFilePath = "/home/wso2kgw/config-deployer/security/config.key"
    certFilePath = "/home/wso2kgw/config-deployer/security/config.pem"
    [wso2.config_deployer_service.gatewayConfiguration]
    name = "wso2-kgw-default"
    listenerName = "httpslistener"
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/wso2-apk-config-deployer-api-definition.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "ConfigMap"
apiVersion: "v1"
metadata:
  name: "apk-wso2-kgw-wso2-kgw-config-deployer-api-definition"
  namespace: default
  labels:
    managed-by: "kgw"
binaryData:
  definition: H4sICODjjWQAA2RlcGxveWVyLWFwaS55YW1sAOUaaXPbuPW7fwWqTdvEWR12jknVY+rYzka1E6s+mszE2RmIhCRseC0AOlay6W/vA0iQIAlejrPxTDXjQ8DDu9/DewCGw+FWGJEAR3SKHo0mo50tGizD6RZCggqPTNGbs5NdtDefobmHxTJkPoJf6CheEBYQQTgaogMSeeEGHT3j6JTwMGYOkSsAh0u4w2gkaBhM0W8wgND5mnKFD/7EnLhIhGhFAsKwIAoFS1FwRQgHEngES68I4wrPDrA52YqwWHPJ5xh452NX8TBVJKKQi+Q/kAKvuP4fAa+AjKdfeez7mG2mmv+EZfkpso3SUdATMAljM3eKEnr5EkZ+jQkXz0N3k5NzwkCQQOQDCPmxJ2iEmRhLXQ5dLLA5DVw5a+KXxhC6x8hyigY/jJ3Qj8IAkPJxAqlFH4IahgsgP8g44gDJiSH+YHeyMzBRW+yjP9JECWawEY8dMAhfxp63MaDWBLtglSKzx6GjtFQWoYGW/JyvCbo4PUbhEgn4NyAfvQ1yGAG3cDOfGJWWcbGRPsqpH3mkNEeugXkXZpfY4+VJu5bBXTaRxCcYDVaFyf3ElMNzCdBfstQTFH4tojTW9xLI4pkI4SjyaGK88Qb7XhlbHY0m59ybH4HqloPcBx9PJgUftK3OfHf8HLunSWgNtnIcT3rhmIGsLMDeGWGQRA4ZC5lClmSOOPia3HGRru6XPTTNfBGkBOxDPmUFigGMTcEudOYa0lLACyphZig2+ODFxexA+5xMsDKydZ42AGUGo4wAd4LF5oTN7Ba3sueb3T75RqulZ8b5f4vNX3g1u/ZOaAnXWMoCkdOg/bsXujmkRJRmmgRnmm6yCE5qGClduPiFOMLYrZWvG7Gm1H4tjBEZfcbXtADRqJViC1gjJoNcUDMEqGsKW2ONjsGbZ4tEBuyeBN6mFK8qZZgFB74+JsFKrKfo6cQcp4Ee32njMFVNDdrdR7s3xKtLOjveRx3YhSpQOsgU/fzu5//+4Z8//HX6x5+37z94+PfPX367vPzbPwZ//vFP43uX7y7fX/KHl+P3D++18SRKSaTWZEsMpdwUnR6enRvjJIj9YhQOyyBy6KfTvfnLfx9XRuf7paE3h8/PTvaPDnMEIVvhgH6q1Fj9fevEwGTzMRK4UUgDISOKruJk++Jtwat3/kPr6jybZBsir0qBGcNm2qeC+KWk31J0nGTYc4qwj85DyKKFAG3DNMsw6bUFhKdQnx5Tn4quGLMFBpoYNB8IWq2bO2vDko0Ar+tSiRF7c0tmqsNecJhXOJKe4cRchL6R4ORgMR11ZUp+bIky+ZSzl4nIuoldYS/uuuJqDcWdRQMVDhtiJlXIFWUixh5SGKvKqBMQxt3YsXVHdlvIj0WxjTrhOHAX4fW3IeCEjBcCuqvb75+cnhUWJu6/Z3X9jnurjJtyzVejlqzS+debPJNySHDn4QcSnIcXESwh2K+iWoShR3BQ8I409RdrPRLghUcs230VQ8ZNYedOatvXpQhoE0hqMGRpFs8AVHswlz1FX3yQ0z6QTYmpQyVbu2g52ZYVelDNV3yjwQ9qQlOiQAUcxaC0uU/Flw+7W7DGB7Aqm2U/wkJvz/PCjyeMrugNtzirqaok9qGQlTEEnNwq6y+rvdZts/6KgPO635YEvt5bWRwRKhOyIsymmEnaSlS3fktfkcGgY3JFPKRBGxwvPSv8pmWPYsPo3XRL9bsRrY43Ki8B2coVVG7PIgXwOm/JOm4S+brWLJiA/qfalLT1AFc7JRyz9q7PduBTW5Bk2fnzIN8lBtP0y87gi4Kt1KKGpuUcUpPogAhMPV6vRpv6U5/lc8IuAmp2yXH+tcHZ9cJugWjk+NexvyBMZnONCWEZ18RFQAvxiDh0SeGb5EN1MdQnNtUZ7WRsZaS5dbqoQV/q94boFQ1iQQpDL8OYFQYOChGXsWgstXdPJcNqINmgA1RTzrFXnr37tzyhWMrMG2KzTk0bfFH3pf0SgV7VIdyA95NlMQUO6wvuYaPgR8+4PLyiDhlUWDkjTsyo2PRVol6XY3SktEtZRlvSXEW+xkI9x1TYPahHSeB0ZvU0W5Fg2a8y2NFunDiMiE4JPAE9IptGyLIWe/LTo86vKbV4Srjcu1jdrknJzzGnjt0prFPfTvMxT/akNt0rUpjzjyFz22BPK07XzDf6/KVSeZQzZjbRTxMCsxXpsmVkqXwMAhI2/qz+zNwvGcwVYYs+iOYnxuGh7nh7dCr2XtPwzcq4sekV23Pkhy5Rt/L6Phbdl6vHyr0fVNLbNz43vN2zvAztbZzocQfQdWhrMuO8e9+z2cm3lZ5BXT5ha/O/iH76hPkaOx+GPCFYQMUj7PQ8X/gwjNKnJEbVzDpVhhmWZ5NneTkHYorQCb0+bKyFiNR46fXEtEF1wHrt2VeXElKK7hTOKJa0cJModYIhJBc0wMzqJwPgc6Tx5P4GwUwDddb7gtpOXdr4ogYGdP9k72z8E8PR+ldv/IYszkLnAxEP+vGZPioayXcEaZknL+/KBawcS30WkoqIWQCV/Ecq1ujx27fo5fn5HJ0JLGJd2tov7lzzmg58kuNVzy5R4ujigFpymHn6OBtPSfbVeyJ9uni0ZYPpibF0pQ6TstUzYRBehLFQVz3ETt4PGZmlb8BuTnsOCRMS6sLbyCdcMfMSq0rkKVe8zErOAjFdJaffeFNRJD9Tt1lAC8OPIirWwAdk7lRsj3JF2kfAQ/Gm/wVMp478YwIn2bzCHnWTqFUYOFpsEMHOGoKYeK6JoucJinKDY6Azg3VGrOihUswcGMaEfpQGLr2irryMSPkCSQXy8Qat8RVBoQO1H0QMcmNpPYR1Hz36LiFV8qEbRk7R2AcV964qRavh+0dZ+eBHve7RLFQf/MjHPvKt41YjI9vb8pBndrC9Lc8COHiOtHV6p7u9LUtzmMrveCvGN8tA20MX6wOX8qOTivLMu+qykG+H8mnp0LyENkROTrbahC7cYCvpUxFNwlpmtCBeGKwgQMLfSfw9xyGRKIqdjPWU9BVxKVb4uTrijoSs/1UpLoXTh7sjCAVV1cvHteUXQ1WZC7LcmtCJGGlzUWZiy/JOLH8nNDUQGHoAAJRCjNAsUJlYZzGwdCU157nY8pSq+SFV/9e36ZskE1xXQSUsKiGix5NJaVznQFPOEkhBHR00UKagt3Q0GJSmkq027z9kgQv6qTOFnh6hs+zgNWsGsSffJMGueA35h99xK/ylzgpaxCYTtAp/cwNA9bGgrkuCGgtk8yP1eFE7gR/Dr4V6zKgffaAFbEFBmA9BQQBVCyFBfmp+x430qM5ImRaarHQL+rm5HS0vF2ssqiFRApoUf3faME/qc5hVmDYj8QSWBE4Yy/UQV1CsU40qSepo7hHMk+e6GNpF7PrQscLGg4Wprt6Geh2KvWxLrTERwKAcqBB5wKuf7c5y3w0AlseRPNK48/H1tM6MRYE7BlmzKr7KQi/AMdwG46j5xC68mpvdkCTMqOR8x23yuMkmSs7WcGrTwM1NAW19li5fQNND6oxiAqIEsrhhyVwrGVL5FppHebICHC+Ig2OIctmpp7V8ZKDi2q2gg7rbdtzZrbOjRTVdd7GvV9rNTX8R4PSpWa3RTZDE2vJeSFM35u605SY7dZYz5WszmV3yr1F/lklVN1i8PCyZIQNNO0cJnBhE3uaIjfYS7VcfU7+iAcJ5xk5PO++2tXae1FsrlyTfl9rsdgMF3cCo/wPR5SmSeDsAAA==
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/wso2-apk-config-generator-api-definition.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "ConfigMap"
apiVersion: "v1"
metadata:
  name: "apk-wso2-kgw-wso2-kgw-config-generator-api-definition"
  namespace: default
  labels:
    managed-by: "kgw"
binaryData:
  definition: "H4sIAAAAAAAAAK2RvW7DMAyEX6XgXP/EXQq/QocORaYig6DQMRFHFES6QWr43UvJaYcOnaqFgu7uO4BagCMGFwl6eKrbegePD0BhYOgXUNIJTbgKd5WL58pzGOhUnTBgcsqpykELfGAS4mDWnTFaWO1N0M+J9Ab9+wJHHNw8qd0P68HE6HSUXNEYQZo7EO8Fs90LboHIonkmlMhBsIS6ts3jiOITxc0Kry+w/t1b5F+F52epjM1z8hv7fwuz7vliJAxaUN/uNz/iZaP/ZGzjt5gXzm7WscubHSa+FhNd4kSeiiurnOizbGmfJkuMqlH6plEUra0xZ8Xb3+bwup0vY0KevuwBAAA="
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/common-controller-grpc-probe-script-conf.yaml
# --------------------------------------------------------------------
# Copyright (c) 2022, WSO2 LLC. (http://wso2.com) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -----------------------------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-common-controller-grpc-probe-script-conf
  namespace: default
data:
  check_health.sh: |
    #!/bin/bash
    # --------------------------------------------------------------------
    # Copyright (c) 2022, WSO2 LLC. (http://wso2.com) All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # -----------------------------------------------------------------------

    COMMON_CONTROLLER_XDS_PORT="${COMMON_CONTROLLER_XDS_PORT:-18005}"
    grpc_health_probe -addr "127.0.0.1:${COMMON_CONTROLLER_XDS_PORT}" \
        -tls \
        -tls-ca-cert "${COMMON_CONTROLLER_PUBLIC_CERT_PATH}" \
        -tls-client-cert "${COMMON_CONTROLLER_PUBLIC_CERT_PATH}" \
        -tls-client-key "${COMMON_CONTROLLER_PRIVATE_KEY_PATH}" \
        -tls-server-name commoncontroller \
        -connect-timeout=3s
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-log-conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-common-log-conf
  namespace: default
data:
  config.toml: | 
    [commoncontroller]
      
    [commoncontroller.server]
      label = "ratelimiter"
      
    [commoncontroller.keystore]
      certPath = "/home/wso2/security/keystore/commoncontroller.crt"
      keyPath = "/home/wso2/security/keystore/commoncontroller.key"

    [commoncontroller.truststore]
      location = "/home/wso2/security/truststore"

    [commoncontroller.redis]
      host = "redis-master"
      port = "6379"
      username = "default"
      password = ""
      userCertPath = "/home/wso2/security/keystore/commoncontroller.crt"
      userKeyPath = "/home/wso2/security/keystore/commoncontroller.key"
      cACertPath = "/home/wso2/security/keystore/commoncontroller.crt"
      tlsEnabled = false
      revokedTokenChannel = "wso2-kgw-revoked-tokens-channel"
    [commoncontroller.sts]
      authKeyPath = "/home/wso2/security/sts/auth_key.txt"
      authKeyHeader = "stsAuthKey"
    
    [commoncontroller.webServer]
      port = 9543

  log_config.toml: |
    # The logging configuration for Adapter

    ## Common Controller root Level configurations
    logLevel = "INFO" # LogLevels can be "DEBG", "FATL", "ERRO", "WARN", "INFO", "PANC"
    LogFormat = "TEXT" # Values can be "JSON", "TEXT"

    [rotation]
    MaxSize = 10    # In MegaBytes (MB)
    MaxBackups = 3
    MaxAge =  2   # In days
    Compress = true
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-grpc-probe-script-conf.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-enforcer-grpc-probe-script-conf
  namespace: default
data:
  check_health.sh: |
    #!/bin/bash
    # --------------------------------------------------------------------
    # Copyright (c) 2021, WSO2 LLC. (http://wso2.com) All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # -----------------------------------------------------------------------

    ENFORCER_PORT="${ENFORCER_PORT:-8081}"
    ENFORCER_SERVER_NAME="${ENFORCER_SERVER_NAME:-enforcer}"
    grpc_health_probe -addr "127.0.0.1:${ENFORCER_PORT}" \
        -tls \
        -tls-ca-cert "${ENFORCER_PUBLIC_CERT_PATH}" \
        -tls-client-cert "${ENFORCER_PUBLIC_CERT_PATH}" \
        -tls-client-key "${ENFORCER_PRIVATE_KEY_PATH}" \
        -tls-server-name ${ENFORCER_SERVER_NAME} \
        -connect-timeout=3s
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/log-conf.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-log-conf
  namespace: default
data:
  config.toml: | 
    [deployment.gateway]
      namespace = "default"
      commonControllerHostName = "apk-wso2-kgw-common-controller-service.default.svc"
      commonControllerHost = "apk-wso2-kgw-common-controller-service.default.svc"
      enforcerServerName = "apk-wso2-kgw-enforcer-service.default.svc" 

    [deployment.gateway.volumes]
      enforcerKeystoreSecretVolume = "apk-wso2-kgw-enforcer-server-cert"
      enforcerJwtSecretVolume = "apk-wso2-kgw-enforcer-keystore-secret"
      enforcerTrustedCerts = "apk-wso2-kgw-enforcer-truststore-secret"
      enforcerApikeyCert = "apk-wso2-kgw-enforcer-truststore-secret"
      iDPCertificateSecretVolume = "apk-wso2-kgw-enforcer-truststore-secret"
      LogConfVolume = "apk-wso2-kgw-log-conf"

    [enforcer]
    
    enforcerDisabled = false
    
    

    

    
    [enforcer.cors]
      enabled = true
      accessControlAllowOrigins = ["*"]
      accessControlAllowMethods = ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
      accessControlAllowHeaders = ["authorization", "Access-Control-Allow-Origin", "Content-Type", "Internal-key", "apiKey"]
      accessControlAllowCredentials = false
      accessControlExposeHeaders = ["*"]
    
    [enforcer.jwtGenerator]
      publicCertificatePath = "/home/wso2/security/truststore/mg.pem"
      privateKeyPath = "/home/wso2/security/keystore/mg.key"

    [enforcer.metrics]
      enabled = false
    
    

    

  log4j2.properties: |
    monitorInterval=20

    appenders = ENFORCER_CONSOLE

    appender.ENFORCER_CONSOLE.type = Console
    appender.ENFORCER_CONSOLE.name = ENFORCER_CONSOLE
    appender.ENFORCER_CONSOLE.layout.type = PatternLayout
    appender.ENFORCER_CONSOLE.layout.pattern = [%d{DEFAULT}][TRACE_ID: %X{traceId}][API_UUID: %X{API_UUID}]%x %5p - {%c} - \%m [%errorDetails]%n
    appender.ENFORCER_CONSOLE.filter.threshold.type = ThresholdFilter
    appender.ENFORCER_CONSOLE.filter.threshold.level = DEBUG

    loggers = reporter, enforcer, io-swagger-v3, enforcer-interceptors

    logger.reporter.name = org.wso2.am.analytics.publisher.reporter.elk
    logger.reporter.level = INFO
    logger.reporter.additivity = false
    logger.reporter.appenderRef.console.ref = ENFORCER_CONSOLE

    # Log access log to console
    logger.enforcer-interceptors.name = org.wso2.kgw.enforcer.grpc.interceptors
    # Change the log level into DEBUG to view the access logs.
    logger.enforcer-interceptors.level = INFO 
    logger.enforcer-interceptors.additivity = false
    logger.enforcer-interceptors.appenderRef.console.ref = ENFORCER_CONSOLE

    # Log to console 
    logger.enforcer.name = org.wso2.kgw.enforcer
    logger.enforcer.level = INFO 
    logger.enforcer.additivity = false
    logger.enforcer.appenderRef.console.ref = ENFORCER_CONSOLE

    logger.io-swagger-v3.name = io.swagger.v3.parser
    logger.io-swagger-v3.level = ERROR
    logger.io-swagger-v3.additivity = false
    logger.io-swagger-v3.appenderRef.console.ref = ENFORCER_CONSOLE

    rootLogger.level = ERROR
    rootLogger.appenderRef.ENFORCER_CONSOLE.ref = ENFORCER_CONSOLE
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ds/idp-ds-configmap.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: apk-wso2-kgw-idp-ds-configmap
  namespace: default
data:
  Config.toml: |
    [ballerina.log]
    level = "INFO"
    [ballerina.http]
    traceLogConsole = false
     
    # Sample configurations      
    [wso2.idp_domain_service.datasourceConfiguration]
    description = "Database for idp"
    url = "jdbc:postgresql://wso2kgw-db-service:5432/WSO2AM_DB"
    host = "wso2kgw-db-service"
    port = 5432
    databaseName = "WSO2AM_DB"
    username = "wso2carbon"
    validationTimeout = 250
    testQuery = "SELECT 1"
    driver = "org.postgresql.Driver"
    [wso2.idp_domain_service.idpConfiguration]
    hostname = "idp.am.wso2.com"
    loginPageURl = "https://idp.am.wso2.com:9095/authenticationEndpoint/login"
    loginErrorPageUrl = "https://idp.am.wso2.com:9095/authenticationEndpoint/error"
    loginCallBackURl = "https://idp.am.wso2.com:9095/authenticationEndpoint/login-callback"
    [wso2.idp_domain_service.idpConfiguration.tokenIssuerConfiguration]
    issuer = "https://idp.am.wso2.com/token"
    keyId="gateway_certificate_alias"
    [[wso2.idp_domain_service.idpConfiguration.fileBaseApp]]
    clientId = "45f1c5c8-a92e-11ed-afa1-0242ac120002"
    clientSecret = "4fbd62ec-a92e-11ed-afa1-0242ac120002"
    callbackUrls = ["http://httpbin.org"]
    grantTypes = ["client_credentials","refresh_token", "authorization_code"]

    [[wso2.idp_domain_service.idpConfiguration.user]]
    username = "org1user"
    password = "org1user"
    organizations = ["org1"]

    [[wso2.idp_domain_service.idpConfiguration.user]]
    username = "org2user"
    password = "org2user"
    organizations = ["org2"]

    [[wso2.idp_domain_service.idpConfiguration.user]]
    username = "org2user"
    password = "org2user"
    organizations = ["org2"]

    [[wso2.idp_domain_service.idpConfiguration.user]]
    username = "multiorguser"
    password = "multiorguser"
    organizations = ["org1","org2"]

    [[wso2.idp_domain_service.idpConfiguration.user]]
    username = "superAdmin"
    password = "superAdmin"
    organizations = [""]
    superAdmin = true
    [wso2.idp_domain_service.idpConfiguration.keyStores.tls]
    keyFile = "/home/wso2kgw/idp/security/idp.key"
    certFile = "/home/wso2kgw/idp/security/idp.crt"
---
# Source: kubernetes-gateway-helm/templates/postgres/initdb-conf.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.


apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb-scripts-configmap
  namespace: default
data:
  setup1.sql: |
    CREATE DATABASE WSO2AM_DB;
    GRANT ALL PRIVILEGES ON DATABASE "WSO2AM_DB" TO wso2carbon;
    \c "WSO2AM_DB"
        BEGIN TRANSACTION;
        
        CREATE TABLE IF NOT EXISTS INTERNAL_USER (
        UUID VARCHAR(100) NOT NULL,
        IDP_USER_NAME VARCHAR(255) NOT NULL,
        PRIMARY KEY (UUID),
        UNIQUE (IDP_USER_NAME)
        );
        
        CREATE TABLE IF NOT EXISTS APPLICATION (
        NAME VARCHAR(100),
        USER_UUID VARCHAR(100),
        APPLICATION_TIER VARCHAR(50) DEFAULT 'Unlimited',
        CALLBACK_URL VARCHAR(512),
        DESCRIPTION VARCHAR(512),
        APPLICATION_STATUS VARCHAR(50) DEFAULT 'APPROVED',
        GROUP_ID VARCHAR(100),
        CREATED_BY VARCHAR(100),
        CREATED_TIME TIMESTAMP,
        UPDATED_BY VARCHAR(100),
        UPDATED_TIME TIMESTAMP,
        UUID VARCHAR(256),
        TOKEN_TYPE VARCHAR(10),
        ORGANIZATION VARCHAR(100),
        FOREIGN KEY(USER_UUID) REFERENCES INTERNAL_USER(UUID) ON UPDATE CASCADE ON DELETE RESTRICT,
        PRIMARY KEY(UUID),
        UNIQUE(NAME,USER_UUID,ORGANIZATION)
        );
        
        CREATE TABLE IF NOT EXISTS API (
        UUID VARCHAR(256),
        API_NAME VARCHAR(256),
        API_VERSION VARCHAR(30),
        CONTEXT VARCHAR(256),
        CONTEXT_TEMPLATE VARCHAR(256),
        API_TIER VARCHAR(256),
        API_TYPE VARCHAR(10),
        ORGANIZATION VARCHAR(100),
        GATEWAY_VENDOR VARCHAR(100) DEFAULT 'wso2',
        CREATED_BY VARCHAR(100),
        CREATED_TIME TIMESTAMP,
        UPDATED_BY VARCHAR(100),
        UPDATED_TIME TIMESTAMP,
        STATUS VARCHAR(30),
        VERSION_COMPARABLE VARCHAR(15),
        LOG_LEVEL VARCHAR(255) DEFAULT 'OFF',
        REVISIONS_CREATED INTEGER DEFAULT 0,
        SDK JSONB,
        CATEGORIES JSONB,
        ARTIFACT JSONB NOT NULL,
        DEFAULT_API_VERSION VARCHAR(30),
        PRIMARY KEY(UUID),
        UNIQUE(API_NAME,API_VERSION,ORGANIZATION)
        );
        
        CREATE TABLE API_ARTIFACT (
        ORGANIZATION VARCHAR(100) NOT NULL,
        API_UUID VARCHAR(256) NOT NULL,
        API_DEFINITION BYTEA,
        MEDIA_TYPE VARCHAR(100),
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON UPDATE CASCADE ON DELETE CASCADE
        );
        
        CREATE SEQUENCE RESOURCE_CATEGORIES_seq;
        CREATE TABLE RESOURCE_CATEGORIES (
        RESOURCE_CATEGORY_ID INTEGER DEFAULT NEXTVAL ('RESOURCE_CATEGORIES_seq'),
        RESOURCE_CATEGORY VARCHAR(255),
        PRIMARY KEY (RESOURCE_CATEGORY_ID),
        UNIQUE (RESOURCE_CATEGORY)
        );
        
        CREATE TABLE API_RESOURCES (
        UUID VARCHAR(255),
        API_UUID VARCHAR(256),
        RESOURCE_CATEGORY_ID INTEGER,
        DATA_TYPE VARCHAR(255),
        RESOURCE_CONTENT TSVECTOR,
        RESOURCE_BINARY_VALUE BYTEA,
        CREATED_BY VARCHAR(100),
        CREATED_TIME TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
        UPDATED_BY VARCHAR(100),
        LAST_UPDATED_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY(UUID),
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON
        UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY (RESOURCE_CATEGORY_ID) REFERENCES RESOURCE_CATEGORIES(RESOURCE_CATEGORY_ID)
        );
        
        CREATE TABLE API_DOC_META_DATA(
        UUID VARCHAR(255),
        RESOURCE_UUID VARCHAR(255),
        API_UUID VARCHAR(256),
        NAME VARCHAR(255),
        SUMMARY VARCHAR(1024),
        TYPE VARCHAR(255),
        OTHER_TYPE_NAME VARCHAR(255),
        SOURCE_URL VARCHAR(255),
        FILE_NAME VARCHAR(255),
        SOURCE_TYPE VARCHAR(255),
        VISIBILITY VARCHAR(30),
        CREATED_BY VARCHAR(100),
        CREATED_TIME TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
        UPDATED_BY VARCHAR(100),
        LAST_UPDATED_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY(UUID),
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON
        UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY(RESOURCE_UUID) REFERENCES API_RESOURCES(UUID) ON
        UPDATE CASCADE ON DELETE CASCADE
        );
        
        CREATE SEQUENCE API_URL_MAPPING_SEQUENCE START WITH 1 INCREMENT BY 1;
        CREATE TABLE IF NOT EXISTS API_URL_MAPPING (
        URL_MAPPING_ID INTEGER DEFAULT nextval('api_url_mapping_sequence'),
        API_UUID VARCHAR(256) NOT NULL,
        HTTP_METHOD VARCHAR(20) NULL,
        AUTH_SCHEME VARCHAR(50) NULL,
        URL_PATTERN VARCHAR(512) NULL,
        THROTTLING_TIER_UNIT_TIME VARCHAR(255) DEFAULT NULL,
        THROTTLING_TIER_UNIT_VALUE VARCHAR(255) DEFAULT NULL,
        PRIMARY KEY(URL_MAPPING_ID),
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON UPDATE CASCADE ON DELETE CASCADE
        );
        
        CREATE TABLE IF NOT EXISTS API_RESOURCE_SCOPE_MAPPING (
        SCOPE_NAME VARCHAR(256) NOT NULL,
        URL_MAPPING_ID INTEGER NOT NULL,
        FOREIGN KEY(URL_MAPPING_ID) REFERENCES API_URL_MAPPING(URL_MAPPING_ID) ON DELETE CASCADE,
        PRIMARY KEY(SCOPE_NAME, URL_MAPPING_ID)
        );
        
        CREATE TABLE IF NOT EXISTS SUBSCRIPTION (
        UUID VARCHAR(256),
        TIER_ID VARCHAR(50),
        TIER_ID_PENDING VARCHAR(50),
        API_UUID VARCHAR(256),
        LAST_ACCESSED TIMESTAMP NULL,
        APPLICATION_UUID VARCHAR(256),
        SUB_STATUS VARCHAR(50),
        SUBS_CREATE_STATE VARCHAR(50) DEFAULT 'SUBSCRIBE',
        CREATED_BY VARCHAR(100),
        CREATED_TIME TIMESTAMP,
        UPDATED_BY VARCHAR(100),
        UPDATED_TIME TIMESTAMP,
        FOREIGN KEY(APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON
        UPDATE CASCADE ON DELETE CASCADE,
        PRIMARY KEY (UUID)
        );
        
        CREATE TABLE APPLICATION_KEY_MAPPING (
        UUID VARCHAR(100),
        APPLICATION_UUID VARCHAR(256),
        CONSUMER_KEY VARCHAR(512),
        KEY_TYPE VARCHAR(512) NOT NULL,
        CREATE_MODE VARCHAR(30) DEFAULT 'CREATED',
        APP_INFO BYTEA DEFAULT NULL,
        KEY_MANAGER_UUID VARCHAR(100),
        FOREIGN KEY(APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        -- FOREIGN KEY(KEY_MANAGER_UUID) REFERENCES KEY_MANAGER(UUID) ON UPDATE CASCADE ON DELETE CASCADE, --
        PRIMARY KEY(APPLICATION_UUID,KEY_TYPE,KEY_MANAGER_UUID)
        );
        
        CREATE SEQUENCE API_LC_EVENT_SEQUENCE START WITH 1 INCREMENT BY 1;
        CREATE TABLE IF NOT EXISTS API_LC_EVENT (
        EVENT_ID INTEGER DEFAULT nextval('api_lc_event_sequence'),
        API_UUID VARCHAR(256) NOT NULL,
        PREVIOUS_STATE VARCHAR(50),
        NEW_STATE VARCHAR(50) NOT NULL,
        USER_UUID VARCHAR(100) NOT NULL,
        ORGANIZATION VARCHAR(100) NOT NULL,
        EVENT_DATE TIMESTAMP NOT NULL,
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON
        UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY(USER_UUID) REFERENCES INTERNAL_USER(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        PRIMARY KEY (EVENT_ID)
        );
        
        CREATE TABLE IF NOT EXISTS API_COMMENTS (
        COMMENT_ID VARCHAR(64) NOT NULL,
        COMMENT_TEXT VARCHAR(512),
        CREATED_BY VARCHAR(255),
        CREATED_TIME TIMESTAMP NOT NULL,
        UPDATED_TIME TIMESTAMP,
        API_UUID VARCHAR(256),
        PARENT_COMMENT_ID VARCHAR(64) DEFAULT NULL,
        ENTRY_POINT VARCHAR(20),
        CATEGORY VARCHAR(20) DEFAULT 'general',
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON DELETE CASCADE,
        FOREIGN KEY(PARENT_COMMENT_ID) REFERENCES API_COMMENTS(COMMENT_ID),
        PRIMARY KEY(COMMENT_ID)
        );
        
        CREATE TABLE IF NOT EXISTS API_RATINGS (
        RATING_UUID VARCHAR(255) NOT NULL,
        API_UUID VARCHAR(256),
        RATING INTEGER,
        USER_UUID VARCHAR(100),
        FOREIGN KEY(API_UUID) REFERENCES API(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY(USER_UUID) REFERENCES INTERNAL_USER(UUID) ON
        UPDATE CASCADE ON DELETE RESTRICT,
        PRIMARY KEY (RATING_UUID)
        );
        
        CREATE TABLE IF NOT EXISTS BUSINESS_PLAN (
        UUID VARCHAR(256),
        NAME VARCHAR(512) NOT NULL,
        DISPLAY_NAME VARCHAR(512) NULL DEFAULT NULL,
        ORGANIZATION VARCHAR(100) NOT NULL,
        DESCRIPTION VARCHAR(1024) NULL DEFAULT NULL,
        QUOTA_TYPE VARCHAR(25) NOT NULL,
        QUOTA INTEGER NOT NULL,
        QUOTA_UNIT VARCHAR(10) NULL,
        UNIT_TIME INTEGER NOT NULL,
        TIME_UNIT VARCHAR(25) NOT NULL,
        RATE_LIMIT_COUNT INTEGER NULL DEFAULT NULL,
        RATE_LIMIT_TIME_UNIT VARCHAR(25) NULL DEFAULT NULL,
        IS_DEPLOYED BOOLEAN NOT NULL DEFAULT '0',
        CUSTOM_ATTRIBUTES BYTEA DEFAULT NULL,
        STOP_ON_QUOTA_REACH BOOLEAN NOT NULL DEFAULT '0',
        BILLING_PLAN VARCHAR(20) NOT NULL,
        MONETIZATION_PLAN VARCHAR(25) NULL DEFAULT NULL,
        FIXED_RATE VARCHAR(15) NULL DEFAULT NULL,
        BILLING_CYCLE VARCHAR(15) NULL DEFAULT NULL,
        PRICE_PER_REQUEST VARCHAR(15) NULL DEFAULT NULL,
        CURRENCY VARCHAR(15) NULL DEFAULT NULL,
        MAX_COMPLEXITY INTEGER NOT NULL DEFAULT 0,
        MAX_DEPTH INTEGER NOT NULL DEFAULT 0,
        CONNECTIONS_COUNT INTEGER NOT NULL DEFAULT 0,
        PRIMARY KEY(UUID),
        UNIQUE(NAME, ORGANIZATION)
        );
        
        CREATE TABLE IF NOT EXISTS APPLICATION_USAGE_PLAN (
        NAME VARCHAR(512) NOT NULL,
        DISPLAY_NAME VARCHAR(512) NULL DEFAULT NULL,
        ORGANIZATION VARCHAR(100) NOT NULL,
        DESCRIPTION VARCHAR(1024) NULL DEFAULT NULL,
        QUOTA_TYPE VARCHAR(25) NOT NULL,
        QUOTA INTEGER NOT NULL,
        QUOTA_UNIT VARCHAR(10) NULL DEFAULT NULL,
        UNIT_TIME INTEGER NOT NULL,
        TIME_UNIT VARCHAR(25) NOT NULL,
        IS_DEPLOYED BOOLEAN NOT NULL DEFAULT '0',
        CUSTOM_ATTRIBUTES BYTEA DEFAULT NULL,
        UUID VARCHAR(256),
        PRIMARY KEY(UUID),
        UNIQUE(NAME, ORGANIZATION)
        );
        
        CREATE TABLE BLOCK_CONDITION (
        TYPE varchar(45) DEFAULT NULL,
        BLOCK_CONDITION varchar(512) DEFAULT NULL,
        ENABLED varchar(45) DEFAULT NULL,
        ORGANIZATION varchar(100) DEFAULT NULL,
        UUID VARCHAR(256),
        PRIMARY KEY (UUID)
        );
        
        CREATE TABLE APPLICATION_GROUP_MAPPING (
        APPLICATION_UUID VARCHAR(256) NOT NULL,
        GROUP_ID VARCHAR(512) NOT NULL,
        ORGANIZATION VARCHAR(100) DEFAULT NULL,
        PRIMARY KEY (APPLICATION_UUID,GROUP_ID,ORGANIZATION),
        FOREIGN KEY (APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON DELETE CASCADE ON UPDATE CASCADE
        );
        
        CREATE TABLE IF NOT EXISTS APPLICATION_ATTRIBUTES (
        APPLICATION_UUID VARCHAR(256) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        APP_ATTRIBUTE VARCHAR(1024) NOT NULL,
        ORGANIZATION VARCHAR(100) NOT NULL,
        PRIMARY KEY(APPLICATION_UUID,NAME),
        FOREIGN KEY(APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON
        DELETE CASCADE ON UPDATE CASCADE
        );
        
        CREATE TABLE IF NOT EXISTS API_CATEGORIES (
        UUID VARCHAR(50),
        NAME VARCHAR(255),
        DESCRIPTION VARCHAR(1024),
        ORGANIZATION VARCHAR(100),
        UNIQUE(NAME,ORGANIZATION),
        PRIMARY KEY(UUID)
        );

        CREATE TABLE IF NOT EXISTS ORGANIZATION (
        UUID VARCHAR(50),
        NAME VARCHAR(255),
        DISPLAY_NAME VARCHAR(255),
        STATUS BOOLEAN NOT NULL DEFAULT 'TRUE',
        NAMESPACE JSONB,
        WORKFLOWS BYTEA,
        UNIQUE(NAME),
        PRIMARY KEY(UUID)
        );

        CREATE TABLE IF NOT EXISTS ORGANIZATION_CLAIM_MAPPING (
        UUID VARCHAR(50),
        CLAIM_KEY VARCHAR(255),
        CLAIM_VALUE VARCHAR(255),
        FOREIGN KEY(UUID) REFERENCES ORGANIZATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        UNIQUE(UUID,CLAIM_KEY)
        );

        CREATE TABLE IF NOT EXISTS ORGANIZATION_VHOST (
        UUID VARCHAR(50),
        VHOST VARCHAR(255),
        TYPE VARCHAR(50),
        FOREIGN KEY(UUID) REFERENCES ORGANIZATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
        UNIQUE(UUID, VHOST, TYPE)
        );

        CREATE TABLE IF NOT EXISTS WORKFLOWS(
        UUID VARCHAR(255) NOT NULL ,
        WF_REFERENCE VARCHAR(255) NOT NULL,
        WF_TYPE VARCHAR(255) NOT NULL,
        WF_STATUS VARCHAR(255) NOT NULL,
        WF_CREATED_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        WF_UPDATED_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
        ORGANIZATION VARCHAR(255),
        PRIMARY KEY (UUID)
        );
        
        CREATE TABLE IF NOT EXISTS KEY_MANAGER (
        UUID VARCHAR(100) NOT NULL,
        NAME VARCHAR(100) NULL,
        DISPLAY_NAME VARCHAR(100) NULL,
        ISSUER VARCHAR(100) NOT NULL,
        DESCRIPTION VARCHAR(256) NULL,
        TYPE VARCHAR(45) NULL,
        CONFIGURATION BYTEA NULL,
        ENABLED BOOLEAN DEFAULT '1',
        ORGANIZATION VARCHAR(100) NULL,
        PRIMARY KEY(UUID),
        UNIQUE(NAME,ORGANIZATION)
        );
        
        -- End of kgw Tables --
        
        -- Performance indexes start--
        
        create index IDX_AI_CTX on API (CONTEXT);
        create index IDX_AI_ORG on API (ORGANIZATION);
        create index IDX_AKM_CK on APPLICATION_KEY_MAPPING (CONSUMER_KEY);
        create index IDX_AUM_AI on API_URL_MAPPING (API_UUID);
        -- create index IDX_AUM_TT on API_URL_MAPPING (THROTTLING_TIER); --
        create index IDX_BP_QT on BUSINESS_PLAN (QUOTA_TYPE);
        create index IDX_S_AITIAI on SUBSCRIPTION (API_UUID,TIER_ID,APPLICATION_UUID);
        create index IDX_AUP_QT on APPLICATION_USAGE_PLAN (QUOTA_TYPE);
        create index IDX_A_AT_CB on APPLICATION (APPLICATION_TIER,CREATED_BY);
        create index IDX_SUB_APP_ID on SUBSCRIPTION (APPLICATION_UUID, UUID);
        
        GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO wso2carbon;
        GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO wso2carbon;
        GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO wso2carbon;

        -- Insert Initial kgw data ---
        INSERT INTO RESOURCE_CATEGORIES (RESOURCE_CATEGORY) VALUES ('Thumbnail');
        INSERT INTO RESOURCE_CATEGORIES (RESOURCE_CATEGORY) VALUES ('Document');
        -- End Insert Initial kgw data  

        -- Insert Demo kgw data ---
        INSERT INTO INTERNAL_USER(uuid, IDP_USER_NAME) VALUES ( 'kgwuser', 'kgwuser');
        INSERT INTO organization(uuid, name, display_name, status, workflows) VALUES ( 'a3b58ccf-6ecc-4557-b5bb-0a35cce38256', 'default', 'default', true, '');
        INSERT INTO organization_claim_mapping(uuid, claim_key, claim_value) VALUES ( 'a3b58ccf-6ecc-4557-b5bb-0a35cce38256', 'organizationClaimValue', 'default');
        -- End Insert Demo kgw data    
        -- Insert Non Prod IDP table --
        CREATE TABLE CONSUMER_APPS (
          CONSUMER_KEY VARCHAR(255),
          CONSUMER_SECRET VARCHAR(2048),
          APP_NAME VARCHAR(255),
          CALLBACK_URL VARCHAR(2048),
          GRANT_TYPES VARCHAR (1024),
          CONSTRAINT CONSUMER_KEY_CONSTRAINT UNIQUE (CONSUMER_KEY),
          PRIMARY KEY (CONSUMER_KEY)
        );    
        -- End of Non Prod IDP table --
        commit;
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Issuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# ClusterIssuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "clusterissuers/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Certificates controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/finalizers", "certificaterequests/finalizers"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders"]
    verbs: ["create", "delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Orders controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "orders/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "challenges"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["create", "delete"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Challenges controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  # Use to update challenge resource status
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "challenges/status"]
    verbs: ["update", "patch"]
  # Used to watch challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["get", "list", "watch"]
  # Used to watch challenges, issuer and clusterissuer resources
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  # Need to be able to retrieve ACME account private key to complete challenges
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  # Used to create events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  # HTTP01 rules
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [ "gateway.networking.k8s.io" ]
    resources: [ "httproutes" ]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  # We require the ability to specify a custom hostname when we are creating
  # new ingress resources.
  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges/finalizers"]
    verbs: ["update"]
  # DNS01 rules (duplicated above)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# ingress-shim controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/finalizers"]
    verbs: ["update"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways", "httproutes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways/finalizers", "httproutes/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-cluster-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
    rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/status"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["signers"]
    verbs: ["approve"]
    resourceNames:
    - "issuers.cert-manager.io/*"
    - "clusterissuers.cert-manager.io/*"
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# Permission to:
# - Update and sign CertificateSigningRequests referencing cert-manager.io Issuers and ClusterIssuers
# - Perform SubjectAccessReviews to test whether users are able to reference Namespaced Issuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
    verbs: ["sign"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apk-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: apk-envoy-envoy-gateway-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - update
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoyproxies
  - envoypatchpolicies
  - clienttrafficpolicies
  - backendtrafficpolicies
  - securitypolicies
  - envoyextensionpolicies
  - backends
  - httproutefilters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoypatchpolicies/status
  - clienttrafficpolicies/status
  - backendtrafficpolicies/status
  - securitypolicies/status
  - envoyextensionpolicies/status
  - backends/status
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - grpcroutes
  - httproutes
  - referencegrants
  - tcproutes
  - tlsroutes
  - udproutes
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  - grpcroutes/status
  - httproutes/status
  - tcproutes/status
  - tlsroutes/status
  - udproutes/status
  - backendtlspolicies/status
  verbs:
  - update
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/apk-cluster-role.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wso2kgw-role
rules:
  - apiGroups: [""]
    resources: ["services","configmaps","secrets"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes","gateways","gatewayclasses","grpcroutes"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: [ "gateway.networking.k8s.io" ]
    resources: [ "gateways/status","gatewayclasses/status","httproutes/status" ]
    verbs: [ "get","patch","update" ]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apis"]
    verbs: ["get","list","watch","update","delete","create", "patch"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apis/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apis/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["authentications"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["authentications/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["authentications/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backends"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backends/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backends/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apipolicies"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apipolicies/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["grpcroutes"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["grpcroutes/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["grpcroutes/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["apipolicies/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["interceptorservices"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["interceptorservices/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["interceptorservices/status"]
    verbs: ["get","patch","update"]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "scopes" ]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["scopes/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["scopes/status"]
    verbs: ["get","patch","update"]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "ratelimitpolicies" ]
    verbs: [ "get","list","watch","update","delete","create" ]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "ratelimitpolicies/finalizers" ]
    verbs: [ "update" ]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "ratelimitpolicies/status" ]
    verbs: [ "get","patch","update" ]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "airatelimitpolicies" ]
    verbs: [ "get","list","watch","update","delete","create" ]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "airatelimitpolicies/finalizers" ]
    verbs: [ "update" ]
  - apiGroups: [ "dp.wso2.com" ]
    resources: [ "airatelimitpolicies/status" ]
    verbs: [ "get","patch","update" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get","list","watch","update","patch","create","delete" ]
  - apiGroups: ["dp.wso2.com"]
    resources: ["tokenissuers"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["tokenissuers/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["tokenissuers/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backendjwts"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backendjwts/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["backendjwts/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["gqlroutes"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["gqlroutes/finalizers"]
    verbs: ["update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["gqlroutes/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["aiproviders"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["aiproviders/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["dp.wso2.com"]
    resources: ["aiproviders/finalizers"]
    verbs: ["update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applications"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applications/finalizers"]
    verbs: ["update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applications/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["subscriptions"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["subscriptions/finalizers"]
    verbs: ["update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["subscriptions/status"]
    verbs: ["get","patch","update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applicationmappings"]
    verbs: ["get","list","watch","update","delete","create"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applicationmappings/finalizers"]
    verbs: ["update"]
  - apiGroups: ["cp.wso2.com"]
    resources: ["applicationmappings/status"]
    verbs: ["get","patch","update"]
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/envoy-gateway-cluster-role.yaml
# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: envoy-gateway-cluster-role
rules:
  - apiGroups: ["dp.wso2.com"]
    resources: ["apipolicies/status"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["apipolicies"]
    verbs: ["get", "list", "watch"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-cainjector
subjects:
  - name: apk-cert-manager-cainjector
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-issuers
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-clusterissuers
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-certificates
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-orders
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-challenges
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-ingress-shim
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-approve:cert-manager-io
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-controller-certificatesigningrequests
subjects:
  - name: apk-cert-manager
    namespace: default
    kind: ServiceAccount
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-cert-manager-webhook:subjectaccessreviews
subjects:
- kind: ServiceAccount
  name: apk-cert-manager-webhook
  namespace: default
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apk-envoy-envoy-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apk-envoy-envoy-gateway-role
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/apk-cluster-role-binding.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: apk-wso2-kgw-role-binding
  namespace: default
roleRef:
  kind: ClusterRole
  name: wso2kgw-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: wso2kgw-platform
    namespace: default
---
# Source: kubernetes-gateway-helm/templates/serviceAccount/envoy-gateway-cluster-role-binding.yaml
# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: envoy-gateway-cluster-role-binding
roleRef:
  kind: ClusterRole
  name: envoy-gateway-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: envoy-gateway
    namespace: envoy-gateway-system
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-cert-manager-tokenrequest
  namespace: default
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    resourceNames: ["apk-cert-manager"]
    verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-cert-manager-webhook:dynamic-serving
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
  - 'apk-cert-manager-webhook-ca'
  verbs: ["get", "list", "watch", "update"]
# It's not possible to grant CREATE permission on a single resourceName.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/infra-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-envoy-infra-manager
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  - configmaps
  verbs:
  - create
  - get
  - delete
  - deletecollection
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  verbs:
  - create
  - get
  - delete
  - deletecollection
  - patch
- apiGroups:
  - autoscaling
  - policy
  resources:
  - horizontalpodautoscalers
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
  - deletecollection
  - patch
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-envoy-leader-election-role
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apk-cert-manager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: apk-cert-manager-cainjector
    namespace: default
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apk-cert-manager:leaderelection
subjects:
  - kind: ServiceAccount
    name: apk-cert-manager
    namespace: default
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/rbac.yaml
# grant cert-manager permission to create tokens for the serviceaccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-cert-manager-apk-cert-manager-tokenrequest
  namespace: default
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apk-cert-manager-tokenrequest
subjects:
  - kind: ServiceAccount
    name: apk-cert-manager
    namespace: default
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-cert-manager-webhook:dynamic-serving
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apk-cert-manager-webhook:dynamic-serving
subjects:
- kind: ServiceAccount
  name: apk-cert-manager-webhook
  namespace: default
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/infra-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-envoy-infra-manager
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'apk-envoy-infra-manager'
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-envoy-leader-election-rolebinding
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'apk-envoy-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: apk-cert-manager-cainjector
  namespace: default
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: http-metrics
  selector:
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: apk-cert-manager
  namespace: default
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: tcp-prometheus-servicemonitor
    targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: apk-cert-manager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: "https"
  - name: metrics
    port: 9402
    protocol: TCP
    targetPort: "http-metrics"
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    control-plane: envoy-gateway
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    control-plane: envoy-gateway
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
  ports:
  - name: grpc
    port: 18000
    targetPort: 18000
  - name: ratelimit
    port: 18001
    targetPort: 18001
  - name: wasm
    port: 18002
    targetPort: 18002
  - name: metrics
    port: 19001
    targetPort: 19001
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: wso2kgw-db-service-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: kubernetes-gateway-helm/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/name: redis
---
# Source: kubernetes-gateway-helm/charts/redis/templates/master/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-ds-service.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-config-ds-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: configdeployer-ds
    app.kubernetes.io/release: apk
  ports:
    - name: servlet-https
      protocol: TCP
      port: 9443
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/common-controller-service.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-common-controller-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: commoncontroller
    app.kubernetes.io/release: apk
  ports:
    - name: https-rate-limiter
      protocol: TCP
      port: 18005
    - name: https-enforcer-xds
      protocol: TCP
      port: 18002
    - name: webhook-server
      protocol: TCP
      port: 443
      targetPort: 9443
    - name: https-internal-api
      protocol: TCP
      port: 18003
    - name: web-server
      protocol: TCP
      port: 9543
      targetPort: 9543
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-extension-server/envoy-gateway-extension-server-service.yaml
# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: envoy-gateway-extension-server-service
  namespace: envoy-gateway-system
  labels:
    app: envoy-gateway-extension-server
spec:
  selector:
    app.kubernetes.io/app: envoy-gateway-extension-server
    app.kubernetes.io/release: apk
  ports:
    - protocol: TCP
      port: 5005        
      targetPort: 5005 
  type: ClusterIP
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-grpc-service.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-enforcer-grpc-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: enforcer
    app.kubernetes.io/release: apk
  ports:
    - name: servlet-https
      protocol: TCP
      port: 8081
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-service.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-enforcer-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: enforcer
    app.kubernetes.io/release: apk
  ports:
    - name: servlet-https
      protocol: TCP
      port: 9092
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ds/idp-ds-service.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-idp-ds-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: idp-ds
    app.kubernetes.io/release: apk
  ports:
    - name: servlet-https
      protocol: TCP
      port: 9443
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ui/idp-ui-service.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: v1
kind: Service
metadata:
  name: apk-wso2-kgw-idp-ui-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app.kubernetes.io/app: idp-ui
    app.kubernetes.io/release: apk
  ports:
    - name: servlet-https
      protocol: TCP
      port: 9443
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/cainjector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-cert-manager-cainjector
  namespace: default
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: apk
      app.kubernetes.io/component: "cainjector"
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: apk
        app.kubernetes.io/component: "cainjector"
        app.kubernetes.io/version: "v1.17.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.17.1
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: apk-cert-manager-cainjector
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-cainjector
          image: "quay.io/jetstack/cert-manager-cainjector:v1.17.1"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --leader-election-namespace=kube-system
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-cert-manager
  namespace: default
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: apk
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: apk
        app.kubernetes.io/component: "controller"
        app.kubernetes.io/version: "v1.17.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.17.1
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: apk-cert-manager
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-controller
          image: "quay.io/jetstack/cert-manager-controller:v1.17.1"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.17.1
          - --max-concurrent-challenges=60
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          # LivenessProbe settings are based on those used for the Kubernetes
          # controller-manager. See:
          # https://github.com/kubernetes/kubernetes/blob/806b30170c61a38fedd54cc9ede4cd6275a1ad3b/cmd/kubeadm/app/util/staticpod/utils.go#L241-L245
          livenessProbe:
            httpGet:
              port: http-healthz
              path: /livez
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 8
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-cert-manager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: apk
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: apk
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/version: "v1.17.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.17.1
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: apk-cert-manager-webhook
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-webhook
          image: "quay.io/jetstack/cert-manager-webhook:v1.17.1"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=apk-cert-manager-webhook-ca
          - --dynamic-serving-dns-names=apk-cert-manager-webhook
          - --dynamic-serving-dns-names=apk-cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=apk-cert-manager-webhook.$(POD_NAMESPACE).svc
          
          ports:
          - name: https
            protocol: TCP
            containerPort: 10250
          - name: healthcheck
            protocol: TCP
            containerPort: 6080
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/envoy-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    control-plane: envoy-gateway
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: envoy-gateway
      app.kubernetes.io/name: envoy
      app.kubernetes.io/instance: apk
  template:
    metadata:
      annotations:
        prometheus.io/port: "19001"
        prometheus.io/scrape: "true"
      labels:
        control-plane: envoy-gateway
        app.kubernetes.io/name: envoy
        app.kubernetes.io/instance: apk
    spec:
      containers:
      - args:
        - server
        - --config-path=/config/envoy-gateway.yaml
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: docker.io/envoyproxy/gateway:v1.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: envoy-gateway
        ports:
        - containerPort: 18000
          name: grpc
        - containerPort: 18001
          name: ratelimit
        - containerPort: 18002
          name: wasm
        - containerPort: 19001
          name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: envoy-gateway-config
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      imagePullSecrets: []
      serviceAccountName: envoy-gateway
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: envoy-gateway-config
        name: envoy-gateway-config
      - name: certs
        secret:
          secretName: envoy-gateway
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-ds-deployment.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-wso2-kgw-config-ds-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/app: configdeployer-ds
      app.kubernetes.io/release: apk
  template:
    metadata:
      labels:
        app.kubernetes.io/app: configdeployer-ds
        app.kubernetes.io/release: apk
      annotations:
        checksum/config: 472dc2b92da6822a64c9832ebec1f03581289a51ca5f06b7c8876a7f99a972a2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/app
                  operator: In
                  values:
                  - config-ds
              topologyKey: "topology.kubernetes.io/zone"
            weight: 100
      serviceAccountName: wso2kgw-platform
      containers:
        - name: config-ds
          image: wso2/kgw-config-deployer-service:1.3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 9443
              protocol: "TCP"
            
          env:
            
          readinessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20    
          livenessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests:
              memory: 512Mi
              cpu: 200m
            limits:
              memory: 1024Mi
              cpu: 500m
          volumeMounts:
            - mountPath: /home/wso2kgw/config-deployer/conf/Config.toml
              name: config-toml-volume
              subPath: Config.toml
            - name: config-ds-tls-volume
              mountPath: /home/wso2kgw/config-deployer/security/config.key
              subPath: tls.key
            - name: config-ds-tls-volume
              mountPath: /home/wso2kgw/config-deployer/security/config.pem
              subPath: tls.crt
            
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2kgw/config-deployer/security/mg.pem
              subPath: mg.pem
            - name: tmp
              mountPath: /tmp
            - name: config-deployer-temp
              mountPath: /home/wso2kgw/config-deployer/tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true      
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"

      volumes:
        - name: config-toml-volume
          configMap:
            name: apk-wso2-kgw-config-ds-configmap
        - name: config-ds-tls-volume
          secret:
       
            secretName: apk-wso2-kgw-config-ds-server-cert
       
        
        - name: enforcer-jwt-secret-volume
          secret: 
            secretName: apk-wso2-kgw-enforcer-keystore-secret
        - name: tmp
          emptyDir: {}
        - name: config-deployer-temp
          emptyDir: {}
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/common-controller-deployment.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-wso2-kgw-common-controller-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/app: commoncontroller
      app.kubernetes.io/release: apk
  template:
    metadata:
      labels:
        app.kubernetes.io/app: commoncontroller
        app.kubernetes.io/release: apk
      annotations:
        checksum/config: e7bf6e5772ca7a7c6e10fdec744f007030598cd0aa6aa55a697b900a97d12262
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/app
                  operator: In
                  values:
                  - common-controller
              topologyKey: "topology.kubernetes.io/zone"
            weight: 100
      serviceAccountName: wso2kgw-platform
      containers:
        - name: commoncontroller
          image: wso2/kgw-common-controller:1.3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 18005
              protocol: TCP
            - containerPort: 18002
              protocol: TCP
            - containerPort: 9543
              protocol: TCP
            - containerPort: 18003
              protocol: TCP
            
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 128Mi
              cpu: 200m
          env:
          - name: OPERATOR_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: COMMON_CONTROLLER_PRIVATE_KEY_PATH
            value: /home/wso2/security/keystore/commoncontroller.key
          - name: COMMON_CONTROLLER_PUBLIC_CERT_PATH
            value: /home/wso2/security/keystore/commoncontroller.crt
          - name: COMMON_CONTROLLER_SERVER_NAME
            value: apk-wso2-kgw-common-controller-service.default.svc
          volumeMounts:
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/commoncontroller.key
              subPath: tls.key
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/commoncontroller.crt
              subPath: tls.crt
            - name: common-controller-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/adapter-ca.crt
              subPath: ca.crt
            - name: log-conf-volume
              mountPath: /home/wso2/conf/
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: adapter-webhook-server-cert
              readOnly: true
            - mountPath: /home/wso2/security/sts/
              name: sts-shared-auth-key
              readOnly: true
          readinessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true      
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      volumes:
        - name: common-controller-keystore-secret-volume
          secret:
            secretName: apk-wso2-kgw-common-controller-server-cert
            defaultMode: 420
        - name: log-conf-volume
          configMap: 
            name: apk-wso2-kgw-common-log-conf
        - name: adapter-webhook-server-cert
          secret:
            secretName: apk-wso2-kgw-webhook-server-cert
            defaultMode: 420
        - name: sts-shared-auth-key
          secret:
            secretName: apk-wso2-kgw-sts-shared-auth-key
            defaultMode: 420
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-extension-server/envoy-gateway-extension-server-deployment.yaml
# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-gateway-extension-server
  namespace: envoy-gateway-system
  labels:
    app: envoy-gateway-extension-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: envoy-gateway-extension-server
      app.kubernetes.io/release: apk
  template:
    metadata:
      labels:
        app.kubernetes.io/app: envoy-gateway-extension-server
        app.kubernetes.io/release: apk
      annotations:
        checksum/config: 1ee9638aa1c33b768ea0a176a12c5465566e9a515f5135fcebcd4db5e7a64b8f  
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/app
                  operator: In
                  values:
                  - envoy-gateway-extension-server
              topologyKey: "topology.kubernetes.io/zone"
            weight: 100
      serviceAccountName: wso2kgw-platform
      containers:
        - name: envoy-gateway-extension-server
          image: apk-envoy-gateway-extension-server:1.3.1-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5005
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 128Mi
              cpu: 200m
          env:
            - name: LOG_LEVEL
              value: "DEBUG"    
      securityContext:
        runAsUser: 10001
        runAsNonRoot: true
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ds/idp-ds-deployment.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-wso2-kgw-idpds-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/app: idp-ds
      app.kubernetes.io/release: apk
  template:
    metadata:
      labels:
        app.kubernetes.io/app: idp-ds
        app.kubernetes.io/release: apk
      annotations:
        checksum/config: 2e761707fff46c3005b5b82dfbae68f4578d1dc71707a84b539e15d863be0268
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of DB Server deployment"; while ! nc -z "wso2kgw-db-service" 5432; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";']
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
      containers:
        - name: idpds
          image: wso2/kgw-idp-domain-service:1.3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 9443
              protocol: "TCP"
                        
          env:
            
          readinessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20    
          livenessProbe:
            httpGet:
              path: /health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests:
              memory: 512Mi
              cpu: 200m
            limits:
              memory: 1024Mi
              cpu: 500m
          volumeMounts:
            - mountPath: /home/wso2kgw/idp/conf/Config.toml
              name: config-toml-volume
              subPath: Config.toml
            - mountPath: /home/wso2kgw/idp/security/wso2carbon.key
              name: idp-signing-keystore-volume
              subPath: wso2carbon.key
            - mountPath: /home/wso2kgw/idp/security/wso2carbon.pem
              name: idp-signing-keystore-volume
              subPath: wso2carbon.pem
            - name: idp-ds-tls-volume
              mountPath: /home/wso2kgw/idp/security/idp.key
              subPath: tls.key
            - name: idp-ds-tls-volume
              mountPath: /home/wso2kgw/idp/security/idp.crt
              subPath: tls.crt
            - name: db-secret-volume
              mountPath: /home/wso2kgw/idp/security/database/
            - name: tmp
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            readOnlyRootFilesystem: true      
      securityContext:
        seccompProfile:
          type: "RuntimeDefault"
      volumes:
        - name: config-toml-volume
          configMap:
            name: apk-wso2-kgw-idp-ds-configmap
        - name: idp-signing-keystore-volume
          secret: 
            secretName: apk-wso2-kgw-idp-signing-keystore-secret
        - name: idp-ds-tls-volume
          secret:
       
            secretName: apk-wso2-kgw-idp-ds-server-cert
       
        - name: db-secret-volume
          secret:
       
            secretName: kgw-db-secret
            items:
              - key: "DB_PASSWORD"
                path: db-password
       
        - name: tmp
          emptyDir: {}
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ui/idp-ui-deployment.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apk-wso2-kgw-idpui-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/app: idp-ui
      app.kubernetes.io/release: apk
  template:
    metadata:
      labels:
        app.kubernetes.io/app: idp-ui
        app.kubernetes.io/release: apk
    spec:
      automountServiceAccountToken: false
      containers:
        - name: idpui
          image: wso2/kgw-idp-ui:1.3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 9443
              protocol: "TCP"
          env:
          - name: IDP_LOGIN_URL
            value: https://idp.am.wso2.com:9095/commonauth/login
          - name: IDP_AUTH_CALLBACK_URL
            value: https://idp.am.wso2.com:9095/oauth2/auth-callback
          - name: SSL_CERT_PATH
            value: /home/wso2kgw/security/idp.crt
          - name: SSL_KEY_PATH
            value: /home/wso2kgw/security/idp.key
          readinessProbe:
            httpGet:
              path: /authenticationEndpoint/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20    
          livenessProbe:
            httpGet:
              path: /authenticationEndpoint/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 20
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
          volumeMounts:
            - name: idp-ui-tls-volume
              mountPath: /home/wso2kgw/security/idp.key
              subPath: tls.key
            - name: idp-ui-tls-volume
              mountPath: /home/wso2kgw/security/idp.crt
              subPath: tls.crt      
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"

      volumes:
        - name: idp-ui-tls-volume
          secret:
       
            secretName: apk-wso2-kgw-idp-ui-server-cert
---
# Source: kubernetes-gateway-helm/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wso2kgw-db-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.4.0
    helm.sh/chart: postgresql-16.4.14
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: wso2kgw-db-service-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: wso2kgw-db-service
      labels:
        app.kubernetes.io/instance: apk
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 17.4.0
        helm.sh/chart: postgresql-16.4.14
        app.kubernetes.io/component: primary
      annotations:
        checksum/extended-configuration: 1eddd68c66acac809f88f47ff1159ff40a92236fecd067cb67b65f5696e675cc
    spec:
      serviceAccountName: wso2kgw-db-service
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: apk
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:17.4.0-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "true"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "wso2carbon"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wso2kgw-db-service
                  key: password
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wso2kgw-db-service
                  key: postgres-password
            - name: POSTGRES_DATABASE
              value: "WSO2AM_DB"
            - name: POSTGRES_INITSCRIPTS_USERNAME
              value: wso2carbon
            - name: POSTGRES_INITSCRIPTS_PASSWORD
              value: "wso2carbon"
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "wso2carbon" -d "dbname=WSO2AM_DB" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "wso2carbon" -d "dbname=WSO2AM_DB" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/postgresql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/postgresql/tmp
              subPath: app-tmp-dir
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: postgresql-extended-config
              mountPath: /bitnami/postgresql/conf/conf.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: postgresql-extended-config
          configMap:
            name: wso2kgw-db-service-extended-configuration
        - name: custom-init-scripts
          configMap:
            name: postgres-initdb-scripts-configmap
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: kubernetes-gateway-helm/charts/redis/templates/master/application.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: apk
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.2
    helm.sh/chart: redis-20.10.0
    app.kubernetes.io/component: master
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: apk
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: master
  serviceName: redis-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: apk
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.4.2
        helm.sh/chart: redis-20.10.0
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: 2a9ab4a5432825504d910f022638674ce88eaefe9f9f595ad8bc107377d104fb
        checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
        checksum/scripts: bdec350b84a1ace7cc118db113a21c9f160bde3425b07714e1c0c1da722621cf
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: []
        sysctls: []
      serviceAccountName: redis-master
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: apk
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/component: master
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      enableServiceLinks: true
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:7.4.2-debian-12-r4
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "true"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: empty-dir
              mountPath: /opt/bitnami/redis/etc/
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: start-scripts
          configMap:
            name: redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: redis-configuration
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: redis-data
        labels:
          app.kubernetes.io/instance: apk
          app.kubernetes.io/name: redis
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
#
# START crd
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
# START crd
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
# START crd
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
# START crd
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
# START crd
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/crds.yaml
# START crd
---
# Source: kubernetes-gateway-helm/templates/idp/authenticationEndpoint-domain-api-authentication.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# apiVersion: "gateway.envoyproxy.io/v1alpha1"
# kind: "SecurityPolicy"
# metadata:
#   name: apk-wso2-kgw-authentication-endpoint-ds-authentication
#   namespace: default
#   labels:
#     api-name: "idp-domain-service"
#     api-version: "1.0.0"
#   annotations:
#     "helm.sh/hook": post-install,post-upgrade
# spec:
#   targetRefs:
#     - kind: HTTPRoute
#       group: "gateway.networking.k8s.io"
#       name: apk-wso2-kgw-authentication-endpoint-ds-httproute
#
---
# Source: kubernetes-gateway-helm/templates/idp/commonoauth-domain-api-no-authentication.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# apiVersion: "gateway.envoyproxy.io/v1alpha1"
# kind: "SecurityPolicy"
# metadata:
#   name: apk-wso2-kgw-commonoauth-ds-authentication
#   namespace: default
#   labels:
#     api-name: "idp-domain-service"
#     api-version: "1.0.0"
#   annotations:
#     "helm.sh/hook": post-install,post-upgrade
# spec:
#   targetRefs:
#     - kind: HTTPRoute
#       group: "gateway.networking.k8s.io"
#       name: apk-wso2-kgw-commonoauth-ds-httproute
#
---
# Source: kubernetes-gateway-helm/templates/idp/dcr-domain-api-no-authentication.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# apiVersion: "gateway.envoyproxy.io/v1alpha1"
# kind: "SecurityPolicy"
# metadata:
#   name: apk-wso2-kgw-dcr-ds-authentication
#   namespace: default
#   labels:
#     api-name: "idp-domain-service"
#     api-version: "1.0.0"
#   annotations:
#     "helm.sh/hook": post-install,post-upgrade
# spec:
#   targetRefs:
#     - kind: HTTPRoute
#       group: "gateway.networking.k8s.io"
#       name: apk-wso2-kgw-dcr-ds-httproute
#
---
# Source: kubernetes-gateway-helm/templates/idp/oauth-domain-api-no-authentication.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# apiVersion: "gateway.envoyproxy.io/v1alpha1"
# kind: "SecurityPolicy"
# metadata:
#   name: apk-wso2-kgw-oauth-ds-authentication
#   namespace: default
#   labels:
#     api-name: "idp-domain-service"
#     api-version: "1.0.0"
#   annotations:
#     "helm.sh/hook": post-install,post-upgrade
# spec:
#   targetRefs:
#     - kind: HTTPRoute
#       group: "gateway.networking.k8s.io"
#       name: apk-wso2-kgw-oauth-ds-httproute
#
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/AIProviders/ai-provider-azure-ai.yaml
apiVersion: dp.wso2.com/v1alpha4
kind: AIProvider
metadata:
  name: ai-provider-azure-ai
  namespace: default
spec:
  providerName : "AzureAI"
  providerAPIVersion : "2024-06-01"
  organization : "default"
  supportedModels:
    - "gpt-4o"
    - "gpt-3.5"
    - "gpt-4.5"
  requestModel:
    in: "Body"
    value: "model"
  responseModel:
    in: "Body"
    value: "model"
  rateLimitFields:
    promptTokens: 
      in: "Body"
      value: "$usage.promptTokens"
    completionToken:
      in: "Body"
      value: "$usage.completionTokens"
    totalToken:
      in: "Body"
      value: "$usage.totalTokens"
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/AIProviders/ai-provider-mistral-ai.yaml
apiVersion: dp.wso2.com/v1alpha4
kind: AIProvider
metadata:
  name: ai-provider-mistral-ai
  namespace: default
spec:
  providerName : "MistralAI"
  providerAPIVersion : "v1"
  organization : "default"
  supportedModels:
    - "mistral-small-latest"
    - "open-mistral-nemo"
    - "mistral-large-latest"
  requestModel:
    in: "Body"
    value: "model"
  responseModel:
    in: "Body"
    value: "model"
  rateLimitFields:
    promptTokens: 
      in: "Body"
      value: "$usage.promptTokens"
    completionToken:
      in: "Body"
      value: "$usage.completionTokens"
    totalToken:
      in: "Body"
      value: "$usage.totalTokens"
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/AIProviders/ai-provider-open-ai.yaml
apiVersion: dp.wso2.com/v1alpha4
kind: AIProvider
metadata:
  name: ai-provider-open-ai
  namespace: default
spec:
  providerName : "OpenAI"
  providerAPIVersion : "v1"
  organization : "default"
  supportedModels:
    - "gpt-4o"
    - "o1-mini"
    - "gpt-4o-mini"
  requestModel:
    in: "Body"
    value: "model"
  responseModel:
    in: "Body"
    value: "model"
  rateLimitFields:
    promptTokens: 
      in: "Body"
      value: "$usage.promptTokens"
    completionToken:
      in: "Body"
      value: "$usage.completionTokens"
    totalToken:
      in: "Body"
      value: "$usage.totalTokens"
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deployer-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-config-deployer-ds-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-config-deployer-ds-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-config-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-config-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-generator-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-config-generator-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-config-generator-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-config-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-config-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/api/notification-api.yaml
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-notification-api-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-notification-api-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-common-controller-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-common-controller-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-ext-proc-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-enforcer-ext-proc-backend-tls
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: apk-wso2-kgw-enforcer-grpc-service
      sectionName: servlet-https
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-enforcer-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-enforcer-grpc-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/idp/authenticationEndpoint-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-authentication-endpoint-ds-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-authentication-endpoint-ds-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-idp-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-idp-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/idp/commonoauth-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-commonoauth-ds-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-commonoauth-ds-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-idp-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-idp-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/idp/dcr-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-dcr-ds-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-dcr-ds-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-idp-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-idp-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/idp/oauth-domain-api-backend-tls.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: apk-wso2-kgw-oauth-backend-tls
spec:
  targetRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-oauth-ds-backend
  validation:
    caCertificateRefs:
      - name: apk-wso2-kgw-idp-ds-server-cert
        group: ''
        kind: Secret
    hostname: apk-wso2-kgw-idp-ds-service.default.svc
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/common-controller-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-common-controller-server-cert
  namespace: default
spec:
  commonName: common-controller-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-common-controller-service.default.svc
  - apk-wso2-kgw-common-controller-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-common-controller-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/config-deployer-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-config-ds-server-cert
  namespace: default
spec:
  commonName: config-ds-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-config-ds-service.default.svc
  - apk-wso2-kgw-config-ds-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-config-ds-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/enforcer-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-enforcer-server-cert
  namespace: default
spec:
  commonName: enforcer-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-enforcer-service.default.svc
  - apk-wso2-kgw-enforcer-service.default.svc.cluster.local
  - apk-wso2-kgw-enforcer-grpc-service.default.svc
  - apk-wso2-kgw-enforcer-grpc-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-enforcer-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/envoy-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: envoy-cert
  namespace: default
spec:
  commonName: envoy-gateway
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - \*.default.svc
  - \*.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: envoy-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/gateway-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-gateway-server-cert
  namespace: default
spec:
  commonName: gateway-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-gateway-service.default.svc
  - apk-wso2-kgw-gateway-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-gateway-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/gw-listener-certificate.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-gw-listener-cert
  namespace: default
spec:
  dnsNames:
    - "*.gw.wso2.com"
    - "*.sandbox.gw.wso2.com"
    - "prod.gw.wso2.com"
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-gw-listener-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/idp-listener-certificate.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-idp-listener-cert
  namespace: default
spec:
  dnsNames:
  - "*.idp.am.wso2.com"
  - "idp.am.wso2.com"
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-idp-listener-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/idp-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-idp-ds-server-cert
  namespace: default
spec:
  commonName: idp-ds-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-idp-ds-service.default.svc
  - apk-wso2-kgw-idp-ds-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-idp-ds-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/idp-ui-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-idp-ui-server-cert
  namespace: default
spec:
  commonName: idp-ui-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-idp-ui-service.default.svc
  - apk-wso2-kgw-idp-ui-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-idp-ui-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/localhost-listener-certificate.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-localhost-listener-cert
  namespace: default
spec:
  dnsNames:
  - "localhost"
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-localhost-listener-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/runtime-domain-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-runtime-ds-server-cert
  namespace: default
spec:
  commonName: runtime-ds-service
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 2048
  dnsNames:
  - apk-wso2-kgw-runtime-ds-service.default.svc
  - apk-wso2-kgw-runtime-ds-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-runtime-ds-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/system-api-listener-certificate.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-system-api-listener-cert
  namespace: default
spec:
  dnsNames:
  - "*.api.am.wso2.com"
  - "api.am.wso2.com"
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-system-api-listener-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/certificates/webhook-server-certificate.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: apk-wso2-kgw-webhook-server-cert
  namespace: default
spec:
  dnsNames:
  - apk-wso2-kgw-common-controller-service.default.svc
  - apk-wso2-kgw-common-controller-service.default.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: apk-wso2-kgw-selfsigned-issuer
  secretName: apk-wso2-kgw-webhook-server-cert
---
# Source: kubernetes-gateway-helm/templates/cert-manager/issuers/self-signed-issuer.yaml
# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: apk-wso2-kgw-selfsigned-issuer
spec:
  ca:
    secretName: kgw-root-certificate
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer-ext-proc.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyExtensionPolicy
metadata:
  name: enforcer-ext-proc
  namespace: default
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: wso2-kgw-default
  extProc:
    - backendRefs:
        - group: ""
          kind: Service
          name: apk-wso2-kgw-enforcer-grpc-service
          namespace: default
          port: 8081
      processingMode:
        request:
          body: Streamed
        response:
          body: Streamed
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/enforcer.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: wso2-kgw-envoy-proxy-default
  namespace: default
spec:
  logging:
    level:
      default: warn
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        patch:
          type: StrategicMerge
          value:
            spec:
              selector:
                matchLabels:
                  app.kubernetes.io/app: enforcer
                  app.kubernetes.io/release: apk
              template:
                metadata:
                  labels:
                    app.kubernetes.io/app: enforcer
                    app.kubernetes.io/release: apk
                spec:
                  containers:
                    - name: enforcer
                      image: wso2/kgw-enforcer:1.3.0
                      imagePullPolicy: Always
                      ports:
                        - containerPort: 8081
                          protocol: "TCP"
                        - containerPort: 9001
                          protocol: "TCP"
                        - containerPort: 5006	
                          protocol: "TCP"
                        - containerPort: 8084
                          protocol: "TCP"
                        - containerPort: 9092
                          protocol: "TCP"
                        - containerPort: 18002
                          protocol: "TCP"
                      resources:
                        requests:
                          memory: 128Mi
                          cpu: 200m
                        limits:
                          memory: 512Mi
                          cpu: 500m
                      env:
                        - name: TOKEN_REVOCATION_ENABLED
                          value: "true"
                        - name: COMMON_CONTROLLER_HOST_NAME
                          value: apk-wso2-kgw-common-controller-service.default.svc
                        - name: COMMON_CONTROLLER_HOST
                          value: apk-wso2-kgw-common-controller-service.default.svc
                        - name: ENFORCER_PRIVATE_KEY_PATH
                          value: /home/wso2/security/keystore/enforcer.key  
                        - name: ENFORCER_PUBLIC_CERT_PATH
                          value: /home/wso2/security/keystore/enforcer.crt
                        - name: ENFORCER_SERVER_NAME
                          value: apk-wso2-kgw-enforcer-service.default.svc
                        - name: TRUSTED_CA_CERTS_PATH
                          value: "/home/wso2/security/truststore"
                        - name: COMMON_CONTROLLER_XDS_PORT
                          value : "18002"
                        - name: COMMON_CONTROLLER_REST_PORT
                          value : "18003"
                        - name: ENFORCER_LABEL
                          value : wso2-kgw-default
                        - name: ENFORCER_REGION
                          value: UNKNOWN
                        - name: XDS_MAX_MSG_SIZE
                          value: "4194304"
                        - name: XDS_MAX_RETRIES 
                          value: "3"
                        - name: enforcer_admin_pwd
                          value: admin
                        - name: REDIS_USERNAME
                          value: "default"
                        - name: REDIS_PASSWORD
                          value: ""
                        - name: REDIS_HOST
                          value: "redis-master"
                        - name: REDIS_PORT
                          value: "6379"
                        - name: IS_REDIS_TLS_ENABLED
                          value: "false"
                        - name: REDIS_REVOKED_TOKENS_CHANNEL
                          value: "wso2-kgw-revoked-tokens-channel"
                        - name: REDIS_KEY_FILE
                          value: "/home/wso2/security/truststore/enforcer.key"
                        - name: REDIS_CERT_FILE
                          value: "/home/wso2/security/truststore/enforcer.crt"
                        - name: REDIS_CA_CERT_FILE
                          value: "/home/wso2/security/truststore/enforcer.crt"
                        - name: REVOKED_TOKEN_CLEANUP_INTERVAL
                          value: "3600"
                      volumeMounts:
                        - name: tmp
                          mountPath: /tmp
                        - name: enforcer-keystore-secret-volume
                          mountPath: /home/wso2/security/keystore/enforcer.key
                          subPath: tls.key
                        - name: enforcer-keystore-secret-volume
                          mountPath: /home/wso2/security/keystore/enforcer.crt
                          subPath: tls.crt
                        - name: enforcer-keystore-secret-volume
                          mountPath: /home/wso2/security/truststore/apk.crt
                          subPath: ca.crt
                        - name: enforcer-keystore-secret-volume
                          mountPath: /home/wso2/security/truststore/enforcer.crt
                          subPath: tls.crt
                        - name: log-conf-volume
                          mountPath: /home/wso2/conf/
                        - name: enforcer-health-check-volume
                          mountPath: /home/wso2/check_health.sh
                          subPath: check_health.sh
                        - name: enforcer-jwt-secret-volume
                          mountPath: /home/wso2/security/keystore/mg.pem
                          subPath: mg.pem
                        - name: enforcer-jwt-secret-volume
                          mountPath: /home/wso2/security/truststore/mg.pem
                          subPath: mg.pem
                        - name: enforcer-jwt-secret-volume
                          mountPath: /home/wso2/security/keystore/mg.key
                          subPath: mg.key
                        - name: enforcer-trusted-certs
                          mountPath: /home/wso2/security/truststore/wso2carbon.pem
                          subPath: wso2carbon.pem
                        - name: enforcer-apikey-cert
                          mountPath: /home/wso2/security/truststore/wso2-apim-carbon.pem
                          subPath: wso2-apim-carbon.pem
                        - name: idp-certificate-secret-volume
                          mountPath: /home/wso2/security/truststore/idp.pem
                        
                          subPath: wso2carbon.pem
                        
                        # 
                      readinessProbe:
                        exec:
                          command: [ "sh", "check_health.sh" ]
                        initialDelaySeconds: 20
                        periodSeconds: 20
                        failureThreshold: 5
                      livenessProbe:
                        exec:
                          command: [ "sh", "check_health.sh" ]
                        initialDelaySeconds: 20
                        periodSeconds: 20
                        failureThreshold: 5
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop: ["ALL"]
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                  imagePullSecrets:
                    - name: 
                  securityContext:
                    seccompProfile:
                      type: "RuntimeDefault"
                  volumes:
                    - name: enforcer-keystore-secret-volume
                      secret:
                        secretName: apk-wso2-kgw-enforcer-server-cert
                    - name: log-conf-volume
                      configMap:
                        name: apk-wso2-kgw-log-conf
                    - name: enforcer-health-check-volume
                      configMap:
                        name: apk-wso2-kgw-enforcer-grpc-probe-script-conf
                    - name: enforcer-jwt-secret-volume
                      secret:
                        secretName: apk-wso2-kgw-enforcer-keystore-secret
                    - name: enforcer-trusted-certs
                      secret:
                        secretName: apk-wso2-kgw-enforcer-truststore-secret
                    - name: enforcer-apikey-cert
                      secret:
                        secretName: apk-wso2-kgw-enforcer-truststore-secret
                    - name: idp-certificate-secret-volume
                      secret:
                      
                        secretName: apk-wso2-kgw-enforcer-truststore-secret
                      
                    - name: tmp
                      emptyDir: {}
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/gateway.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: wso2-kgw-default
  namespace: default
  annotations:
    cert-manager.io/issuer: apk-wso2-kgw-selfsigned-issuer
spec:
  gatewayClassName: wso2-kgw-default
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: wso2-kgw-envoy-proxy-default
  listeners:
    
    - name: httpslistener
      hostname: "*.gw.wso2.com"
      port: 9095
      protocol: "HTTPS"
      allowedRoutes:
        namespaces: 
          from: "All"
      tls:  
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: apk-wso2-kgw-gw-listener-cert
            namespace: default
    
    - name: apilistener
      hostname: "api.am.wso2.com"
      port: 9095
      protocol: "HTTPS"
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: apk-wso2-kgw-system-api-listener-cert
            namespace: default
    
    - name: idplistener
      hostname: "idp.am.wso2.com"
      port: 9095
      protocol: "HTTPS"
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: apk-wso2-kgw-idp-listener-cert
            namespace: default
    
    
    - name: systemlistener
      hostname: "localhost"
      port: 9095
      protocol: "HTTPS"
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: apk-wso2-kgw-localhost-listener-cert
            namespace: default
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/envoy-gateway-runtime/gateway-class.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: wso2-kgw-default
spec:
  controllerName: "gateway.envoyproxy.io/gatewayclass-controller"
---
# Source: kubernetes-gateway-helm/templates/idp/authenticationEndpoint-domain-api-httproute.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: apk-wso2-kgw-authentication-endpoint-ds-httproute
  namespace: default
  labels:
    api-name: "idp-domain-service"
    api-version: "1.0.0"
spec:
  hostnames:
  - "idp.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "PathPrefix"
        value: "/authenticationEndpoint/1.0.0"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
            type: ReplacePrefixMatch
            replacePrefixMatch: /
    backendRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-authentication-endpoint-ds-backend
  parentRefs:
  - group: "gateway.networking.k8s.io"
    kind: "Gateway"
    name: wso2-kgw-default
    sectionName: "idplistener"
---
# Source: kubernetes-gateway-helm/templates/idp/commonoauth-domain-api-httproute.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: apk-wso2-kgw-commonoauth-ds-httproute
  namespace: default
  labels:
    api-name: "idp-domain-service"
    api-version: "1.0.0"
spec:
  hostnames:
  - "idp.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "PathPrefix"
        value: "/commonoauth/1.0.0"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
            type: ReplacePrefixMatch
            replacePrefixMatch: /commonoauth
    backendRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-commonoauth-ds-backend
  parentRefs:
  - group: "gateway.networking.k8s.io"
    kind: "Gateway"
    name: wso2-kgw-default
    sectionName: "idplistener"
---
# Source: kubernetes-gateway-helm/templates/idp/dcr-domain-api-httproute.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: apk-wso2-kgw-dcr-ds-httproute
  namespace: default
  labels:
    api-name: "idp-domain-service"
    api-version: "1.0.0"
spec:
  hostnames:
  - "idp.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "PathPrefix"
        value: "/dcr/1.0.0"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
            type: ReplacePrefixMatch
            replacePrefixMatch: /dcr
    backendRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-dcr-ds-backend
  parentRefs:
  - group: "gateway.networking.k8s.io"
    kind: "Gateway"
    name: wso2-kgw-default
    sectionName: "idplistener"
---
# Source: kubernetes-gateway-helm/templates/idp/oauth-domain-api-httproute.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: apk-wso2-kgw-oauth-ds-httproute
  namespace: default
  labels:
    api-name: "idp-domain-service"
    api-version: "1.0.0"
spec:
  hostnames:
  - "idp.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "PathPrefix"
        value: "/oauth2/1.0.0"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
            type: ReplacePrefixMatch
            replacePrefixMatch: /oauth2
    backendRefs:
    - group: gateway.envoyproxy.io
      kind: Backend
      name: apk-wso2-kgw-oauth-ds-backend
  parentRefs:
  - group: "gateway.networking.k8s.io"
    kind: "Gateway"
    name: wso2-kgw-default
    sectionName: "idplistener"
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: apk-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
  annotations:
    cert-manager.io/inject-ca-from-secret: "default/apk-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - "cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
        resources:
          - "certificaterequests"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 30
    failurePolicy: Fail
    # Only include 'sideEffects' field in Kubernetes 1.12+
    sideEffects: None
    clientConfig:
      service:
        name: apk-cert-manager-webhook
        namespace: default
        path: /mutate
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deploy-api-create-scope-policy.yaml
# Copyright (c) 2025 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: apk-wso2-kgw-api-create-scope-policy
  namespace: default
  labels:
    managed-by: "kgw"
  # annotations:
  #   "helm.sh/hook": post-install,post-upgrade
spec:
  targetRef:
    kind: HTTPRoute
    group: gateway.networking.k8s.io
    name: apk-wso2-kgw-config-deploy-api-route
  jwt:
    providers:
    - name: apk-wso2-kgw-idp-jwt-issuer
      issuer: https://idp.am.wso2.com/token
      remoteJWKS:
        uri: https://idp.am.wso2.com:9095/oauth2/jwks
  authorization:
    rules:
    - name: "api-create-rule"
      action: Allow
      principal:
        jwt:
          provider: apk-wso2-kgw-idp-jwt-issuer
          scopes:
          - apk:api_create
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/webhook-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: apk-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
  annotations:
    cert-manager.io/inject-ca-from-secret: "default/apk-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
      - key: cert-manager.io/disable-validation
        operator: NotIn
        values:
        - "true"
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 30
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: apk-cert-manager-webhook
        namespace: default
        path: /validate
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/startupapicheck-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: apk-cert-manager-startupapicheck
  namespace: default
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/certgen-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apk-envoy-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/api/notification-api.yaml
kind: "ConfigMap"
apiVersion: "v1"
metadata:
  name: "apk-wso2-kgw-notification-api-definition"
  namespace: default
  labels:
    managed-by: "kgw"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
binaryData:
  definition: "H4sIAAAAAAAA/31TTW/bMAz9K4LOi5N028W3dsghCJYUa7rLUhSqTc/qrI9KdFYv8H8fKTtrgwTzxTb5RL73SB2k82CV1zKXH7NZNpcfhNS2cjI/SNTYACXWDnWlC4XaWXF9u2RMCbEI2nOIENtaR84IH9xeU04oYaColdXRiMoFEcGW2v6kuH1fDR0dW2U7yzX3EOJQb05UZrKnWITAYZn/OMg2NJSrEX3Mp1MincGrMr6BrHBmup+f87oNrmyL1GkoJPuHVLRog8YuVS2hUm2D9P2Qkl5hHVn+NDHt+NO7iPyOrTEqdEdPOiZ/3nXwi0zAGkTsIoIZFXoVlAE8CrL0Q3jsPAy+089LC9TggsMgGCdcdeJgJr62EcUTiJ3cblaL9eO3xffNl+vtcrPeyYwLBXhpdYBS5hhaYPnYpbnSXAwD4NU3roS3fFGDUWkDmFlOBwLNTvbJHy4HEW9cmawpnEWwyR3lfTPSmj5Hpn04r+WenqHAZEag3QtIRqW0+wX2Us8+MUxzfoeTnWvDRBUFxDhJsUkNAUb8qeQhEr2zceh1NZvx69ThzSot3KdLuRtVilH3CJqfg+6tarF2Qf+hxoz6fKnUkuwKVjXiLi2kWITgaC37/67loIq2nDSQ2UnEEX3HDg+6/p15c5spXbHbVeN+J5A2PCU9TGwknGZ2f3K9kLTyvZJpIWhSfLgfnr9aQ7ylNgQAAA=="
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/startupapicheck-rbac.yaml
# create certificate role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-cert-manager-startupapicheck:create-cert
  namespace: default
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificaterequests"]
    verbs: ["create"]
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/certgen-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apk-envoy-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/startupapicheck-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-cert-manager-startupapicheck:create-cert
  namespace: default
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apk-cert-manager-startupapicheck:create-cert
subjects:
  - kind: ServiceAccount
    name: apk-cert-manager-startupapicheck
    namespace: default
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/certgen-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apk-envoy-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'apk-envoy-certgen'
subjects:
- kind: ServiceAccount
  name: 'apk-envoy-certgen'
  namespace: 'default'
---
# Source: kubernetes-gateway-helm/charts/cert-manager/templates/startupapicheck-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: apk-cert-manager-startupapicheck
  namespace: default
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: apk
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.17.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.17.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: apk
        app.kubernetes.io/component: "startupapicheck"
        app.kubernetes.io/version: "v1.17.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.17.1
    spec:
      restartPolicy: OnFailure
      serviceAccountName: apk-cert-manager-startupapicheck
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-startupapicheck
          image: "quay.io/jetstack/cert-manager-startupapicheck:v1.17.1"
          imagePullPolicy: IfNotPresent
          args:
          - check
          - api
          - --wait=1m
          - -v
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubernetes-gateway-helm/charts/envoy/templates/certgen.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: apk-envoy-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: envoy-1.3.2
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: apk
    app.kubernetes.io/version: "v1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: certgen
    spec:
      containers:
      - command:
        - envoy-gateway
        - certgen
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: docker.io/envoyproxy/gateway:v1.3.2
        imagePullPolicy: IfNotPresent
        name: envoy-gateway-certgen
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      imagePullSecrets: []
      restartPolicy: Never
      serviceAccountName: apk-envoy-certgen
  ttlSecondsAfterFinished: 30
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-api-apipolicy.yaml
apiVersion: dp.wso2.com/v1alpha4
kind: APIPolicy
metadata:
  name: "apk-wso2-kgw-config-api-api-policy"
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  override:
    backendJwtPolicy:
        name: "apk-wso2-kgw-config-api-backendjwt"
  targetRef:
    group: gateway.networking.k8s.io
    kind: API
    name:  apk-wso2-kgw-wso2-kgw-config-deployer-api
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deployer-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-config-deployer-ds-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-config-ds-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-generator-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-config-generator-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  # appProtocols:
  #   - gateway.envoyproxy.io/h2c
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-config-ds-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/api/notification-api.yaml
# Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-notification-api-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-common-controller-service.default.svc
        port: 9543
---
# Source: kubernetes-gateway-helm/templates/idp/authenticationEndpoint-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-authentication-endpoint-ds-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-idp-ds-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/idp/commonoauth-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-commonoauth-ds-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-idp-ds-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/idp/dcr-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-dcr-ds-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  # appProtocols:
  #   - gateway.envoyproxy.io/h2c
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-idp-ds-service.default.svc
        port: 9443
  # basePath: /dcr
  # services:
  #   - host:  apk-wso2-kgw-idp-ds-service.default.svc
  #     port: 9443
  # protocol: "https"
  # tls:
  #   allowedSANs:
  #   - apk-wso2-kgw-idp-ds-service.default.svc
  #   secretRef:
  #
  #     name: apk-wso2-kgw-idp-ds-server-cert
  #     key: tls.crt
  #
---
# Source: kubernetes-gateway-helm/templates/idp/idp-ui/idp-ui-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-idp-ui-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-idp-ui-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/idp/oauth-domain-api-backend.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
kind: "Backend"
apiVersion: "gateway.envoyproxy.io/v1alpha1"
metadata:
  name: apk-wso2-kgw-oauth-ds-backend
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  endpoints:
    - fqdn:
        hostname: apk-wso2-kgw-idp-ds-service.default.svc
        port: 9443
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deployer-api-backendjwt.yaml
apiVersion: dp.wso2.com/v1alpha1
kind: BackendJWT
metadata:
  name: "apk-wso2-kgw-config-api-backendjwt"
  namespace: default
  labels:
    managed-by: "kgw"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
    header: "X-JWT-Assertion"
    encoding: "Base64"
    signingAlgorithm: "SHA256withRSA"
    tokenTTL: 3600
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-api-route.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: "apk-wso2-kgw-config-api-route"
  namespace: default
  labels:
    managed-by: "kgw"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  hostnames:
  - "api.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "RegularExpression"
        value: "/api/configurator/1.3.0/apis/generate-configuration"
      method: "POST"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
          type: ReplaceFullPath
          replaceFullPath: /api/configurator/apis/generate-configuration
    backendRefs:
    - group: "gateway.envoyproxy.io"
      kind: "Backend"
      name: "apk-wso2-kgw-config-generator-backend"
  - matches:
    - path:
        type: "RegularExpression"
        value: "/api/configurator/1.3.0/apis/generate-k8s-resources"
      method: "POST"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
          type: ReplaceFullPath
          replaceFullPath: /api/configurator/apis/generate-k8s-resources
    backendRefs:
    - group: "gateway.envoyproxy.io"
      kind: "Backend"
      name: "apk-wso2-kgw-config-generator-backend"
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: wso2-kgw-default
    sectionName: apilistener
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deploy-api-route.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: "apk-wso2-kgw-config-deploy-api-route"
  namespace: default
  labels:
    managed-by: "kgw"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  hostnames:
  - "api.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "RegularExpression"
        value: "/api/deployer/1.3.0/apis/deploy"
      method: "POST"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
          type: ReplaceFullPath
          replaceFullPath: /api/deployer/apis/deploy
    backendRefs:
    - group: "gateway.envoyproxy.io"
      kind: "Backend"
      name: "apk-wso2-kgw-config-deployer-ds-backend"
  - matches:
    - path:
        type: "RegularExpression"
        value: "/api/deployer/1.3.0/apis/undeploy"
      method: "POST"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
          type: ReplaceFullPath
          replaceFullPath: /api/deployer/apis/undeploy
    backendRefs:
    - group: "gateway.envoyproxy.io"
      kind: "Backend"
      name: "apk-wso2-kgw-config-deployer-ds-backend"
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: wso2-kgw-default
    sectionName: apilistener
---
# Source: kubernetes-gateway-helm/templates/data-plane/gateway-components/common-controller/api/notification-api.yaml
apiVersion: "gateway.networking.k8s.io/v1"
kind: "HTTPRoute"
metadata:
  name: "apk-wso2-kgw-notification-api-route"
  namespace: default
  labels:
    managed-by: "kgw"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  hostnames:
    - "api.am.wso2.com"
  rules:
  - matches:
    - path:
        type: "RegularExpression"
        value: "/api/notification/1.0.0/notify"
      method: "POST"
    filters:
    - type: URLRewrite
      urlRewrite:
        path:
            type: ReplaceFullPath
            replaceFullPath: /notify
    backendRefs:
    - group: "gateway.envoyproxy.io"
      kind: "Backend"
      name: "apk-wso2-kgw-notification-api-backend"
  parentRefs:
  - group: "gateway.networking.k8s.io"
    kind: "Gateway"
    name: wso2-kgw-default
    sectionName: "apilistener"
---
# Source: kubernetes-gateway-helm/templates/data-plane/config-deployer/config-deploy-api-create-scope.yaml
# Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: dp.wso2.com/v1alpha1
kind: Scope
metadata:
  labels:
    managed-by: "kgw"
  name: apk-wso2-kgw-api-create-scope
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  names:
  - kgw:api_create
