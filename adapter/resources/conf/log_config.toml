# The logging configuration for Adapter

## Adapter root Level configurations

logLevel = "INFO" # LogLevels can be "DEBG", "FATL", "ERRO", "WARN", "INFO", "PANC"
LogFormat = "TEXT" # Values can be "JSON", "TEXT"

[rotation]
MaxSize = 10    # In MegaBytes (MB)
MaxBackups = 3
MaxAge =  2   # In days
Compress = true

## Adapter package Level configurations

[[pkg]]
name = "github.com/wso2/apk/adapter/internal/adapter"
logLevel = "INFO" # LogLevels can be "DEBG", "FATL", "ERRO", "WARN", "INFO", "PANC"

[[pkg]]
name = "github.com/wso2/apk/adapter/internal/oasparser"
logLevel = "INFO"


# The logging configuration for Router
[wireLogs]
enable = false
include = ["Headers", "Body", "Trailers"]

[accessLogs]
enable = true
logfile = "/dev/stdout" # This file will be created inside router container.
logType = "json" # LogTypes can be "text" or "json"

[accessLogs.jSONFormat]
time = "%START_TIME%"
gwHost = "%DYNAMIC_METADATA(envoy.filters.http.ext_proc:originalHost)%"
host = "%REQ(:AUTHORITY)%"
method = "%REQ(:METHOD)%"
apiPath = "%DYNAMIC_METADATA(envoy.filters.http.ext_proc:originalPath)%"
upstrmPath = "%REQ(:PATH)%"
prot = "%PROTOCOL%"
respCode = "%RESPONSE_CODE%"
respCodeDtls = "%RESPONSE_CODE_DETAILS%"
respFlag = "%RESPONSE_FLAGS%"
ua = "%REQ(USER-AGENT)%"
reqId = "%REQ(X-REQUEST-ID)%"
xff = "%REQ(X-FORWARDED-FOR)%"
upstrmHost = "%UPSTREAM_HOST%"
bytesRecv = "%BYTES_RECEIVED%"
bytesSent = "%BYTES_SENT%"
dur = "%DURATION%"
upstrmSvcTime = "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
reqTxDur = "%REQUEST_TX_DURATION%"
respTxDur = "%RESPONSE_TX_DURATION%"
reqDur = "%REQUEST_DURATION%"
respDur = "%RESPONSE_DURATION%"
apiUUID = "%DYNAMIC_METADATA(envoy.filters.http.ext_proc:apiUUID)%"
extAuthDtls = "%DYNAMIC_METADATA(envoy.filters.http.ext_proc:extAuthDetails)%"

[accessLogs.excludes]
[accessLogs.excludes.systemHost]
enabled = true
pathRegex = "^(/health|/ready)$" # keep this empty to match all paths
