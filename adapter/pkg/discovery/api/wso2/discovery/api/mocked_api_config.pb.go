//  Copyright (c) 2022, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
//
//  WSO2 LLC. licenses this file to you under the Apache License,
//  Version 2.0 (the "License"); you may not use this file except
//  in compliance with the License.
//  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing,
//  software distributed under the License is distributed on an
//  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//  KIND, either express or implied.  See the License for the
//  specific language governing permissions and limitations
//  under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: wso2/discovery/api/mocked_api_config.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MockedApiConfig holds configurations defined for a mocked API operation result
type MockedApiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*MockedResponseConfig `protobuf:"bytes,3,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *MockedApiConfig) Reset() {
	*x = MockedApiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockedApiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockedApiConfig) ProtoMessage() {}

func (x *MockedApiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockedApiConfig.ProtoReflect.Descriptor instead.
func (*MockedApiConfig) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP(), []int{0}
}

func (x *MockedApiConfig) GetResponses() []*MockedResponseConfig {
	if x != nil {
		return x.Responses
	}
	return nil
}

// MockedResponseConfig hold response configurations for the mocked API implementations
type MockedResponseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Headers []*MockedHeaderConfig  `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Content []*MockedContentConfig `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *MockedResponseConfig) Reset() {
	*x = MockedResponseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockedResponseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockedResponseConfig) ProtoMessage() {}

func (x *MockedResponseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockedResponseConfig.ProtoReflect.Descriptor instead.
func (*MockedResponseConfig) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP(), []int{1}
}

func (x *MockedResponseConfig) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MockedResponseConfig) GetHeaders() []*MockedHeaderConfig {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *MockedResponseConfig) GetContent() []*MockedContentConfig {
	if x != nil {
		return x.Content
	}
	return nil
}

// MockedHeaderConfig holds header configs in mocked API implementations
type MockedHeaderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MockedHeaderConfig) Reset() {
	*x = MockedHeaderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockedHeaderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockedHeaderConfig) ProtoMessage() {}

func (x *MockedHeaderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockedHeaderConfig.ProtoReflect.Descriptor instead.
func (*MockedHeaderConfig) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP(), []int{2}
}

func (x *MockedHeaderConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MockedHeaderConfig) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// MockedContentConfig holds content configs in mocked API implementations
type MockedContentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType string                  `protobuf:"bytes,1,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Examples    []*MockedContentExample `protobuf:"bytes,2,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *MockedContentConfig) Reset() {
	*x = MockedContentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockedContentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockedContentConfig) ProtoMessage() {}

func (x *MockedContentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockedContentConfig.ProtoReflect.Descriptor instead.
func (*MockedContentConfig) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP(), []int{3}
}

func (x *MockedContentConfig) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MockedContentConfig) GetExamples() []*MockedContentExample {
	if x != nil {
		return x.Examples
	}
	return nil
}

// MockedContentConfig holds content configs in mocked API implementations
type MockedContentExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref  string `protobuf:"bytes,1,opt,name=Ref,proto3" json:"Ref,omitempty"`
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *MockedContentExample) Reset() {
	*x = MockedContentExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockedContentExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockedContentExample) ProtoMessage() {}

func (x *MockedContentExample) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_api_mocked_api_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockedContentExample.ProtoReflect.Descriptor instead.
func (*MockedContentExample) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP(), []int{4}
}

func (x *MockedContentExample) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *MockedContentExample) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_wso2_discovery_api_mocked_api_config_proto protoreflect.FileDescriptor

var file_wso2_discovery_api_mocked_api_config_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x77, 0x73, 0x6f, 0x32, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x77, 0x73,
	0x6f, 0x32, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x22, 0x59, 0x0a, 0x0f, 0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x73, 0x6f, 0x32, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x14,
	0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x73, 0x6f, 0x32,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x73,
	0x6f, 0x32, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a,
	0x12, 0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a,
	0x13, 0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x73, 0x6f, 0x32, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x14,
	0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x7c, 0x0a, 0x23, 0x6f, 0x72,
	0x67, 0x2e, 0x77, 0x73, 0x6f, 0x32, 0x2e, 0x61, 0x70, 0x6b, 0x2e, 0x65, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x42, 0x14, 0x4d, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2f, 0x77, 0x73, 0x6f, 0x32, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wso2_discovery_api_mocked_api_config_proto_rawDescOnce sync.Once
	file_wso2_discovery_api_mocked_api_config_proto_rawDescData = file_wso2_discovery_api_mocked_api_config_proto_rawDesc
)

func file_wso2_discovery_api_mocked_api_config_proto_rawDescGZIP() []byte {
	file_wso2_discovery_api_mocked_api_config_proto_rawDescOnce.Do(func() {
		file_wso2_discovery_api_mocked_api_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_wso2_discovery_api_mocked_api_config_proto_rawDescData)
	})
	return file_wso2_discovery_api_mocked_api_config_proto_rawDescData
}

var file_wso2_discovery_api_mocked_api_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wso2_discovery_api_mocked_api_config_proto_goTypes = []interface{}{
	(*MockedApiConfig)(nil),      // 0: wso2.discovery.api.MockedApiConfig
	(*MockedResponseConfig)(nil), // 1: wso2.discovery.api.MockedResponseConfig
	(*MockedHeaderConfig)(nil),   // 2: wso2.discovery.api.MockedHeaderConfig
	(*MockedContentConfig)(nil),  // 3: wso2.discovery.api.MockedContentConfig
	(*MockedContentExample)(nil), // 4: wso2.discovery.api.MockedContentExample
}
var file_wso2_discovery_api_mocked_api_config_proto_depIdxs = []int32{
	1, // 0: wso2.discovery.api.MockedApiConfig.responses:type_name -> wso2.discovery.api.MockedResponseConfig
	2, // 1: wso2.discovery.api.MockedResponseConfig.headers:type_name -> wso2.discovery.api.MockedHeaderConfig
	3, // 2: wso2.discovery.api.MockedResponseConfig.content:type_name -> wso2.discovery.api.MockedContentConfig
	4, // 3: wso2.discovery.api.MockedContentConfig.examples:type_name -> wso2.discovery.api.MockedContentExample
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wso2_discovery_api_mocked_api_config_proto_init() }
func file_wso2_discovery_api_mocked_api_config_proto_init() {
	if File_wso2_discovery_api_mocked_api_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wso2_discovery_api_mocked_api_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockedApiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wso2_discovery_api_mocked_api_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockedResponseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wso2_discovery_api_mocked_api_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockedHeaderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wso2_discovery_api_mocked_api_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockedContentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wso2_discovery_api_mocked_api_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockedContentExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wso2_discovery_api_mocked_api_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wso2_discovery_api_mocked_api_config_proto_goTypes,
		DependencyIndexes: file_wso2_discovery_api_mocked_api_config_proto_depIdxs,
		MessageInfos:      file_wso2_discovery_api_mocked_api_config_proto_msgTypes,
	}.Build()
	File_wso2_discovery_api_mocked_api_config_proto = out.File
	file_wso2_discovery_api_mocked_api_config_proto_rawDesc = nil
	file_wso2_discovery_api_mocked_api_config_proto_goTypes = nil
	file_wso2_discovery_api_mocked_api_config_proto_depIdxs = nil
}
