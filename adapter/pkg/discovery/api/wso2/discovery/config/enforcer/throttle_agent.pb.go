// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: wso2/discovery/config/enforcer/throttle_agent.proto

package enforcer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Throttle Agent configuration model
type ThrottleAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SslEnabledProtocols        string `protobuf:"bytes,1,opt,name=sslEnabledProtocols,proto3" json:"sslEnabledProtocols,omitempty"`
	Ciphers                    string `protobuf:"bytes,2,opt,name=ciphers,proto3" json:"ciphers,omitempty"`
	QueueSize                  int32  `protobuf:"varint,3,opt,name=queueSize,proto3" json:"queueSize,omitempty"`
	BatchSize                  int32  `protobuf:"varint,4,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	CorePoolSize               int32  `protobuf:"varint,5,opt,name=corePoolSize,proto3" json:"corePoolSize,omitempty"`
	SocketTimeoutMS            int32  `protobuf:"varint,6,opt,name=socketTimeoutMS,proto3" json:"socketTimeoutMS,omitempty"`
	MaxPoolSize                int32  `protobuf:"varint,7,opt,name=maxPoolSize,proto3" json:"maxPoolSize,omitempty"`
	KeepAliveTimeInPool        int32  `protobuf:"varint,8,opt,name=keepAliveTimeInPool,proto3" json:"keepAliveTimeInPool,omitempty"`
	ReconnectionInterval       int32  `protobuf:"varint,9,opt,name=reconnectionInterval,proto3" json:"reconnectionInterval,omitempty"`
	MaxTransportPoolSize       int32  `protobuf:"varint,10,opt,name=maxTransportPoolSize,proto3" json:"maxTransportPoolSize,omitempty"`
	MaxIdleConnections         int32  `protobuf:"varint,11,opt,name=maxIdleConnections,proto3" json:"maxIdleConnections,omitempty"`
	EvictionTimePeriod         int32  `protobuf:"varint,12,opt,name=evictionTimePeriod,proto3" json:"evictionTimePeriod,omitempty"`
	MinIdleTimeInPool          int32  `protobuf:"varint,13,opt,name=minIdleTimeInPool,proto3" json:"minIdleTimeInPool,omitempty"`
	SecureMaxTransportPoolSize int32  `protobuf:"varint,14,opt,name=secureMaxTransportPoolSize,proto3" json:"secureMaxTransportPoolSize,omitempty"`
	SecureMaxIdleConnections   int32  `protobuf:"varint,15,opt,name=secureMaxIdleConnections,proto3" json:"secureMaxIdleConnections,omitempty"`
	SecureEvictionTimePeriod   int32  `protobuf:"varint,16,opt,name=secureEvictionTimePeriod,proto3" json:"secureEvictionTimePeriod,omitempty"`
	SecureMinIdleTimeInPool    int32  `protobuf:"varint,17,opt,name=secureMinIdleTimeInPool,proto3" json:"secureMinIdleTimeInPool,omitempty"`
}

func (x *ThrottleAgent) Reset() {
	*x = ThrottleAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wso2_discovery_config_enforcer_throttle_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThrottleAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThrottleAgent) ProtoMessage() {}

func (x *ThrottleAgent) ProtoReflect() protoreflect.Message {
	mi := &file_wso2_discovery_config_enforcer_throttle_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThrottleAgent.ProtoReflect.Descriptor instead.
func (*ThrottleAgent) Descriptor() ([]byte, []int) {
	return file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescGZIP(), []int{0}
}

func (x *ThrottleAgent) GetSslEnabledProtocols() string {
	if x != nil {
		return x.SslEnabledProtocols
	}
	return ""
}

func (x *ThrottleAgent) GetCiphers() string {
	if x != nil {
		return x.Ciphers
	}
	return ""
}

func (x *ThrottleAgent) GetQueueSize() int32 {
	if x != nil {
		return x.QueueSize
	}
	return 0
}

func (x *ThrottleAgent) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *ThrottleAgent) GetCorePoolSize() int32 {
	if x != nil {
		return x.CorePoolSize
	}
	return 0
}

func (x *ThrottleAgent) GetSocketTimeoutMS() int32 {
	if x != nil {
		return x.SocketTimeoutMS
	}
	return 0
}

func (x *ThrottleAgent) GetMaxPoolSize() int32 {
	if x != nil {
		return x.MaxPoolSize
	}
	return 0
}

func (x *ThrottleAgent) GetKeepAliveTimeInPool() int32 {
	if x != nil {
		return x.KeepAliveTimeInPool
	}
	return 0
}

func (x *ThrottleAgent) GetReconnectionInterval() int32 {
	if x != nil {
		return x.ReconnectionInterval
	}
	return 0
}

func (x *ThrottleAgent) GetMaxTransportPoolSize() int32 {
	if x != nil {
		return x.MaxTransportPoolSize
	}
	return 0
}

func (x *ThrottleAgent) GetMaxIdleConnections() int32 {
	if x != nil {
		return x.MaxIdleConnections
	}
	return 0
}

func (x *ThrottleAgent) GetEvictionTimePeriod() int32 {
	if x != nil {
		return x.EvictionTimePeriod
	}
	return 0
}

func (x *ThrottleAgent) GetMinIdleTimeInPool() int32 {
	if x != nil {
		return x.MinIdleTimeInPool
	}
	return 0
}

func (x *ThrottleAgent) GetSecureMaxTransportPoolSize() int32 {
	if x != nil {
		return x.SecureMaxTransportPoolSize
	}
	return 0
}

func (x *ThrottleAgent) GetSecureMaxIdleConnections() int32 {
	if x != nil {
		return x.SecureMaxIdleConnections
	}
	return 0
}

func (x *ThrottleAgent) GetSecureEvictionTimePeriod() int32 {
	if x != nil {
		return x.SecureEvictionTimePeriod
	}
	return 0
}

func (x *ThrottleAgent) GetSecureMinIdleTimeInPool() int32 {
	if x != nil {
		return x.SecureMinIdleTimeInPool
	}
	return 0
}

var File_wso2_discovery_config_enforcer_throttle_agent_proto protoreflect.FileDescriptor

var file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDesc = []byte{
	0x0a, 0x33, 0x77, 0x73, 0x6f, 0x32, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72,
	0x2f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x77, 0x73, 0x6f, 0x32, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x65, 0x6e, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x72, 0x22, 0xa1, 0x06, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74,
	0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x73, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x73, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4d, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x53, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78,
	0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x65, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x45, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x45, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x38, 0x0a, 0x17, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x17, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x99, 0x01, 0x0a, 0x31, 0x6f, 0x72,
	0x67, 0x2e, 0x77, 0x73, 0x6f, 0x32, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72, 0x42,
	0x12, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x77, 0x73,
	0x6f, 0x32, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72, 0x3b, 0x65, 0x6e, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescOnce sync.Once
	file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescData = file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDesc
)

func file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescGZIP() []byte {
	file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescOnce.Do(func() {
		file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescData)
	})
	return file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDescData
}

var file_wso2_discovery_config_enforcer_throttle_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wso2_discovery_config_enforcer_throttle_agent_proto_goTypes = []interface{}{
	(*ThrottleAgent)(nil), // 0: wso2.discovery.config.enforcer.ThrottleAgent
}
var file_wso2_discovery_config_enforcer_throttle_agent_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wso2_discovery_config_enforcer_throttle_agent_proto_init() }
func file_wso2_discovery_config_enforcer_throttle_agent_proto_init() {
	if File_wso2_discovery_config_enforcer_throttle_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wso2_discovery_config_enforcer_throttle_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThrottleAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wso2_discovery_config_enforcer_throttle_agent_proto_goTypes,
		DependencyIndexes: file_wso2_discovery_config_enforcer_throttle_agent_proto_depIdxs,
		MessageInfos:      file_wso2_discovery_config_enforcer_throttle_agent_proto_msgTypes,
	}.Build()
	File_wso2_discovery_config_enforcer_throttle_agent_proto = out.File
	file_wso2_discovery_config_enforcer_throttle_agent_proto_rawDesc = nil
	file_wso2_discovery_config_enforcer_throttle_agent_proto_goTypes = nil
	file_wso2_discovery_config_enforcer_throttle_agent_proto_depIdxs = nil
}
