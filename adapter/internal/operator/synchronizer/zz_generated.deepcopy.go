//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 *  Copyright (c) 2022, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

// Code generated by controller-gen. DO NOT EDIT.

package synchronizer

import (
	"github.com/wso2/apk/adapter/internal/operator/apis/dp/v1alpha1"
	"sigs.k8s.io/gateway-api/apis/v1beta1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIState) DeepCopyInto(out *APIState) {
	*out = *in
	if in.APIDefinition != nil {
		in, out := &in.APIDefinition, &out.APIDefinition
		*out = new(v1alpha1.API)
		(*in).DeepCopyInto(*out)
	}
	if in.ProdHTTPRoute != nil {
		in, out := &in.ProdHTTPRoute, &out.ProdHTTPRoute
		*out = new(HTTPRouteState)
		(*in).DeepCopyInto(*out)
	}
	if in.SandHTTPRoute != nil {
		in, out := &in.SandHTTPRoute, &out.SandHTTPRoute
		*out = new(HTTPRouteState)
		(*in).DeepCopyInto(*out)
	}
	if in.APIDefinitionFile != nil {
		in, out := &in.APIDefinitionFile, &out.APIDefinitionFile
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIState.
func (in *APIState) DeepCopy() *APIState {
	if in == nil {
		return nil
	}
	out := new(APIState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayState) DeepCopyInto(out *GatewayState) {
	*out = *in
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = new(v1beta1.Gateway)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayStateData != nil {
		in, out := &in.GatewayStateData, &out.GatewayStateData
		*out = new(GatewayStateData)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayState.
func (in *GatewayState) DeepCopy() *GatewayState {
	if in == nil {
		return nil
	}
	out := new(GatewayState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayStateData) DeepCopyInto(out *GatewayStateData) {
	*out = *in
	if in.GatewayResolvedListenerCerts != nil {
		in, out := &in.GatewayResolvedListenerCerts, &out.GatewayResolvedListenerCerts
		*out = make(map[string]map[string][]byte, len(*in))
		for key, val := range *in {
			var outVal map[string][]byte
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string][]byte, len(*in))
				for key, val := range *in {
					var outVal []byte
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = make([]byte, len(*in))
						copy(*out, *in)
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayAPIPolicies != nil {
		in, out := &in.GatewayAPIPolicies, &out.GatewayAPIPolicies
		*out = make(map[string]v1alpha1.APIPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.GatewayBackendMapping != nil {
		in, out := &in.GatewayBackendMapping, &out.GatewayBackendMapping
		*out = make(v1alpha1.BackendMapping, len(*in))
		for key, val := range *in {
			var outVal *v1alpha1.ResolvedBackend
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(v1alpha1.ResolvedBackend)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayInterceptorServiceMapping != nil {
		in, out := &in.GatewayInterceptorServiceMapping, &out.GatewayInterceptorServiceMapping
		*out = make(map[string]v1alpha1.InterceptorService, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.GatewayCustomRateLimitPolicies != nil {
		in, out := &in.GatewayCustomRateLimitPolicies, &out.GatewayCustomRateLimitPolicies
		*out = make([]*v1alpha1.RateLimitPolicy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1alpha1.RateLimitPolicy)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayStateData.
func (in *GatewayStateData) DeepCopy() *GatewayStateData {
	if in == nil {
		return nil
	}
	out := new(GatewayStateData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRouteState) DeepCopyInto(out *HTTPRouteState) {
	*out = *in
	if in.HTTPRoute != nil {
		in, out := &in.HTTPRoute, &out.HTTPRoute
		*out = new(v1beta1.HTTPRoute)
		(*in).DeepCopyInto(*out)
	}
	if in.Authentications != nil {
		in, out := &in.Authentications, &out.Authentications
		*out = make(map[string]v1alpha1.Authentication, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ResourceAuthentications != nil {
		in, out := &in.ResourceAuthentications, &out.ResourceAuthentications
		*out = make(map[string]v1alpha1.Authentication, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.APIPolicies != nil {
		in, out := &in.APIPolicies, &out.APIPolicies
		*out = make(map[string]v1alpha1.APIPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ResourceAPIPolicies != nil {
		in, out := &in.ResourceAPIPolicies, &out.ResourceAPIPolicies
		*out = make(map[string]v1alpha1.APIPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.InterceptorServiceMapping != nil {
		in, out := &in.InterceptorServiceMapping, &out.InterceptorServiceMapping
		*out = make(map[string]v1alpha1.InterceptorService, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.BackendMapping != nil {
		in, out := &in.BackendMapping, &out.BackendMapping
		*out = make(v1alpha1.BackendMapping, len(*in))
		for key, val := range *in {
			var outVal *v1alpha1.ResolvedBackend
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(v1alpha1.ResolvedBackend)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make(map[string]v1alpha1.Scope, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.RateLimitPolicies != nil {
		in, out := &in.RateLimitPolicies, &out.RateLimitPolicies
		*out = make(map[string]v1alpha1.RateLimitPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ResourceRateLimitPolicies != nil {
		in, out := &in.ResourceRateLimitPolicies, &out.ResourceRateLimitPolicies
		*out = make(map[string]v1alpha1.RateLimitPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRouteState.
func (in *HTTPRouteState) DeepCopy() *HTTPRouteState {
	if in == nil {
		return nil
	}
	out := new(HTTPRouteState)
	in.DeepCopyInto(out)
	return out
}
