#   Copyright (c) 2022, WSO2 LLC. (http://www.wso2.com).
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
################################################################################
openapi: 3.0.1
info:
  title: WSO2 API Platform for Kubernetes (APK) - Admin
  description: |
    This document specifies a **RESTful API** for WSO2 **API Platform for Kubernetes (APK)** - **Admin Portal**.
  contact:
    name: WSO2
    url: https://wso2.com/api-manager/
    email: architecture@wso2.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
  - url: https://apis.wso2.com/api/am/admin/v1
paths:
  ######################################################
  # The "Content Search Results" Throttling Policies
  ######################################################
  /policies/search:
    get:
      tags:
        - Unified Search
      summary: |
        Retrieve/Search Policies
      description: |
        This operation provides you a list of available Policies qualifying the given keyword match.
      parameters:
        - name: query
          in: query
          description: |
            **Search**.
            You can search by providing a keyword. Allowed to search by type and name only.
          schema:
            type: string
      responses:
        200:
          description: |
            OK.List of qualifying Policies is returned.
          headers:
            Content-Type:
              description: The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDetailsList'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:tier_view
            - apk:policies_import_export
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/search?query=type:sub"'
      operationId: policySearch

  ######################################################
  # The "Application Rate Plans Collection" resource API
  ######################################################
  /application-rate-plans:
    get:
      tags:
        - Application Rate Plan (Collection)
      summary: Get all Application Rate Plans
      description: |
        Retrieves all existing application rate plans.
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        200:
          description: |
            OK. Policies returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRatePlanList'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/application-rate-plans"'
      operationId: getApplicationRatePlans

    post:
      tags:
        - Application Rate Plan (Collection)
      summary: Add an Application Rate Plan
      description: |
        This operation can be used to add a new application level rate plan.
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
          Application level policy object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRatePlan'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body. Location header contains URL of newly created entity.
          headers:
            Location:
              description: |
                Location of the newly created Policy object.
              schema:
                type: string
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRatePlan'
              example:
                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f
                policyName: 20PerMin
                displayName: 20PerMin
                description: Allows 20 request per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 20
        400:
          $ref: '#/components/responses/BadRequest'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/application-rate-plans"'
      operationId: addApplicationRatePlan

  ######################################################
  # The "Individual Application Rate Plan" resource API
  ######################################################
  /application-rate-plans/{planId}:
    get:
      tags:
        - Application Rate Plan (Individual)
      summary: Get an Application Rate Plan
      description: |
        Retrieves an application rate plan.
      parameters:
        - $ref: '#/components/parameters/planId'
      responses:
        200:
          description: |
            OK. Plan returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRatePlan'
              example:
                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f
                policyName: 20PerMin
                displayName: 20PerMin
                description: Allows 20 request per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 20
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/application-rate-plans/4e098fff-7f94-459a-981f-d257332f69d0"'
      operationId: getApplicationRatePlanById

    put:
      tags:
        - Application Rate Plan (Individual)
      summary: Update an Application Rate Plan
      description: |
        Updates an existing application level rate plan. Upon a successful update, you will receive the updated application plan as the response.
      parameters:
        - $ref: '#/components/parameters/planId'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
          Policy object that needs to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRatePlan'
        required: true
      responses:
        200:
          description: |
            OK. Plan updated.
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              schema:
                type: string
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRatePlan'
              example:
                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f
                policyName: 20PerMin
                displayName: 20PerMin
                description: Allows 20 request per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 20
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/application-rate-plans/4e098fff-7f94-459a-981f-d257332f69d0"'
      operationId: updateApplicationRatePlan

    delete:
      tags:
        - Application Rate Plan (Individual)
      summary: Delete an Application Rate Plan
      description: |
        Deletes an application level rate plan.
      parameters:
        - $ref: '#/components/parameters/planId'
      responses:
        200:
          description: |
            OK. Resource successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/application-rate-plans/4e098fff-7f94-459a-981f-d257332f69d0"'
      operationId: removeApplicationRatePlan


  ######################################################
  # The "Business Plans Collection" resource API
  ######################################################
  /business-plans:
    get:
      tags:
        - Business Plan (Collection)
      summary: Get all Business Plans
      description: |
        This operation can be used to retrieve all Business Plans.
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        200:
          description: |
            OK. Plans returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPlanList'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/business-plans"'
      operationId: getAllBusinessPlans

    post:
      tags:
        -  Business Plan (Collection)
      summary: Add a Business Plan
      description: |
        This operation can be used to add a  Business Plan specifying the details of the plan in the payload.
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
           Business Plan object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPlan'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body. Location header contains URL of newly created entity.
          headers:
            Location:
              description: |
                Location of the newly created Plan object.
              schema:
                type: string
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPlan'
              example:
                policyId: 78c3ebff-176d-40d8-9377-fb3276528291
                policyName: Gold
                displayName: Gold
                description: Allows 5000 requests per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 5000
                rateLimitCount: 0
                customAttributes: []
                stopOnQuotaReach: true
                billingPlan: FREE
        400:
          $ref: '#/components/responses/BadRequest'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/business-plans"'
      operationId: addBusinessPlan

  ######################################################
  # The "Individual Business Plan" resource API
  ######################################################
  /business-plans/{planId}:
    get:
      tags:
        - Business Plan (Individual)
      summary: Get a Business Plan
      description: |
        This operation can be used to retrieves Business Plan by specifying the Id of the plan as a path parameter
      parameters:
        - $ref: '#/components/parameters/planId'
      responses:
        200:
          description: |
            OK. Plan returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPlan'
              example:
                policyId: 78c3ebff-176d-40d8-9377-fb3276528291
                policyName: Gold
                displayName: Gold
                description: Allows 5000 requests per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 5000
                rateLimitCount: 0
                customAttributes: []
                stopOnQuotaReach: true
                billingPlan: FREE
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/business-plans/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"'
      operationId: getBusinessPlanById

    put:
      tags:
        - Business Plan (Individual)
      summary: Update a Business Plan
      description: |
        Updates an existing Business Plan.
      parameters:
        - $ref: '#/components/parameters/planId'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
          Plan object that needs to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPlan'
        required: true
      responses:
        200:
          description: |
            OK. Plan updated.
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              schema:
                type: string
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPlan'
              example:
                policyId: 78c3ebff-176d-40d8-9377-fb3276528291
                policyName: Gold
                displayName: Gold
                description: Allows 5000 requests per minute
                isDeployed: true
                defaultLimit:
                  type: REQUESTCOUNTLIMIT
                  requestCount:
                    timeUnit: min
                    unitTime: 1
                    requestCount: 5000
                rateLimitCount: 0
                customAttributes: []
                stopOnQuotaReach: true
                billingPlan: FREE
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/business-plans/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"'
      operationId: updateBusinessPlan

    delete:
      tags:
        - Business Plan (Individual)
      summary: Delete a Business Plan
      description: |
        This operation can be used to delete a business plan by specifying the Id of the plan as a path parameter.
      parameters:
        - $ref: '#/components/parameters/planId'
      responses:
        200:
          description: |
            OK. Resource successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/business-plans/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"'
      operationId: removeBusinessPlan

  ######################################################
  # "Export Throttling Policy" resource API
  ######################################################
  /throttling/policies/export:
    get:
      tags:
        - Import Export
      summary: Export a Throttling Policy
      description: |
        This operation can be used to export the details of a particular Throttling Policy.
      parameters:
        - name: policyId
          in: query
          description: UUID of the ThrottlingPolicy
          schema:
            type: string
        - name: name
          in: query
          description: |
            Throttling Policy Name
          schema:
            type: string
        - name: type
          in: query
          description: |
            Type of the Throttling Policy
          schema:
            type: string
            enum:
              - sub
              - app
              - api
              - global
        - name: format
          in: query
          description: |
            Format of output documents. Can be YAML or JSON.
          schema:
            type: string
            enum:
              - JSON
              - YAML
      responses:
        200:
          description: |
            OK. Export Successful.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportPolicy'
              example:
                type: rate-limiting policy
                subtype: application
                version: v4.1.0
                data:
                  policyId: cd828243-a0db-430c-97e9-9e41fd865d48
                  policyName: 50PerMin
                  displayName: 50PerMin
                  description: Allows 50 request per minute
                  isDeployed: true
                  type: ApplicationThrottlePolicy
                  defaultLimit:
                    type: BANDWIDTHLIMIT
                    requestCount:
                      timeUnit: min
                      unitTime: 1
                      requestCount: 50
                    bandwidth:
                      timeUnit: min
                      unitTime: 5
                      dataAmount: 100
                      dataUnit: MB
                    eventCount:
                      timeUnit: min
                      unitTime: 5
                      eventCount: 16
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/export?policyId=96077508-fd01-4fae-bc64-5de0e2baf43c&name=Bronze&type=subscription&format=YAML"'
      operationId: exportThrottlingPolicy
  ####################################################################
  # Import Throttling Policy
  ####################################################################
  /throttling/policies/import:
    post:
      tags:
        - Import Export
      summary: Import a Throttling Policy
      description: |
        This operation can be used to import a Throttling Policy.
      parameters:
        - name: overwrite
          in: query
          description: |
            Update an existing throttling policy with the same name.
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: string
                  description: Json File
                  format: binary
        required: true
      responses:
        200:
          description: |
            Created. Throttling Policy Imported Successfully.
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/InternalServerError'
      security:
        - OAuth2Security:
            - apk:tier_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/import?overwrite=True"'
      operationId: importThrottlingPolicy
  ######################################################
  # The "Deny Policy Collection" resource API
  ######################################################
  /deny-policies:
    get:
      tags:
        - Deny Policies (Collection)
      summary: Get all Deny Policies
      description: |
        Retrieves all existing deny policies.
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        200:
          description: |
            OK. Deny Policies returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockingConditionList'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:bl_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/deny-policies"'
      operationId: getAllDenyPolicies

    post:
      tags:
        - Deny Policies (Collection)
      summary: Add a deny policy
      description: |
        Adds a new deny policy
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
          Blocking condition object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockingCondition'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body. Location header contains URL of newly created entity.
          headers:
            Location:
              description: |
                Location of the newly created resource.
              schema:
                type: string
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockingCondition'
        400:
          $ref: '#/components/responses/BadRequest'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
      security:
        - OAuth2Security:
            - apk:bl_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/throttling/deny-policies"'
      operationId: addDenyPolicy

  ######################################################
  # The "Individual Deny Policy" resource API
  ######################################################
  /deny-policies/{policyId}:
    get:
      tags:
        - Deny Policy (Individual)
      summary: Get a Deny Policy
      description: |
        Retrieves a Deny policy providing the policy Id
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        200:
          description: |
            OK. Condition returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockingCondition'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:bl_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c"'
      operationId: getDenyPolicyById

    delete:
      tags:
        - Deny Policy (Individual)
      summary: Delete a Deny Policy
      description: |
        Deletes an existing deny policy
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        200:
          description: |
            OK. Resource successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:bl_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/throttling/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c"'
      operationId: removeDenyPolicy

    patch:
      tags:
        - Deny Policy (Individual)
      summary: Update a Deny Policy
      description: |
        Update a deny policy by Id
      parameters:
        - $ref: '#/components/parameters/policyId'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: |
          Blocking condition with updated status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockingConditionStatus'
        required: true
      responses:
        200:
          description: |
            OK. Resource successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockingCondition'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:bl_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PATCH -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/throttling/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c"'
      operationId: updateDenyPolicy

  ######################################################
  # The "Application Collection" resource APIs
  ######################################################
  /applications:
    get:
      tags:
        - Application (Collection)
      summary: |
        Retrieve/Search Applications
      description: |
        This operation can be used to retrieve list of applications owned by the given user, If no user
        is provided, the applications owned by the user associated with the provided access token will be returned.
      parameters:
        - $ref: '#/components/parameters/user'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/Accept'
        - name: name
          in: query
          description: |
            Application Name
          schema:
            type: string
        - name: tenantDomain
          in: query
          description: |
            Tenant domain of the applications to get. This has to be specified only if it is required to get applications of
            a tenant other than the requester's tenant. So, if not specified, the default will be set as the
            requester's tenant domain. This cross tenant Application access is allowed only for super tenant admin
            users **only at a migration process**.
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
            enum:
              - name
              - owner
            default: name
        - name: sortOrder
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
      responses:
        200:
          description: |
            OK. Application list returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        400:
          $ref: '#/components/responses/BadRequest'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:admin_application_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/applications"'
      operationId: getApplicationsByUser

  ######################################################
  # The "Individual Application" resource APIs
  ######################################################
  /applications/{applicationId}:
    get:
      tags:
        - Applications
      summary: |
        Get the details of an Application
      description: |
        This operation can be used to get the details of an application by specifying its id.
      parameters:
        - $ref: '#/components/parameters/applicationId'
      responses:
        200:
          description: |
            OK. Application details returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:admin_application_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X GET -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b"'
      operationId: getApplicationById

    delete:
      tags:
        - Applications
      summary: |
        Delete an Application
      description: |
        This operation can be used to delete an application by specifying its id.
      parameters:
        - $ref: '#/components/parameters/applicationId'
      responses:
        200:
          description: |
            OK. Resource successfully deleted.
          content: {}
        202:
          description: |
            Accepted. The request has been accepted.
          headers:
            Location:
              description: |
                Location of the existing Application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponse'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:admin_application_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b"'
      operationId: removeApplication

  /applications/{applicationId}/change-owner:
    post:
      tags:
        - Application
      summary: Change Application Owner
      description: |
        This operation is used to change the owner of an Application.
        In order to change the owner of an application, we need to pass the new application owner as a query parameter
      parameters:
        - name: owner
          in: query
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/applicationId'
      responses:
        200:
          description: |
            OK. Application owner changed successfully.
          content: {}
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:admin_application_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b/change-owner?owner=admin"'
      operationId: changeApplicationOwner

  ######################################################
  # The "Environment" resource API
  ######################################################
  /environments:
    get:
      tags:
        - Environments
      summary: Get all registered Environments
      description: |
        Get all Registered Environments
      responses:
        200:
          description: |
            OK. Environments returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:environment_read
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/environments"'
      operationId: getEnvironments

    post:
      tags:
        - Environments
      summary: Add an Environment
      description: |
        Add a new gateway environment
      requestBody:
        description: |
          Environment object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created environment as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        400:
          $ref: '#/components/responses/BadRequest'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:environment_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/environments"'
      operationId: addEnvironment

  ######################################################
  # The "Individual Environment" resource APIs
  ######################################################
  /environments/{environmentId}:
    put:
      tags:
        - Environments
      summary: Update an Environment
      description: |
        Update a gateway Environment by environment Id
      parameters:
        - $ref: '#/components/parameters/environmentId'
      requestBody:
        description: |
          Environment object with updated information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        200:
          description: |
            OK. Environment updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:environment_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: updateEnvironment

    delete:
      tags:
        - Environments
      summary: Delete an Environment
      description: |
        Delete a Environment by Environment Id
      parameters:
        - $ref: '#/components/parameters/environmentId'
      responses:
        200:
          description: |
            OK. Environment successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:environment_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: removeEnvironment


  ######################################################
  # The Tenant Info resource API
  ######################################################
  /tenant-info/{username}:
    get:
      tags:
        - Tenants
      summary: |
        Get Tenant Id of User
      description: |
        This operation is to get tenant id of the provided user
      operationId: getTenantInfoByUsername
      parameters:
        - name: username
          in: path
          description: |
            The state represents the current state of the tenant. Supported states are [ active, inactive]
          required: true
          schema:
            type: string
            default: john
      responses:
        200:
          description: |
            OK. Tenant id of the user retrieved.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:tenantInfo
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/tenant-info/john"'

  ######################################################
  # The Custom URL Info resource API
  ######################################################
  /custom-urls/{tenantDomain}:
    get:
      tags:
        - Tenants
      summary: |
        Get Custom URL Info of a Tenant Domain
      description: |
        This operation is to get custom-url information of the provided tenant-domain
      operationId: getCustomUrlInfoByTenantDomain
      parameters:
        - name: tenantDomain
          in: path
          description: |
            The tenant domain name.
          required: true
          schema:
            type: string
      responses:
        200:
          description: |
            OK. Custom url info of the tenant is retrieved.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUrlInfo'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:admin
            - apk:tenantInfo
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/custom-urls/wso2.com"'

  ######################################################
  # The "Category Collection" resource API
  ######################################################
  /api-categories:
    get:
      tags:
        - API Category (Collection)
      summary: Get all API Categories
      description: |
        Get all API categories
      responses:
        200:
          description: |
            OK. Categories returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICategoryList'
      security:
        - OAuth2Security:
            - apk:category_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/api-categories"'
      operationId: getAllCategories

    post:
      tags:
        - API Category (Individual)
      summary: Add API Category
      description: |
        Add a new API category
      requestBody:
        description: |
          API Category object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APICategory'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICategory'
        400:
          $ref: '#/components/responses/BadRequest'
      security:
        - OAuth2Security:
            - apk:category_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/api-categories"'
      operationId: addCategory

  ######################################################
  # The "Individual Category" resource APIs
  ######################################################
  /api-categories/{apiCategoryId}:
    put:
      tags:
        - API Category (Individual)
      summary: Update an API Category
      description: |
        Update an API Category by category Id
      parameters:
        - $ref: '#/components/parameters/apiCategoryId'
      requestBody:
        description: |
          API Category object with updated information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APICategory'
        required: true
      responses:
        200:
          description: |
            OK. Label updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICategory'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:category_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: updateCategory

    delete:
      tags:
        - API Category (Individual)
      summary: Delete an API Category
      description: |
        Delete an API Category by API Category Id
      parameters:
        - $ref: '#/components/parameters/apiCategoryId'
      responses:
        200:
          description: |
            OK. API Category successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:category_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: removeCategory

  ######################################################
  # The Admin settings List
  ######################################################
  /settings:
    get:
      tags:
        - Settings
      summary: Retrieve Admin Settings
      description: |
        Retrieve admin settings
      responses:
        200:
          description: |
            OK. Settings returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        404:
          $ref: '#/components/responses/NotFound'
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/settings"'
      operationId: getAdminSettings

  ######################################################
  # The "Key Manager Collection" resource API
  ######################################################
  /key-managers:
    get:
      tags:
        - Key Manager (Collection)
      summary: Get all Key managers
      description: |
        Get all Key managers
      responses:
        200:
          description: |
            OK. KeyManagers returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManagerList'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/key-managers"'
      operationId: getAllKeyManagers

    post:
      tags:
        - Key Manager (Collection)
      summary: Add a new API Key Manager
      description: |
        Add a new API Key Manager
      requestBody:
        description: |
          Key Manager object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyManager'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManager'
        400:
          $ref: '#/components/responses/BadRequest'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/key-managers"'
      operationId: addNewKeyManager

  ######################################################
  # The "Individual KeyManager" resource APIs
  ######################################################
  /key-managers/{keyManagerId}:
    get:
      tags:
        - Key Manager (Individual)
      summary: Get a Key Manager Configuration
      description: |
        Retrieve a single Key Manager Configuration. We should provide the Id of the KeyManager as a path parameter.
      parameters:
        - $ref: '#/components/parameters/keyManagerId'
      responses:
        200:
          description: |
            OK. KeyManager Configuration returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManager'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450"'
      operationId: getKeyManagerConfiguration

    put:
      tags:
        - Key Manager (Individual)
      summary: Update a Key Manager
      description: |
        Update a Key Manager by keyManager ID
      parameters:
        - $ref: '#/components/parameters/keyManagerId'
      requestBody:
        description: |
          Key Manager object with updated information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyManager'
        required: true
      responses:
        200:
          description: |
            OK. Label updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManager'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450"'
      operationId: updateKeyManager

    delete:
      tags:
        - Key Manager (Individual)
      summary: Delete a Key Manager
      description: |
        Delete a Key Manager by keyManager id
      parameters:
        - $ref: '#/components/parameters/keyManagerId'
      responses:
        200:
          description: |
            OK. Key Manager successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450"'
      operationId: removeKeyManager

  /key-managers/discover:
    post:
      tags:
        - Key Manager (Collection)
      summary: Retrieve Well-known information from Key Manager Well-known Endpoint
      description: |
        Retrieve well-known information from key manager's well-known endpoint
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                url:
                  type: string
                  description: Well-Known Endpoint
                type:
                  type: string
                  description: |
                    Key Manager Type
                  default: "false"
      responses:
        200:
          description: |
            OK. KeyManagers returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManagerWellKnownResponse'
      security:
        - OAuth2Security:
            - apk:keymanager_operations
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -F "type=WSO2-IS" "https://127.0.0.1:9443/api/am/admin/v3/key-managers/discover"'
      operationId: getWellKnownInfoKeyManager

######################################################
  # The "Organization" resource API
######################################################
  /organizations:
    get:
      tags:
        - Organization (Collection)
      summary: Get all Organization
      description: |
        Get all Organization
      responses:
        200:
          description: |
            OK. Organization returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/organizations"'
      operationId: getAllOrganization

    post:
      tags:
        - Organization (Individual)
      summary: Add Organization
      description: |
        Add a new Organization
      requestBody:
        description: |
          Organization object that should to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        201:
          description: |
            Created. Successful response with the newly created object as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          $ref: '#/components/responses/BadRequest'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/organizations"'
      operationId: addOrganization
  /organizations/{organizationId}:
    get:
      tags:
        - Organization (Individual)
      summary: |
        Get the details of an Organization
      description: |
        This operation can be used to get the details of an Organization by specifying its id.
      parameters:
        - $ref: '#/components/parameters/organizationId'
      responses:
        200:
          description: |
            OK. Application details returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X GET -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/organizations/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b"'
      operationId: getOrganizationById
    put:
      tags:
        - Organization (Individual)
      summary: Update an Organization
      description: |
        Update an Organization by organization Id
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        description: |
          Organization object with updated information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        200:
          description: |
            OK. Label updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/organizations/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: updateOrganization
    delete:
      tags:
        - Organization (Individual)
      summary: Delete an Organization
      description: |
        Delete an Organization by API Organization Id
      parameters:
        - $ref: '#/components/parameters/organizationId'
      responses:
        200:
          description: |
            OK. Organization successfully deleted.
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/organizations/d7cf8523-9180-4255-84fa-6cb171c1f779"'
      operationId: removeOrganization
  /organization-info:
    get:
      tags:
        - Organization (Individual)
      summary: |
        Authenticate Organization info
      description: |
        This operation can be used to authenticate Organization by specifying its claimValue.
      responses:
        200:
          description: |
            OK. Application details returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
      security:
        - OAuth2Security:
            - apk:organization_manage
      x-code-samples:
        - lang: Curl
          source: 'curl -k -X GET -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8"
          "https://127.0.0.1:9443/api/am/admin/organization-info/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b"'
      operationId: getOrganizationByClaimValue

components:
  schemas:
    Error:
      title: Error object returned with 4XX HTTP status
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          description: Error code
          format: int64
        message:
          type: string
          description: Error message.
        description:
          type: string
          description: |
            A detail description about the error message.
        moreInfo:
          type: string
          description: |
            Preferably an url with more details about the error.
        error:
          type: array
          description: |
            If there are more than one error list them out.
            For example, list out validation errors by each field.
          items:
            $ref: '#/components/schemas/ErrorListItem'
    ErrorListItem:
      title: Description of individual errors that may have occurred during a request.
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: |
            Description about individual errors occurred
    PolicyDetailsList:
      title: Policy List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Throttling Policies returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/PolicyDetails'
    PolicyDetails:
      title: Generic Policy
      required:
        - policyName
      type: object
      properties:
        policyId:
          type: integer
          description: Id of policy
          readOnly: true
          example: 3
        uuid:
          type: string
          description: UUId of policy
          readOnly: true
          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93
        policyName:
          maxLength: 60
          minLength: 1
          type: string
          description: Name of policy
          example: 30PerMin
        displayName:
          type: string
          description: Display name of the policy
          example: 30PerMin
          maxLength: 512
        description:
          maxLength: 1024
          type: string
          description: Description of the policy
          example: Allows 30 request per minute
        isDeployed:
          type: boolean
          description: Indicates whether the policy is deployed successfully or not.
          default: false
        type:
          type: string
          description: Indicates the type of throttle policy
    Policy:
      title: Generic Throttling Policy
      required:
        - planName
      type: object
      properties:
        planId:
          type: string
          description: Id of plan
          readOnly: true
          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93
        planName:
          maxLength: 60
          minLength: 1
          type: string
          description: Name of plan
          example: 30PerMin
        displayName:
          type: string
          description: Display name of the policy
          example: 30PerMin
          maxLength: 512
        description:
          maxLength: 1024
          type: string
          description: Description of the policy
          example: Allows 30 request per minute
        isDeployed:
          type: boolean
          description: Indicates whether the policy is deployed successfully or not.
          default: false
        type:
          type: string
          description: Indicates the type of throttle policy
      discriminator:
        propertyName: type
    ExportPolicy:
      title: Export Policy
      type : object
      properties:
        type:
          type: string
        subtype:
          type: string
        version:
          type: string
        data:
          type: object
    ApplicationRatePlan:
      title: Application Throttling Policy
      allOf:
        - $ref: '#/components/schemas/Policy'
        - required:
            - defaultLimit
          type: object
          properties:
            defaultLimit:
              $ref: '#/components/schemas/ThrottleLimit'
    ApplicationRatePlanList:
      title: Application level Rate Plan List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Application Rate Plans returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationRatePlan'
    BusinessPlan:
      title: Business Plan
      allOf:
        - $ref: '#/components/schemas/Policy'
        - $ref: '#/components/schemas/GraphQLQuery'
        - required:
            - defaultLimit
          type: object
          properties:
            defaultLimit:
              $ref: '#/components/schemas/ThrottleLimit'
            rateLimitCount:
              type: integer
              description: Burst control request count
              example: 10
            rateLimitTimeUnit:
              type: string
              description: Burst control time unit
              example: min
            subscriberCount:
              type: integer
              description: Number of subscriptions allowed
              example: 10
            customAttributes:
              type: array
              description: |
                Custom attributes added to the Subscription Throttling Policy
              example: []
              items:
                $ref: '#/components/schemas/CustomAttribute'
            permissions:
              $ref: '#/components/schemas/BusinessPlanPermission'
    BusinessPlanPermission:
      title: Business Plan Permission
      required:
        - permissionType
        - roles
      type: object
      properties:
        permissionType:
          type: string
          example: deny
          enum:
            - ALLOW
            - DENY
        roles:
          type: array
          example:
            - Internal/everyone
          items:
            type: string
    GraphQLQuery:
      title: GraphQL Query
      type: object
      properties:
        graphQLMaxComplexity:
          type: integer
          description: Maximum Complexity of the GraphQL query
          example: 400
        graphQLMaxDepth:
          type: integer
          description: Maximum Depth of the GraphQL query
          example: 10
    BusinessPlanList:
      title: Business Plan List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Business Plans returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/BusinessPlan'
    ThrottleLimitBase:
      title: Throttle Limit Base
      required:
        - timeUnit
        - unitTime
      type: object
      properties:
        timeUnit:
          type: string
          description: Unit of the time. Allowed values are "sec", "min", "hour",
            "day"
          example: min
        unitTime:
          type: integer
          description: Time limit that the throttling limit applies.
          example: 10
    ThrottleLimit:
      title: Throttle Limit
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            Type of the throttling limit. Allowed values are "REQUESTCOUNTLIMIT" and "BANDWIDTHLIMIT".
            Please see schemas of "RequestCountLimit" and "BandwidthLimit" throttling limit types in
            Definitions section.
          example: REQUESTCOUNTLIMIT
          enum:
            - REQUESTCOUNTLIMIT
            - BANDWIDTHLIMIT
            - EVENTCOUNTLIMIT
        requestCount:
          $ref: '#/components/schemas/RequestCountLimit'
        bandwidth:
          $ref: '#/components/schemas/BandwidthLimit'
        eventCount:
          $ref: '#/components/schemas/EventCountLimit'
    BandwidthLimit:
      title: Bandwidth Limit object
      allOf:
        - $ref: '#/components/schemas/ThrottleLimitBase'
        - required:
            - dataAmount
            - dataUnit
          type: object
          properties:
            dataAmount:
              type: integer
              description: Amount of data allowed to be transferred
              format: int64
              example: 1000
            dataUnit:
              type: string
              description: Unit of data allowed to be transferred. Allowed values are
                "KB", "MB" and "GB"
              example: KB
    RequestCountLimit:
      title: Request Count Limit object
      allOf:
        - $ref: '#/components/schemas/ThrottleLimitBase'
        - required:
            - requestCount
          type: object
          properties:
            requestCount:
              type: integer
              description: Maximum number of requests allowed
              format: int64
              example: 30
    EventCountLimit:
      title: Event Count Limit object
      allOf:
        - $ref: '#/components/schemas/ThrottleLimitBase'
        - required:
            - eventCount
          type: object
          properties:
            eventCount:
              type: integer
              description: Maximum number of events allowed
              format: int64
              example: 3000
    BlockingCondition:
      title: Blocking Conditions
      required:
        - conditionType
        - conditionValue
      type: object
      properties:
        policyId:
          type: string
          description: Id of the blocking condition
          example: b513eb68-69e8-4c32-92cf-852c101363cf
        conditionType:
          type: string
          description: Type of the blocking condition
          example: IP
          enum:
            - API
            - APPLICATION
            - IP
            - IPRANGE
            - USER
        conditionValue:
          type: object
          properties: {}
          description: Value of the blocking condition
          example:
            fixedIp: 192.168.1.1
            invert: false
        conditionStatus:
          type: boolean
          description: Status of the blocking condition
          example: true
      description: Blocking Conditions
    BlockingConditionList:
      title: Blocking Conditions List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Blocking Conditions returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/BlockingCondition'
    BlockingConditionStatus:
      title: Blocking Conditions Status
      required:
        - conditionStatus
      type: object
      properties:
        policyId:
          type: string
          description: Id of the blocking condition
          example: b513eb68-69e8-4c32-92cf-852c101363cf
        conditionStatus:
          type: boolean
          description: Status of the blocking condition
          example: true
      description: Blocking Conditions Status
    CustomAttribute:
      title: Name-Value pair
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          description: Name of the custom attribute
          example: customAttr1
        value:
          type: string
          description: Value of the custom attribute
          example: value1
    ApplicationList:
      title: Application List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of applications returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationInfo'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ApplicationInfo:
      title: Application info object with basic application details
      type: object
      properties:
        applicationId:
          type: string
          example: 01234567-0123-0123-0123-012345678901
        name:
          type: string
          example: CalculatorApp
        owner:
          type: string
          example: admin
        status:
          type: string
          example: APPROVED
        groupId:
          type: string
          example: ""
    Application:
      title: Application object with all the application details
      type: object
      properties:
        applicationId:
          type: string
          example: 01234567-0123-0123-0123-012345678901
        name:
          type: string
          example: CalculatorApp
        throttlingPolicy:
          type: string
          example: Unlimited
        description:
          type: string
          example: Sample calculator application
        tokenType:
          type: string
          enum:
            - OAUTH
            - JWT
          description: |
            Type of the access token generated for this application.
            **OAUTH:** A UUID based access token which is issued by default.
            **JWT:** A self-contained, signed JWT based access token. **Note:** This can be only used in Microgateway environments.
          default: JWT
          example: JWT
        status:
          type: string
          example: APPROVED
          default: ""
        groups:
          type: array
          items:
            type: string
          example: ""
        subscriptionCount:
          type: integer
        attributes:
          type: object
          additionalProperties:
            type: string
          example: External Reference ID, Billing Tier
        subscriptionScopes:
          type: array
          items:
            $ref: '#/components/schemas/ScopeInfo'
        owner:
          description: |
            Application created user
          type: string
          example: admin
    ScopeInfo:
      title: API Scope info object with scope details
      type: object
      properties:
        key:
          type: string
          example: admin_scope
        name:
          type: string
          example: admin scope
        roles:
          type: array
          items:
            type: string
          description: Allowed roles for the scope
          example: ["manager","developer"]
        description:
          type: string
          description: Description of the scope
    Environment:
      title: Environment
      required:
        - name
        - vhosts
      type: object
      properties:
        id:
          type: string
          readOnly: true
          example: ece92bdc-e1e6-325c-b6f4-656208a041e9
        name:
          maxLength: 255
          minLength: 1
          pattern: '^[a-zA-Z0-9_-]+$'
          type: string
          example: us-region
        displayName:
          maxLength: 255
          minLength: 1
          type: string
          example: US Region
        provider:
          type: string
          example: wso2
        description:
          maxLength: 1023
          type: string
          example: Gateway environment in US Region
        isReadOnly:
          type: boolean
          readOnly: true
          example: false
        vhosts:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/VHost'
        endpointURIs:
          type: array
          items:
            $ref: '#/components/schemas/GatewayEnvironmentProtocolURI'
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalProperty'
    EnvironmentList:
      title: Environment List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Environments returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
    VHost:
      title: Virtual Host
      required:
        - host
      type: object
      properties:
        host:
          maxLength: 255
          minLength: 1
          # hostname regex as per RFC 1123 (http://tools.ietf.org/html/rfc1123) and appended *
          pattern: '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$'
          type: string
          example: mg.wso2.com
        httpContext:
          maxLength: 255
          minLength: 0
          # TODO (renuka) check this regex: not allowed: (_ .) and allowed: (- /)
          pattern: '^\/?([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])*$'
          type: string
          example: pets
        httpPort:
          type: integer
          example: 80
        httpsPort:
          type: integer
          example: 443
        wsPort:
          type: integer
          example: 9099
        wssPort:
          type: integer
          example: 8099
    AdditionalProperty:
      title: Additional Gateway Properties
      type: object
      properties:
        key:
          type: string
          example: Organization
        value:
          type: string
          example: wso2
    GatewayEnvironmentProtocolURI:
      title: Gateway Environment protocols and URIs
      required:
        - protocol
        - endpointURI
      type: object
      properties:
        protocol:
          type: string
          example: default
        endpointURI:
          type: string
          example: default
    PublishStatus:
      title: Usage publish status
      type: object
      properties:
        status:
          type: string
          description: Status of the usage publish request
          example: successful
        message:
          type: string
          description: detailed message of the status
          example: Records published successfully
    MonetizationUsagePublishInfo:
      title: Usage publish status
      type: object
      properties:
        state:
          type: string
          description: State of usage publish job
          example: RUNNING
        status:
          type: string
          description: Status of usage publish job
          example: SUCCESSFULL
        startedTime:
          type: string
          description: Timestamp of the started time of the Job
          example: "1599196134000"
        lastPublsihedTime:
          type: string
          description: Timestamp of the last published time
          example: "1599196134000"
    TenantInfo:
      title: Tenant information
      type: object
      properties:
        username:
          type: string
          example: john
        tenantDomain:
          type: string
          example: carbon.super
        tenantId:
          type: integer
          example: -1234
      description: The tenant information of the user
    CustomUrlInfo:
      title: Custom url information
      type: object
      properties:
        tenantDomain:
          type: string
          example: carbon.super
        tenantAdminUsername:
          type: string
          example: john@foo.com
        enabled:
          type: boolean
          example: true
        devPortal:
          type: object
          properties:
            url:
              type: string
              example: http://example.com
      description: The custom url information of the tenant domain
    Organization:
      title: Organization
      required:
        - name
        - displayName
        - claimList
      type: object
      properties:
        id:
          type: string
          readOnly: true
          example: 01234567-0123-0123-0123-012345678901
        name:
          maxLength: 255
          minLength: 1
          type: string
          example: Finance
        displayName:
          maxLength: 255
          minLength: 1
          type: string
          example: Finance
        organizationClaimValue:
          maxLength: 255
          minLength: 1
          type: string
          example: 01234567-0123-0123-0123
        enabled:
          type: boolean
          default: true
        serviceNamespaces:
          type: array
          items:
            type: string
          default:
            - "*"
        production:
          type: array
          items:
            type: string
        sandbox:
          type: array
          items:
            type: string
    OrganizationList:
      title: Organization List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Organization returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    APICategory:
      title: API Category
      required:
        - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
          example: 01234567-0123-0123-0123-012345678901
        name:
          maxLength: 255
          minLength: 1
          type: string
          example: Finance
        description:
          maxLength: 1024
          type: string
          example: Finance related APIs
        numberOfAPIs:
          type: integer
          readOnly: true
          example: 1
    APICategoryList:
      title: API Category List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of API categories returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/APICategory'
    Settings:
      title: Settings
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
        keyManagerConfiguration:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: default
              displayName:
                type: string
                example: default
              defaultConsumerKeyClaim:
                type: string
                example: azp
              defaultScopesClaim:
                type: string
                example: scope
              configurations:
                type: array
                items:
                  $ref: '#/components/schemas/KeyManagerConfiguration'
              endpointConfigurations:
                type: array
                items:
                  $ref: '#/components/schemas/KeyManagerConfiguration'
        analyticsEnabled:
          type: boolean
          description: To determine whether analytics is enabled or not
          example: false
    KeyManagerWellKnownResponse:
      title: Key Manager Well-Known Response.
      type: object
      properties:
        valid:
          type: boolean
          example: true
          default: false
        value:
          $ref: '#/components/schemas/KeyManager'
    KeyManager:
      title: Key Manager
      required:
        - name
        - type
      type: object
      properties:
        id:
          type: string
          readOnly: true
          example: 01234567-0123-0123-0123-012345678901
        name:
          maxLength: 100
          minLength: 1
          type: string
          example: WSO2 Identity Server
        displayName:
          maxLength: 100
          type: string
          description: |
            display name of Key Manager to  show in UI
          example: WSO2 Identity Server
        type:
          maxLength: 45
          minLength: 1
          type: string
          example: WSO2-IS
        description:
          maxLength: 256
          type: string
          example: This is a key manager for Developers
        wellKnownEndpoint:
          type: string
          description: |
            Well-Known Endpoint of Identity Provider.
          example: ""
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/KeyManagerEndpoint'
        certificates:
          type: object
          properties:
            type:
              type: string
              enum:
                - JWKS
                - PEM
            value:
              type: string
        issuer:
          type: string
          example: https://localhost:9444/services
        availableGrantTypes:
          type: array
          items:
            type: string
            example: client_credentials
        enableTokenGeneration:
          type: boolean
          example: true
        enableTokenEncryption:
          type: boolean
          example: false
          default: false
        enableTokenHashing:
          type: boolean
          example: false
          default: false
        enableMapOAuthConsumerApps:
          type: boolean
          example: false
          default: false
        enableOAuthAppCreation:
          type: boolean
          example: false
          default: false
        consumerKeyClaim:
          type: string
          example: azp
        scopesClaim:
          type: string
          example: scp
        enabled:
          type: boolean
          example: true
        additionalProperties:
          type: object
          example:
            self_validate_jwt: true
            Username: admin
            Password: admin

    KeyManagerEndpoint:
      title: Key Manager Endpoint.
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          example: 'token_endpoint'
        value:
          type: string
          example: 'https://localhost:9443/oauth2/token'
    KeyManagerInfo:
      title: Key Manager Info
      required:
        - name
        - type
      type: object
      properties:
        id:
          type: string
          example: 01234567-0123-0123-0123-012345678901
        name:
          type: string
          example: WSO2 IS
        type:
          type: string
          example: IS
        description:
          type: string
          example: This is a key manager for Developers
        enabled:
          type: boolean
          example: true
    KeyManagerConfiguration:
      title: Key Manager Configuration
      type: object
      properties:
        name:
          type: string
          example: consumer_key
        label:
          type: string
          example: Consumer Key
        type:
          type: string
          example: select
        required:
          type: boolean
          example: true
        mask:
          type: boolean
          example: true
        multiple:
          type: boolean
          example: true
        tooltip:
          type: string
          example: Enter username to connect to key manager
        default:
          type: string
          example: admin
        values:
          type: array
          items:
            type: string
    KeyManagerList:
      title: Key Manager List
      type: object
      properties:
        count:
          type: integer
          description: |
            Number of Key managers returned.
          example: 1
        list:
          type: array
          items:
            $ref: '#/components/schemas/KeyManagerInfo'
    ClaimMappingEntry:
      title: Claim Mapping Configuration
      type: object
      properties:
        remoteClaim:
          type: string
          example: http://idp.org/username
        localClaim:
          type: string
          example: http://wso2.org/username
    TokenValidation:
      title: Token handling Configuration
      type: object
      properties:
        id:
          type: integer
        enable:
          type: boolean
          example: false
          default: true
        type:
          type: string
          enum:
            - REFERENCE
            - JWT
            - CUSTOM
        value:
          type: object
          properties: {}
    WorkflowResponse:
      title: workflow Response
      required:
        - workflowStatus
      type: object
      properties:
        workflowStatus:
          type: string
          description: |
            This attribute declares whether this workflow task is approved or rejected.
          example: APPROVED
          enum:
            - CREATED
            - APPROVED
            - REJECTED
            - REGISTERED
        jsonPayload:
          type: string
          description: |
            Attributes that returned after the workflow execution
    Pagination:
      title: Pagination
      type: object
      properties:
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 1
        total:
          type: integer
          example: 10
        next:
          type: string
          description: |
            Link to the next subset of resources qualified.
            Empty if no more resources are to be returned.
            example: ""
        previous:
          type: string
          description: |
            Link to the previous subset of resources qualified.
            Empty if current subset is the first subset returned.
            example: ""
  responses:
    BadRequest:
      description: Bad Request. Invalid request or validation error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Bad Request
            description: Invalid request or validation error
            moreInfo: ""
            error: []
    Conflict:
      description: Conflict. Specified resource already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 409
            message: Conflict
            description: Specified resource already exists
            moreInfo: ""
            error: []
    Forbidden:
      description: Forbidden. The request must be conditional but no condition has
        been specified.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
            description: The request must be conditional but no condition has been
              specified
            moreInfo: ""
            error: []
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal Server Error
            description: The server encountered an internal error. Please contact
              administrator.
            moreInfo: ""
            error: []
    NotAcceptable:
      description: Not Acceptable. The requested media type is not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 406
            message: Not Acceptable
            description: The requested media type is not supported
            moreInfo: ""
            error: []
    NotFound:
      description: Not Found. The specified resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not Found
            description: The specified resource does not exist
            moreInfo: ""
            error: []
    PayloadTooLarge:
      description: Payload Too Large. Request entity is larger than limits defined
        by server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 413
            message: Payload Too Large
            description: Request entity is larger than limits defined by server
            moreInfo: ""
            error: []
    PreconditionFailed:
      description: Precondition Failed. The request has not been performed because
        one of the preconditions is not met.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 412
            message: Precondition Failed
            description: The request has not been performed because one of the preconditions
              is not met
            moreInfo: ""
            error: []
    Unauthorized:
      description: Unauthorized. The user is not authorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Unauthorized
            description: The user is not authorized
            moreInfo: ""
            error: []
    UnsupportedMediaType:
      description: Unsupported Media Type. The entity of the request was not in a
        supported format.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 415
            message: Unsupported media type
            description: The entity of the request was not in a supported format
            moreInfo: ""
            error: []
  parameters:
    If-None-Match:
      name: If-None-Match
      in: header
      description: |
        Validator for conditional requests; based on the ETag of the formerly retrieved
        variant of the resource.
      schema:
        type: string
    requestedTenant:
      name: X-WSO2-Tenant
      in: header
      description: |
        For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be
          retirieved from.
      schema:
        type: string
    sortBy:
      name: sortBy
      in: query
      description: |
        Criteria for sorting.
      schema:
        type: string
        default: createdTime
        enum:
          - apiName
          - version
          - createdTime
          - status
    sortOrder:
      name: sortOrder
      in: query
      description: |
        Order of sorting(ascending/descending).
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
    username:
      name: username
      in: query
      description: |
        username of the new application owner
      required: true
      schema:
        type: string
    scopeName:
      name: scopeName
      in: path
      description: |
        Base64 URL encoded value of the scope name to be validated
      required: true
      schema:
        type: string
    environmentId:
      name: environmentId
      in: path
      description: |
        Environment UUID (or Environment name defined in config)
      required: true
      schema:
        type: string
    policyId:
      name: policyId
      in: path
      description: |
        Policy UUID
      required: true
      schema:
        type: string
    planId:
      name: planId
      in: path
      description: |
        Policy UUID
      required: true
      schema:
        type: string
    ruleId:
      name: ruleId
      in: path
      description: |
        Custom rule UUID
      required: true
      schema:
        type: string
    applicationId:
      name: applicationId
      in: path
      description: |
        Application UUID
      required: true
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      description: |
        Media types acceptable for the response. Default is application/json.
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      description: |
        Media type of the entity in the body. Default is application/json.
      required: true
      schema:
        type: string
        default: application/json
    limit:
      name: limit
      in: query
      description: |
        Maximum size of resource array to return.
      schema:
        type: integer
        default: 25
    offset:
      name: offset
      in: query
      description: |
        Starting point within the complete list of items qualified.
      schema:
        type: integer
        default: 0
    user:
      name: user
      in: query
      description: |
        username of the application creator
      schema:
        type: string
    workflowReferenceId-Q:
      name: workflowReferenceId
      in: query
      description: |
        Workflow reference id
      required: true
      schema:
        type: string
    apiCategoryId:
      name: apiCategoryId
      in: path
      description: |
        API Category UUID
      required: true
      schema:
        type: string
    organizationId:
      name: organizationId
      in: path
      description: |
        Organization UUID
      required: true
      schema:
        type: string
    keyManagerId:
      name: keyManagerId
      in: path
      description: |
        Key Manager UUID
      required: true
      schema:
        type: string
    roleId:
      name: roleId
      in: path
      description: |
        The Base 64 URL encoded role name with domain. If the given role is in PRIMARY user-store, role ID should be
        derived as Base64URLEncode(role-name). If the given role is in secondary user-store, role ID should be
        derived as Base64URLEncode({user-store-name}/{role-name}).
      required: true
      schema:
        type: string
  securitySchemes:
    OAuth2Security:
      type: oauth2
      flows:
        password:
          tokenUrl: https://localhost:9443/oauth2/token
          scopes:
            openid: Authorize access to user details
            apk:organization_manage: Manage all organization
            apk:admin: Manage all admin operations
            apk:tier_manage: Update and delete throttling policies
            apk:bl_manage: Update and delete deny policies
            apk:environment_manage: Manage gateway environments
            apk:category_manage: Manage API Categories
            apk:keymanager_operations: Manage Key Managers related
              operations
            apk:admin_application_manage: Manage All Applications
            