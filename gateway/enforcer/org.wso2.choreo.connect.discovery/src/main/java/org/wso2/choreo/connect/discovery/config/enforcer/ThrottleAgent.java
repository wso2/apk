// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/throttle_agent.proto

package org.wso2.choreo.connect.discovery.config.enforcer;

/**
 * <pre>
 * Throttle Agent configuration model
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.config.enforcer.ThrottleAgent}
 */
public final class ThrottleAgent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.ThrottleAgent)
    ThrottleAgentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ThrottleAgent.newBuilder() to construct.
  private ThrottleAgent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ThrottleAgent() {
    sslEnabledProtocols_ = "";
    ciphers_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ThrottleAgent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ThrottleAgent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            sslEnabledProtocols_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            ciphers_ = s;
            break;
          }
          case 24: {

            queueSize_ = input.readInt32();
            break;
          }
          case 32: {

            batchSize_ = input.readInt32();
            break;
          }
          case 40: {

            corePoolSize_ = input.readInt32();
            break;
          }
          case 48: {

            socketTimeoutMS_ = input.readInt32();
            break;
          }
          case 56: {

            maxPoolSize_ = input.readInt32();
            break;
          }
          case 64: {

            keepAliveTimeInPool_ = input.readInt32();
            break;
          }
          case 72: {

            reconnectionInterval_ = input.readInt32();
            break;
          }
          case 80: {

            maxTransportPoolSize_ = input.readInt32();
            break;
          }
          case 88: {

            maxIdleConnections_ = input.readInt32();
            break;
          }
          case 96: {

            evictionTimePeriod_ = input.readInt32();
            break;
          }
          case 104: {

            minIdleTimeInPool_ = input.readInt32();
            break;
          }
          case 112: {

            secureMaxTransportPoolSize_ = input.readInt32();
            break;
          }
          case 120: {

            secureMaxIdleConnections_ = input.readInt32();
            break;
          }
          case 128: {

            secureEvictionTimePeriod_ = input.readInt32();
            break;
          }
          case 136: {

            secureMinIdleTimeInPool_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentProto.internal_static_wso2_discovery_config_enforcer_ThrottleAgent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentProto.internal_static_wso2_discovery_config_enforcer_ThrottleAgent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.class, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder.class);
  }

  public static final int SSLENABLEDPROTOCOLS_FIELD_NUMBER = 1;
  private volatile java.lang.Object sslEnabledProtocols_;
  /**
   * <code>string sslEnabledProtocols = 1;</code>
   * @return The sslEnabledProtocols.
   */
  @java.lang.Override
  public java.lang.String getSslEnabledProtocols() {
    java.lang.Object ref = sslEnabledProtocols_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sslEnabledProtocols_ = s;
      return s;
    }
  }
  /**
   * <code>string sslEnabledProtocols = 1;</code>
   * @return The bytes for sslEnabledProtocols.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSslEnabledProtocolsBytes() {
    java.lang.Object ref = sslEnabledProtocols_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sslEnabledProtocols_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CIPHERS_FIELD_NUMBER = 2;
  private volatile java.lang.Object ciphers_;
  /**
   * <code>string ciphers = 2;</code>
   * @return The ciphers.
   */
  @java.lang.Override
  public java.lang.String getCiphers() {
    java.lang.Object ref = ciphers_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ciphers_ = s;
      return s;
    }
  }
  /**
   * <code>string ciphers = 2;</code>
   * @return The bytes for ciphers.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCiphersBytes() {
    java.lang.Object ref = ciphers_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ciphers_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUEUESIZE_FIELD_NUMBER = 3;
  private int queueSize_;
  /**
   * <code>int32 queueSize = 3;</code>
   * @return The queueSize.
   */
  @java.lang.Override
  public int getQueueSize() {
    return queueSize_;
  }

  public static final int BATCHSIZE_FIELD_NUMBER = 4;
  private int batchSize_;
  /**
   * <code>int32 batchSize = 4;</code>
   * @return The batchSize.
   */
  @java.lang.Override
  public int getBatchSize() {
    return batchSize_;
  }

  public static final int COREPOOLSIZE_FIELD_NUMBER = 5;
  private int corePoolSize_;
  /**
   * <code>int32 corePoolSize = 5;</code>
   * @return The corePoolSize.
   */
  @java.lang.Override
  public int getCorePoolSize() {
    return corePoolSize_;
  }

  public static final int SOCKETTIMEOUTMS_FIELD_NUMBER = 6;
  private int socketTimeoutMS_;
  /**
   * <code>int32 socketTimeoutMS = 6;</code>
   * @return The socketTimeoutMS.
   */
  @java.lang.Override
  public int getSocketTimeoutMS() {
    return socketTimeoutMS_;
  }

  public static final int MAXPOOLSIZE_FIELD_NUMBER = 7;
  private int maxPoolSize_;
  /**
   * <code>int32 maxPoolSize = 7;</code>
   * @return The maxPoolSize.
   */
  @java.lang.Override
  public int getMaxPoolSize() {
    return maxPoolSize_;
  }

  public static final int KEEPALIVETIMEINPOOL_FIELD_NUMBER = 8;
  private int keepAliveTimeInPool_;
  /**
   * <code>int32 keepAliveTimeInPool = 8;</code>
   * @return The keepAliveTimeInPool.
   */
  @java.lang.Override
  public int getKeepAliveTimeInPool() {
    return keepAliveTimeInPool_;
  }

  public static final int RECONNECTIONINTERVAL_FIELD_NUMBER = 9;
  private int reconnectionInterval_;
  /**
   * <code>int32 reconnectionInterval = 9;</code>
   * @return The reconnectionInterval.
   */
  @java.lang.Override
  public int getReconnectionInterval() {
    return reconnectionInterval_;
  }

  public static final int MAXTRANSPORTPOOLSIZE_FIELD_NUMBER = 10;
  private int maxTransportPoolSize_;
  /**
   * <code>int32 maxTransportPoolSize = 10;</code>
   * @return The maxTransportPoolSize.
   */
  @java.lang.Override
  public int getMaxTransportPoolSize() {
    return maxTransportPoolSize_;
  }

  public static final int MAXIDLECONNECTIONS_FIELD_NUMBER = 11;
  private int maxIdleConnections_;
  /**
   * <code>int32 maxIdleConnections = 11;</code>
   * @return The maxIdleConnections.
   */
  @java.lang.Override
  public int getMaxIdleConnections() {
    return maxIdleConnections_;
  }

  public static final int EVICTIONTIMEPERIOD_FIELD_NUMBER = 12;
  private int evictionTimePeriod_;
  /**
   * <code>int32 evictionTimePeriod = 12;</code>
   * @return The evictionTimePeriod.
   */
  @java.lang.Override
  public int getEvictionTimePeriod() {
    return evictionTimePeriod_;
  }

  public static final int MINIDLETIMEINPOOL_FIELD_NUMBER = 13;
  private int minIdleTimeInPool_;
  /**
   * <code>int32 minIdleTimeInPool = 13;</code>
   * @return The minIdleTimeInPool.
   */
  @java.lang.Override
  public int getMinIdleTimeInPool() {
    return minIdleTimeInPool_;
  }

  public static final int SECUREMAXTRANSPORTPOOLSIZE_FIELD_NUMBER = 14;
  private int secureMaxTransportPoolSize_;
  /**
   * <code>int32 secureMaxTransportPoolSize = 14;</code>
   * @return The secureMaxTransportPoolSize.
   */
  @java.lang.Override
  public int getSecureMaxTransportPoolSize() {
    return secureMaxTransportPoolSize_;
  }

  public static final int SECUREMAXIDLECONNECTIONS_FIELD_NUMBER = 15;
  private int secureMaxIdleConnections_;
  /**
   * <code>int32 secureMaxIdleConnections = 15;</code>
   * @return The secureMaxIdleConnections.
   */
  @java.lang.Override
  public int getSecureMaxIdleConnections() {
    return secureMaxIdleConnections_;
  }

  public static final int SECUREEVICTIONTIMEPERIOD_FIELD_NUMBER = 16;
  private int secureEvictionTimePeriod_;
  /**
   * <code>int32 secureEvictionTimePeriod = 16;</code>
   * @return The secureEvictionTimePeriod.
   */
  @java.lang.Override
  public int getSecureEvictionTimePeriod() {
    return secureEvictionTimePeriod_;
  }

  public static final int SECUREMINIDLETIMEINPOOL_FIELD_NUMBER = 17;
  private int secureMinIdleTimeInPool_;
  /**
   * <code>int32 secureMinIdleTimeInPool = 17;</code>
   * @return The secureMinIdleTimeInPool.
   */
  @java.lang.Override
  public int getSecureMinIdleTimeInPool() {
    return secureMinIdleTimeInPool_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getSslEnabledProtocolsBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sslEnabledProtocols_);
    }
    if (!getCiphersBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ciphers_);
    }
    if (queueSize_ != 0) {
      output.writeInt32(3, queueSize_);
    }
    if (batchSize_ != 0) {
      output.writeInt32(4, batchSize_);
    }
    if (corePoolSize_ != 0) {
      output.writeInt32(5, corePoolSize_);
    }
    if (socketTimeoutMS_ != 0) {
      output.writeInt32(6, socketTimeoutMS_);
    }
    if (maxPoolSize_ != 0) {
      output.writeInt32(7, maxPoolSize_);
    }
    if (keepAliveTimeInPool_ != 0) {
      output.writeInt32(8, keepAliveTimeInPool_);
    }
    if (reconnectionInterval_ != 0) {
      output.writeInt32(9, reconnectionInterval_);
    }
    if (maxTransportPoolSize_ != 0) {
      output.writeInt32(10, maxTransportPoolSize_);
    }
    if (maxIdleConnections_ != 0) {
      output.writeInt32(11, maxIdleConnections_);
    }
    if (evictionTimePeriod_ != 0) {
      output.writeInt32(12, evictionTimePeriod_);
    }
    if (minIdleTimeInPool_ != 0) {
      output.writeInt32(13, minIdleTimeInPool_);
    }
    if (secureMaxTransportPoolSize_ != 0) {
      output.writeInt32(14, secureMaxTransportPoolSize_);
    }
    if (secureMaxIdleConnections_ != 0) {
      output.writeInt32(15, secureMaxIdleConnections_);
    }
    if (secureEvictionTimePeriod_ != 0) {
      output.writeInt32(16, secureEvictionTimePeriod_);
    }
    if (secureMinIdleTimeInPool_ != 0) {
      output.writeInt32(17, secureMinIdleTimeInPool_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getSslEnabledProtocolsBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sslEnabledProtocols_);
    }
    if (!getCiphersBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ciphers_);
    }
    if (queueSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, queueSize_);
    }
    if (batchSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, batchSize_);
    }
    if (corePoolSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, corePoolSize_);
    }
    if (socketTimeoutMS_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, socketTimeoutMS_);
    }
    if (maxPoolSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, maxPoolSize_);
    }
    if (keepAliveTimeInPool_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, keepAliveTimeInPool_);
    }
    if (reconnectionInterval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, reconnectionInterval_);
    }
    if (maxTransportPoolSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, maxTransportPoolSize_);
    }
    if (maxIdleConnections_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, maxIdleConnections_);
    }
    if (evictionTimePeriod_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, evictionTimePeriod_);
    }
    if (minIdleTimeInPool_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, minIdleTimeInPool_);
    }
    if (secureMaxTransportPoolSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, secureMaxTransportPoolSize_);
    }
    if (secureMaxIdleConnections_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, secureMaxIdleConnections_);
    }
    if (secureEvictionTimePeriod_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, secureEvictionTimePeriod_);
    }
    if (secureMinIdleTimeInPool_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, secureMinIdleTimeInPool_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent)) {
      return super.equals(obj);
    }
    org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent other = (org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent) obj;

    if (!getSslEnabledProtocols()
        .equals(other.getSslEnabledProtocols())) return false;
    if (!getCiphers()
        .equals(other.getCiphers())) return false;
    if (getQueueSize()
        != other.getQueueSize()) return false;
    if (getBatchSize()
        != other.getBatchSize()) return false;
    if (getCorePoolSize()
        != other.getCorePoolSize()) return false;
    if (getSocketTimeoutMS()
        != other.getSocketTimeoutMS()) return false;
    if (getMaxPoolSize()
        != other.getMaxPoolSize()) return false;
    if (getKeepAliveTimeInPool()
        != other.getKeepAliveTimeInPool()) return false;
    if (getReconnectionInterval()
        != other.getReconnectionInterval()) return false;
    if (getMaxTransportPoolSize()
        != other.getMaxTransportPoolSize()) return false;
    if (getMaxIdleConnections()
        != other.getMaxIdleConnections()) return false;
    if (getEvictionTimePeriod()
        != other.getEvictionTimePeriod()) return false;
    if (getMinIdleTimeInPool()
        != other.getMinIdleTimeInPool()) return false;
    if (getSecureMaxTransportPoolSize()
        != other.getSecureMaxTransportPoolSize()) return false;
    if (getSecureMaxIdleConnections()
        != other.getSecureMaxIdleConnections()) return false;
    if (getSecureEvictionTimePeriod()
        != other.getSecureEvictionTimePeriod()) return false;
    if (getSecureMinIdleTimeInPool()
        != other.getSecureMinIdleTimeInPool()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SSLENABLEDPROTOCOLS_FIELD_NUMBER;
    hash = (53 * hash) + getSslEnabledProtocols().hashCode();
    hash = (37 * hash) + CIPHERS_FIELD_NUMBER;
    hash = (53 * hash) + getCiphers().hashCode();
    hash = (37 * hash) + QUEUESIZE_FIELD_NUMBER;
    hash = (53 * hash) + getQueueSize();
    hash = (37 * hash) + BATCHSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getBatchSize();
    hash = (37 * hash) + COREPOOLSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getCorePoolSize();
    hash = (37 * hash) + SOCKETTIMEOUTMS_FIELD_NUMBER;
    hash = (53 * hash) + getSocketTimeoutMS();
    hash = (37 * hash) + MAXPOOLSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPoolSize();
    hash = (37 * hash) + KEEPALIVETIMEINPOOL_FIELD_NUMBER;
    hash = (53 * hash) + getKeepAliveTimeInPool();
    hash = (37 * hash) + RECONNECTIONINTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + getReconnectionInterval();
    hash = (37 * hash) + MAXTRANSPORTPOOLSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxTransportPoolSize();
    hash = (37 * hash) + MAXIDLECONNECTIONS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxIdleConnections();
    hash = (37 * hash) + EVICTIONTIMEPERIOD_FIELD_NUMBER;
    hash = (53 * hash) + getEvictionTimePeriod();
    hash = (37 * hash) + MINIDLETIMEINPOOL_FIELD_NUMBER;
    hash = (53 * hash) + getMinIdleTimeInPool();
    hash = (37 * hash) + SECUREMAXTRANSPORTPOOLSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSecureMaxTransportPoolSize();
    hash = (37 * hash) + SECUREMAXIDLECONNECTIONS_FIELD_NUMBER;
    hash = (53 * hash) + getSecureMaxIdleConnections();
    hash = (37 * hash) + SECUREEVICTIONTIMEPERIOD_FIELD_NUMBER;
    hash = (53 * hash) + getSecureEvictionTimePeriod();
    hash = (37 * hash) + SECUREMINIDLETIMEINPOOL_FIELD_NUMBER;
    hash = (53 * hash) + getSecureMinIdleTimeInPool();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Throttle Agent configuration model
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.config.enforcer.ThrottleAgent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.ThrottleAgent)
      org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentProto.internal_static_wso2_discovery_config_enforcer_ThrottleAgent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentProto.internal_static_wso2_discovery_config_enforcer_ThrottleAgent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.class, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder.class);
    }

    // Construct using org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      sslEnabledProtocols_ = "";

      ciphers_ = "";

      queueSize_ = 0;

      batchSize_ = 0;

      corePoolSize_ = 0;

      socketTimeoutMS_ = 0;

      maxPoolSize_ = 0;

      keepAliveTimeInPool_ = 0;

      reconnectionInterval_ = 0;

      maxTransportPoolSize_ = 0;

      maxIdleConnections_ = 0;

      evictionTimePeriod_ = 0;

      minIdleTimeInPool_ = 0;

      secureMaxTransportPoolSize_ = 0;

      secureMaxIdleConnections_ = 0;

      secureEvictionTimePeriod_ = 0;

      secureMinIdleTimeInPool_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentProto.internal_static_wso2_discovery_config_enforcer_ThrottleAgent_descriptor;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent getDefaultInstanceForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent build() {
      org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent buildPartial() {
      org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent result = new org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent(this);
      result.sslEnabledProtocols_ = sslEnabledProtocols_;
      result.ciphers_ = ciphers_;
      result.queueSize_ = queueSize_;
      result.batchSize_ = batchSize_;
      result.corePoolSize_ = corePoolSize_;
      result.socketTimeoutMS_ = socketTimeoutMS_;
      result.maxPoolSize_ = maxPoolSize_;
      result.keepAliveTimeInPool_ = keepAliveTimeInPool_;
      result.reconnectionInterval_ = reconnectionInterval_;
      result.maxTransportPoolSize_ = maxTransportPoolSize_;
      result.maxIdleConnections_ = maxIdleConnections_;
      result.evictionTimePeriod_ = evictionTimePeriod_;
      result.minIdleTimeInPool_ = minIdleTimeInPool_;
      result.secureMaxTransportPoolSize_ = secureMaxTransportPoolSize_;
      result.secureMaxIdleConnections_ = secureMaxIdleConnections_;
      result.secureEvictionTimePeriod_ = secureEvictionTimePeriod_;
      result.secureMinIdleTimeInPool_ = secureMinIdleTimeInPool_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent) {
        return mergeFrom((org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent other) {
      if (other == org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.getDefaultInstance()) return this;
      if (!other.getSslEnabledProtocols().isEmpty()) {
        sslEnabledProtocols_ = other.sslEnabledProtocols_;
        onChanged();
      }
      if (!other.getCiphers().isEmpty()) {
        ciphers_ = other.ciphers_;
        onChanged();
      }
      if (other.getQueueSize() != 0) {
        setQueueSize(other.getQueueSize());
      }
      if (other.getBatchSize() != 0) {
        setBatchSize(other.getBatchSize());
      }
      if (other.getCorePoolSize() != 0) {
        setCorePoolSize(other.getCorePoolSize());
      }
      if (other.getSocketTimeoutMS() != 0) {
        setSocketTimeoutMS(other.getSocketTimeoutMS());
      }
      if (other.getMaxPoolSize() != 0) {
        setMaxPoolSize(other.getMaxPoolSize());
      }
      if (other.getKeepAliveTimeInPool() != 0) {
        setKeepAliveTimeInPool(other.getKeepAliveTimeInPool());
      }
      if (other.getReconnectionInterval() != 0) {
        setReconnectionInterval(other.getReconnectionInterval());
      }
      if (other.getMaxTransportPoolSize() != 0) {
        setMaxTransportPoolSize(other.getMaxTransportPoolSize());
      }
      if (other.getMaxIdleConnections() != 0) {
        setMaxIdleConnections(other.getMaxIdleConnections());
      }
      if (other.getEvictionTimePeriod() != 0) {
        setEvictionTimePeriod(other.getEvictionTimePeriod());
      }
      if (other.getMinIdleTimeInPool() != 0) {
        setMinIdleTimeInPool(other.getMinIdleTimeInPool());
      }
      if (other.getSecureMaxTransportPoolSize() != 0) {
        setSecureMaxTransportPoolSize(other.getSecureMaxTransportPoolSize());
      }
      if (other.getSecureMaxIdleConnections() != 0) {
        setSecureMaxIdleConnections(other.getSecureMaxIdleConnections());
      }
      if (other.getSecureEvictionTimePeriod() != 0) {
        setSecureEvictionTimePeriod(other.getSecureEvictionTimePeriod());
      }
      if (other.getSecureMinIdleTimeInPool() != 0) {
        setSecureMinIdleTimeInPool(other.getSecureMinIdleTimeInPool());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object sslEnabledProtocols_ = "";
    /**
     * <code>string sslEnabledProtocols = 1;</code>
     * @return The sslEnabledProtocols.
     */
    public java.lang.String getSslEnabledProtocols() {
      java.lang.Object ref = sslEnabledProtocols_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sslEnabledProtocols_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string sslEnabledProtocols = 1;</code>
     * @return The bytes for sslEnabledProtocols.
     */
    public com.google.protobuf.ByteString
        getSslEnabledProtocolsBytes() {
      java.lang.Object ref = sslEnabledProtocols_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sslEnabledProtocols_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string sslEnabledProtocols = 1;</code>
     * @param value The sslEnabledProtocols to set.
     * @return This builder for chaining.
     */
    public Builder setSslEnabledProtocols(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sslEnabledProtocols_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string sslEnabledProtocols = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSslEnabledProtocols() {
      
      sslEnabledProtocols_ = getDefaultInstance().getSslEnabledProtocols();
      onChanged();
      return this;
    }
    /**
     * <code>string sslEnabledProtocols = 1;</code>
     * @param value The bytes for sslEnabledProtocols to set.
     * @return This builder for chaining.
     */
    public Builder setSslEnabledProtocolsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sslEnabledProtocols_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object ciphers_ = "";
    /**
     * <code>string ciphers = 2;</code>
     * @return The ciphers.
     */
    public java.lang.String getCiphers() {
      java.lang.Object ref = ciphers_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ciphers_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string ciphers = 2;</code>
     * @return The bytes for ciphers.
     */
    public com.google.protobuf.ByteString
        getCiphersBytes() {
      java.lang.Object ref = ciphers_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ciphers_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string ciphers = 2;</code>
     * @param value The ciphers to set.
     * @return This builder for chaining.
     */
    public Builder setCiphers(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ciphers_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string ciphers = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCiphers() {
      
      ciphers_ = getDefaultInstance().getCiphers();
      onChanged();
      return this;
    }
    /**
     * <code>string ciphers = 2;</code>
     * @param value The bytes for ciphers to set.
     * @return This builder for chaining.
     */
    public Builder setCiphersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ciphers_ = value;
      onChanged();
      return this;
    }

    private int queueSize_ ;
    /**
     * <code>int32 queueSize = 3;</code>
     * @return The queueSize.
     */
    @java.lang.Override
    public int getQueueSize() {
      return queueSize_;
    }
    /**
     * <code>int32 queueSize = 3;</code>
     * @param value The queueSize to set.
     * @return This builder for chaining.
     */
    public Builder setQueueSize(int value) {
      
      queueSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 queueSize = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearQueueSize() {
      
      queueSize_ = 0;
      onChanged();
      return this;
    }

    private int batchSize_ ;
    /**
     * <code>int32 batchSize = 4;</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public int getBatchSize() {
      return batchSize_;
    }
    /**
     * <code>int32 batchSize = 4;</code>
     * @param value The batchSize to set.
     * @return This builder for chaining.
     */
    public Builder setBatchSize(int value) {
      
      batchSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 batchSize = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBatchSize() {
      
      batchSize_ = 0;
      onChanged();
      return this;
    }

    private int corePoolSize_ ;
    /**
     * <code>int32 corePoolSize = 5;</code>
     * @return The corePoolSize.
     */
    @java.lang.Override
    public int getCorePoolSize() {
      return corePoolSize_;
    }
    /**
     * <code>int32 corePoolSize = 5;</code>
     * @param value The corePoolSize to set.
     * @return This builder for chaining.
     */
    public Builder setCorePoolSize(int value) {
      
      corePoolSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 corePoolSize = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCorePoolSize() {
      
      corePoolSize_ = 0;
      onChanged();
      return this;
    }

    private int socketTimeoutMS_ ;
    /**
     * <code>int32 socketTimeoutMS = 6;</code>
     * @return The socketTimeoutMS.
     */
    @java.lang.Override
    public int getSocketTimeoutMS() {
      return socketTimeoutMS_;
    }
    /**
     * <code>int32 socketTimeoutMS = 6;</code>
     * @param value The socketTimeoutMS to set.
     * @return This builder for chaining.
     */
    public Builder setSocketTimeoutMS(int value) {
      
      socketTimeoutMS_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 socketTimeoutMS = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSocketTimeoutMS() {
      
      socketTimeoutMS_ = 0;
      onChanged();
      return this;
    }

    private int maxPoolSize_ ;
    /**
     * <code>int32 maxPoolSize = 7;</code>
     * @return The maxPoolSize.
     */
    @java.lang.Override
    public int getMaxPoolSize() {
      return maxPoolSize_;
    }
    /**
     * <code>int32 maxPoolSize = 7;</code>
     * @param value The maxPoolSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPoolSize(int value) {
      
      maxPoolSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maxPoolSize = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxPoolSize() {
      
      maxPoolSize_ = 0;
      onChanged();
      return this;
    }

    private int keepAliveTimeInPool_ ;
    /**
     * <code>int32 keepAliveTimeInPool = 8;</code>
     * @return The keepAliveTimeInPool.
     */
    @java.lang.Override
    public int getKeepAliveTimeInPool() {
      return keepAliveTimeInPool_;
    }
    /**
     * <code>int32 keepAliveTimeInPool = 8;</code>
     * @param value The keepAliveTimeInPool to set.
     * @return This builder for chaining.
     */
    public Builder setKeepAliveTimeInPool(int value) {
      
      keepAliveTimeInPool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 keepAliveTimeInPool = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeepAliveTimeInPool() {
      
      keepAliveTimeInPool_ = 0;
      onChanged();
      return this;
    }

    private int reconnectionInterval_ ;
    /**
     * <code>int32 reconnectionInterval = 9;</code>
     * @return The reconnectionInterval.
     */
    @java.lang.Override
    public int getReconnectionInterval() {
      return reconnectionInterval_;
    }
    /**
     * <code>int32 reconnectionInterval = 9;</code>
     * @param value The reconnectionInterval to set.
     * @return This builder for chaining.
     */
    public Builder setReconnectionInterval(int value) {
      
      reconnectionInterval_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 reconnectionInterval = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearReconnectionInterval() {
      
      reconnectionInterval_ = 0;
      onChanged();
      return this;
    }

    private int maxTransportPoolSize_ ;
    /**
     * <code>int32 maxTransportPoolSize = 10;</code>
     * @return The maxTransportPoolSize.
     */
    @java.lang.Override
    public int getMaxTransportPoolSize() {
      return maxTransportPoolSize_;
    }
    /**
     * <code>int32 maxTransportPoolSize = 10;</code>
     * @param value The maxTransportPoolSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTransportPoolSize(int value) {
      
      maxTransportPoolSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maxTransportPoolSize = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTransportPoolSize() {
      
      maxTransportPoolSize_ = 0;
      onChanged();
      return this;
    }

    private int maxIdleConnections_ ;
    /**
     * <code>int32 maxIdleConnections = 11;</code>
     * @return The maxIdleConnections.
     */
    @java.lang.Override
    public int getMaxIdleConnections() {
      return maxIdleConnections_;
    }
    /**
     * <code>int32 maxIdleConnections = 11;</code>
     * @param value The maxIdleConnections to set.
     * @return This builder for chaining.
     */
    public Builder setMaxIdleConnections(int value) {
      
      maxIdleConnections_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maxIdleConnections = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxIdleConnections() {
      
      maxIdleConnections_ = 0;
      onChanged();
      return this;
    }

    private int evictionTimePeriod_ ;
    /**
     * <code>int32 evictionTimePeriod = 12;</code>
     * @return The evictionTimePeriod.
     */
    @java.lang.Override
    public int getEvictionTimePeriod() {
      return evictionTimePeriod_;
    }
    /**
     * <code>int32 evictionTimePeriod = 12;</code>
     * @param value The evictionTimePeriod to set.
     * @return This builder for chaining.
     */
    public Builder setEvictionTimePeriod(int value) {
      
      evictionTimePeriod_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 evictionTimePeriod = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearEvictionTimePeriod() {
      
      evictionTimePeriod_ = 0;
      onChanged();
      return this;
    }

    private int minIdleTimeInPool_ ;
    /**
     * <code>int32 minIdleTimeInPool = 13;</code>
     * @return The minIdleTimeInPool.
     */
    @java.lang.Override
    public int getMinIdleTimeInPool() {
      return minIdleTimeInPool_;
    }
    /**
     * <code>int32 minIdleTimeInPool = 13;</code>
     * @param value The minIdleTimeInPool to set.
     * @return This builder for chaining.
     */
    public Builder setMinIdleTimeInPool(int value) {
      
      minIdleTimeInPool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 minIdleTimeInPool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinIdleTimeInPool() {
      
      minIdleTimeInPool_ = 0;
      onChanged();
      return this;
    }

    private int secureMaxTransportPoolSize_ ;
    /**
     * <code>int32 secureMaxTransportPoolSize = 14;</code>
     * @return The secureMaxTransportPoolSize.
     */
    @java.lang.Override
    public int getSecureMaxTransportPoolSize() {
      return secureMaxTransportPoolSize_;
    }
    /**
     * <code>int32 secureMaxTransportPoolSize = 14;</code>
     * @param value The secureMaxTransportPoolSize to set.
     * @return This builder for chaining.
     */
    public Builder setSecureMaxTransportPoolSize(int value) {
      
      secureMaxTransportPoolSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 secureMaxTransportPoolSize = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecureMaxTransportPoolSize() {
      
      secureMaxTransportPoolSize_ = 0;
      onChanged();
      return this;
    }

    private int secureMaxIdleConnections_ ;
    /**
     * <code>int32 secureMaxIdleConnections = 15;</code>
     * @return The secureMaxIdleConnections.
     */
    @java.lang.Override
    public int getSecureMaxIdleConnections() {
      return secureMaxIdleConnections_;
    }
    /**
     * <code>int32 secureMaxIdleConnections = 15;</code>
     * @param value The secureMaxIdleConnections to set.
     * @return This builder for chaining.
     */
    public Builder setSecureMaxIdleConnections(int value) {
      
      secureMaxIdleConnections_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 secureMaxIdleConnections = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecureMaxIdleConnections() {
      
      secureMaxIdleConnections_ = 0;
      onChanged();
      return this;
    }

    private int secureEvictionTimePeriod_ ;
    /**
     * <code>int32 secureEvictionTimePeriod = 16;</code>
     * @return The secureEvictionTimePeriod.
     */
    @java.lang.Override
    public int getSecureEvictionTimePeriod() {
      return secureEvictionTimePeriod_;
    }
    /**
     * <code>int32 secureEvictionTimePeriod = 16;</code>
     * @param value The secureEvictionTimePeriod to set.
     * @return This builder for chaining.
     */
    public Builder setSecureEvictionTimePeriod(int value) {
      
      secureEvictionTimePeriod_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 secureEvictionTimePeriod = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecureEvictionTimePeriod() {
      
      secureEvictionTimePeriod_ = 0;
      onChanged();
      return this;
    }

    private int secureMinIdleTimeInPool_ ;
    /**
     * <code>int32 secureMinIdleTimeInPool = 17;</code>
     * @return The secureMinIdleTimeInPool.
     */
    @java.lang.Override
    public int getSecureMinIdleTimeInPool() {
      return secureMinIdleTimeInPool_;
    }
    /**
     * <code>int32 secureMinIdleTimeInPool = 17;</code>
     * @param value The secureMinIdleTimeInPool to set.
     * @return This builder for chaining.
     */
    public Builder setSecureMinIdleTimeInPool(int value) {
      
      secureMinIdleTimeInPool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 secureMinIdleTimeInPool = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecureMinIdleTimeInPool() {
      
      secureMinIdleTimeInPool_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.ThrottleAgent)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.ThrottleAgent)
  private static final org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent();
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ThrottleAgent>
      PARSER = new com.google.protobuf.AbstractParser<ThrottleAgent>() {
    @java.lang.Override
    public ThrottleAgent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ThrottleAgent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ThrottleAgent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ThrottleAgent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

