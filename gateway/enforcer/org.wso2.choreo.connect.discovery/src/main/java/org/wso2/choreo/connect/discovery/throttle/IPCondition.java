// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/throttle/blocking_conditions.proto

package org.wso2.choreo.connect.discovery.throttle;

/**
 * <pre>
 * IP blocking condition model
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.throttle.IPCondition}
 */
public final class IPCondition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.throttle.IPCondition)
    IPConditionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IPCondition.newBuilder() to construct.
  private IPCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IPCondition() {
    type_ = "";
    fixedIp_ = "";
    startingIp_ = "";
    endingIp_ = "";
    tenantDomain_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IPCondition();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IPCondition(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            type_ = s;
            break;
          }
          case 16: {

            id_ = input.readInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            fixedIp_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            startingIp_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            endingIp_ = s;
            break;
          }
          case 48: {

            invert_ = input.readBool();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            tenantDomain_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.choreo.connect.discovery.throttle.BlockingConditionsProto.internal_static_wso2_discovery_throttle_IPCondition_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.choreo.connect.discovery.throttle.BlockingConditionsProto.internal_static_wso2_discovery_throttle_IPCondition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.choreo.connect.discovery.throttle.IPCondition.class, org.wso2.choreo.connect.discovery.throttle.IPCondition.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object type_;
  /**
   * <code>string type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <code>string type = 1;</code>
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 2;
  private int id_;
  /**
   * <code>int32 id = 2;</code>
   * @return The id.
   */
  @java.lang.Override
  public int getId() {
    return id_;
  }

  public static final int FIXEDIP_FIELD_NUMBER = 3;
  private volatile java.lang.Object fixedIp_;
  /**
   * <code>string fixedIp = 3;</code>
   * @return The fixedIp.
   */
  @java.lang.Override
  public java.lang.String getFixedIp() {
    java.lang.Object ref = fixedIp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fixedIp_ = s;
      return s;
    }
  }
  /**
   * <code>string fixedIp = 3;</code>
   * @return The bytes for fixedIp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFixedIpBytes() {
    java.lang.Object ref = fixedIp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fixedIp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STARTINGIP_FIELD_NUMBER = 4;
  private volatile java.lang.Object startingIp_;
  /**
   * <code>string startingIp = 4;</code>
   * @return The startingIp.
   */
  @java.lang.Override
  public java.lang.String getStartingIp() {
    java.lang.Object ref = startingIp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      startingIp_ = s;
      return s;
    }
  }
  /**
   * <code>string startingIp = 4;</code>
   * @return The bytes for startingIp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStartingIpBytes() {
    java.lang.Object ref = startingIp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      startingIp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENDINGIP_FIELD_NUMBER = 5;
  private volatile java.lang.Object endingIp_;
  /**
   * <code>string endingIp = 5;</code>
   * @return The endingIp.
   */
  @java.lang.Override
  public java.lang.String getEndingIp() {
    java.lang.Object ref = endingIp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      endingIp_ = s;
      return s;
    }
  }
  /**
   * <code>string endingIp = 5;</code>
   * @return The bytes for endingIp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEndingIpBytes() {
    java.lang.Object ref = endingIp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      endingIp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INVERT_FIELD_NUMBER = 6;
  private boolean invert_;
  /**
   * <code>bool invert = 6;</code>
   * @return The invert.
   */
  @java.lang.Override
  public boolean getInvert() {
    return invert_;
  }

  public static final int TENANTDOMAIN_FIELD_NUMBER = 7;
  private volatile java.lang.Object tenantDomain_;
  /**
   * <code>string tenantDomain = 7;</code>
   * @return The tenantDomain.
   */
  @java.lang.Override
  public java.lang.String getTenantDomain() {
    java.lang.Object ref = tenantDomain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tenantDomain_ = s;
      return s;
    }
  }
  /**
   * <code>string tenantDomain = 7;</code>
   * @return The bytes for tenantDomain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTenantDomainBytes() {
    java.lang.Object ref = tenantDomain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tenantDomain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
    }
    if (id_ != 0) {
      output.writeInt32(2, id_);
    }
    if (!getFixedIpBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fixedIp_);
    }
    if (!getStartingIpBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, startingIp_);
    }
    if (!getEndingIpBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, endingIp_);
    }
    if (invert_ != false) {
      output.writeBool(6, invert_);
    }
    if (!getTenantDomainBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, tenantDomain_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
    }
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, id_);
    }
    if (!getFixedIpBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fixedIp_);
    }
    if (!getStartingIpBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, startingIp_);
    }
    if (!getEndingIpBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, endingIp_);
    }
    if (invert_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, invert_);
    }
    if (!getTenantDomainBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, tenantDomain_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.choreo.connect.discovery.throttle.IPCondition)) {
      return super.equals(obj);
    }
    org.wso2.choreo.connect.discovery.throttle.IPCondition other = (org.wso2.choreo.connect.discovery.throttle.IPCondition) obj;

    if (!getType()
        .equals(other.getType())) return false;
    if (getId()
        != other.getId()) return false;
    if (!getFixedIp()
        .equals(other.getFixedIp())) return false;
    if (!getStartingIp()
        .equals(other.getStartingIp())) return false;
    if (!getEndingIp()
        .equals(other.getEndingIp())) return false;
    if (getInvert()
        != other.getInvert()) return false;
    if (!getTenantDomain()
        .equals(other.getTenantDomain())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + FIXEDIP_FIELD_NUMBER;
    hash = (53 * hash) + getFixedIp().hashCode();
    hash = (37 * hash) + STARTINGIP_FIELD_NUMBER;
    hash = (53 * hash) + getStartingIp().hashCode();
    hash = (37 * hash) + ENDINGIP_FIELD_NUMBER;
    hash = (53 * hash) + getEndingIp().hashCode();
    hash = (37 * hash) + INVERT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInvert());
    hash = (37 * hash) + TENANTDOMAIN_FIELD_NUMBER;
    hash = (53 * hash) + getTenantDomain().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.throttle.IPCondition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.choreo.connect.discovery.throttle.IPCondition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * IP blocking condition model
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.throttle.IPCondition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.throttle.IPCondition)
      org.wso2.choreo.connect.discovery.throttle.IPConditionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.choreo.connect.discovery.throttle.BlockingConditionsProto.internal_static_wso2_discovery_throttle_IPCondition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.choreo.connect.discovery.throttle.BlockingConditionsProto.internal_static_wso2_discovery_throttle_IPCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.choreo.connect.discovery.throttle.IPCondition.class, org.wso2.choreo.connect.discovery.throttle.IPCondition.Builder.class);
    }

    // Construct using org.wso2.choreo.connect.discovery.throttle.IPCondition.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = "";

      id_ = 0;

      fixedIp_ = "";

      startingIp_ = "";

      endingIp_ = "";

      invert_ = false;

      tenantDomain_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.choreo.connect.discovery.throttle.BlockingConditionsProto.internal_static_wso2_discovery_throttle_IPCondition_descriptor;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.throttle.IPCondition getDefaultInstanceForType() {
      return org.wso2.choreo.connect.discovery.throttle.IPCondition.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.throttle.IPCondition build() {
      org.wso2.choreo.connect.discovery.throttle.IPCondition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.throttle.IPCondition buildPartial() {
      org.wso2.choreo.connect.discovery.throttle.IPCondition result = new org.wso2.choreo.connect.discovery.throttle.IPCondition(this);
      result.type_ = type_;
      result.id_ = id_;
      result.fixedIp_ = fixedIp_;
      result.startingIp_ = startingIp_;
      result.endingIp_ = endingIp_;
      result.invert_ = invert_;
      result.tenantDomain_ = tenantDomain_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.choreo.connect.discovery.throttle.IPCondition) {
        return mergeFrom((org.wso2.choreo.connect.discovery.throttle.IPCondition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.choreo.connect.discovery.throttle.IPCondition other) {
      if (other == org.wso2.choreo.connect.discovery.throttle.IPCondition.getDefaultInstance()) return this;
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        onChanged();
      }
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (!other.getFixedIp().isEmpty()) {
        fixedIp_ = other.fixedIp_;
        onChanged();
      }
      if (!other.getStartingIp().isEmpty()) {
        startingIp_ = other.startingIp_;
        onChanged();
      }
      if (!other.getEndingIp().isEmpty()) {
        endingIp_ = other.endingIp_;
        onChanged();
      }
      if (other.getInvert() != false) {
        setInvert(other.getInvert());
      }
      if (!other.getTenantDomain().isEmpty()) {
        tenantDomain_ = other.tenantDomain_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.choreo.connect.discovery.throttle.IPCondition parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.choreo.connect.discovery.throttle.IPCondition) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object type_ = "";
    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = getDefaultInstance().getType();
      onChanged();
      return this;
    }
    /**
     * <code>string type = 1;</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      type_ = value;
      onChanged();
      return this;
    }

    private int id_ ;
    /**
     * <code>int32 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <code>int32 id = 2;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object fixedIp_ = "";
    /**
     * <code>string fixedIp = 3;</code>
     * @return The fixedIp.
     */
    public java.lang.String getFixedIp() {
      java.lang.Object ref = fixedIp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fixedIp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string fixedIp = 3;</code>
     * @return The bytes for fixedIp.
     */
    public com.google.protobuf.ByteString
        getFixedIpBytes() {
      java.lang.Object ref = fixedIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fixedIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string fixedIp = 3;</code>
     * @param value The fixedIp to set.
     * @return This builder for chaining.
     */
    public Builder setFixedIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fixedIp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string fixedIp = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFixedIp() {
      
      fixedIp_ = getDefaultInstance().getFixedIp();
      onChanged();
      return this;
    }
    /**
     * <code>string fixedIp = 3;</code>
     * @param value The bytes for fixedIp to set.
     * @return This builder for chaining.
     */
    public Builder setFixedIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fixedIp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object startingIp_ = "";
    /**
     * <code>string startingIp = 4;</code>
     * @return The startingIp.
     */
    public java.lang.String getStartingIp() {
      java.lang.Object ref = startingIp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        startingIp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string startingIp = 4;</code>
     * @return The bytes for startingIp.
     */
    public com.google.protobuf.ByteString
        getStartingIpBytes() {
      java.lang.Object ref = startingIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        startingIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string startingIp = 4;</code>
     * @param value The startingIp to set.
     * @return This builder for chaining.
     */
    public Builder setStartingIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      startingIp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string startingIp = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartingIp() {
      
      startingIp_ = getDefaultInstance().getStartingIp();
      onChanged();
      return this;
    }
    /**
     * <code>string startingIp = 4;</code>
     * @param value The bytes for startingIp to set.
     * @return This builder for chaining.
     */
    public Builder setStartingIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      startingIp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object endingIp_ = "";
    /**
     * <code>string endingIp = 5;</code>
     * @return The endingIp.
     */
    public java.lang.String getEndingIp() {
      java.lang.Object ref = endingIp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        endingIp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string endingIp = 5;</code>
     * @return The bytes for endingIp.
     */
    public com.google.protobuf.ByteString
        getEndingIpBytes() {
      java.lang.Object ref = endingIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endingIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string endingIp = 5;</code>
     * @param value The endingIp to set.
     * @return This builder for chaining.
     */
    public Builder setEndingIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      endingIp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string endingIp = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndingIp() {
      
      endingIp_ = getDefaultInstance().getEndingIp();
      onChanged();
      return this;
    }
    /**
     * <code>string endingIp = 5;</code>
     * @param value The bytes for endingIp to set.
     * @return This builder for chaining.
     */
    public Builder setEndingIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      endingIp_ = value;
      onChanged();
      return this;
    }

    private boolean invert_ ;
    /**
     * <code>bool invert = 6;</code>
     * @return The invert.
     */
    @java.lang.Override
    public boolean getInvert() {
      return invert_;
    }
    /**
     * <code>bool invert = 6;</code>
     * @param value The invert to set.
     * @return This builder for chaining.
     */
    public Builder setInvert(boolean value) {
      
      invert_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool invert = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvert() {
      
      invert_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object tenantDomain_ = "";
    /**
     * <code>string tenantDomain = 7;</code>
     * @return The tenantDomain.
     */
    public java.lang.String getTenantDomain() {
      java.lang.Object ref = tenantDomain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tenantDomain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string tenantDomain = 7;</code>
     * @return The bytes for tenantDomain.
     */
    public com.google.protobuf.ByteString
        getTenantDomainBytes() {
      java.lang.Object ref = tenantDomain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tenantDomain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string tenantDomain = 7;</code>
     * @param value The tenantDomain to set.
     * @return This builder for chaining.
     */
    public Builder setTenantDomain(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tenantDomain_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string tenantDomain = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantDomain() {
      
      tenantDomain_ = getDefaultInstance().getTenantDomain();
      onChanged();
      return this;
    }
    /**
     * <code>string tenantDomain = 7;</code>
     * @param value The bytes for tenantDomain to set.
     * @return This builder for chaining.
     */
    public Builder setTenantDomainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tenantDomain_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.throttle.IPCondition)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.throttle.IPCondition)
  private static final org.wso2.choreo.connect.discovery.throttle.IPCondition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.choreo.connect.discovery.throttle.IPCondition();
  }

  public static org.wso2.choreo.connect.discovery.throttle.IPCondition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IPCondition>
      PARSER = new com.google.protobuf.AbstractParser<IPCondition>() {
    @java.lang.Override
    public IPCondition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IPCondition(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IPCondition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IPCondition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.choreo.connect.discovery.throttle.IPCondition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

