// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/binary_publisher.proto

package org.wso2.choreo.connect.discovery.config.enforcer;

/**
 * Protobuf type {@code wso2.discovery.config.enforcer.BinaryPublisher}
 */
public final class BinaryPublisher extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.BinaryPublisher)
    BinaryPublisherOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BinaryPublisher.newBuilder() to construct.
  private BinaryPublisher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BinaryPublisher() {
    username_ = "";
    password_ = "";
    urlGroup_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BinaryPublisher();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BinaryPublisher(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            username_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            password_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              urlGroup_ = new java.util.ArrayList<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup>();
              mutable_bitField0_ |= 0x00000001;
            }
            urlGroup_.add(
                input.readMessage(org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.parser(), extensionRegistry));
            break;
          }
          case 34: {
            org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder subBuilder = null;
            if (pool_ != null) {
              subBuilder = pool_.toBuilder();
            }
            pool_ = input.readMessage(org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pool_);
              pool_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder subBuilder = null;
            if (agent_ != null) {
              subBuilder = agent_.toBuilder();
            }
            agent_ = input.readMessage(org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(agent_);
              agent_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        urlGroup_ = java.util.Collections.unmodifiableList(urlGroup_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherProto.internal_static_wso2_discovery_config_enforcer_BinaryPublisher_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherProto.internal_static_wso2_discovery_config_enforcer_BinaryPublisher_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.class, org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.Builder.class);
  }

  public static final int USERNAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object username_;
  /**
   * <code>string username = 1;</code>
   * @return The username.
   */
  @java.lang.Override
  public java.lang.String getUsername() {
    java.lang.Object ref = username_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      username_ = s;
      return s;
    }
  }
  /**
   * <code>string username = 1;</code>
   * @return The bytes for username.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUsernameBytes() {
    java.lang.Object ref = username_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      username_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PASSWORD_FIELD_NUMBER = 2;
  private volatile java.lang.Object password_;
  /**
   * <code>string password = 2;</code>
   * @return The password.
   */
  @java.lang.Override
  public java.lang.String getPassword() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      password_ = s;
      return s;
    }
  }
  /**
   * <code>string password = 2;</code>
   * @return The bytes for password.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPasswordBytes() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      password_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int URLGROUP_FIELD_NUMBER = 3;
  private java.util.List<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup> urlGroup_;
  /**
   * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup> getUrlGroupList() {
    return urlGroup_;
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder> 
      getUrlGroupOrBuilderList() {
    return urlGroup_;
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
   */
  @java.lang.Override
  public int getUrlGroupCount() {
    return urlGroup_.size();
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup getUrlGroup(int index) {
    return urlGroup_.get(index);
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder getUrlGroupOrBuilder(
      int index) {
    return urlGroup_.get(index);
  }

  public static final int POOL_FIELD_NUMBER = 4;
  private org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool pool_;
  /**
   * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
   * @return Whether the pool field is set.
   */
  @java.lang.Override
  public boolean hasPool() {
    return pool_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
   * @return The pool.
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool getPool() {
    return pool_ == null ? org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.getDefaultInstance() : pool_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.PublisherPoolOrBuilder getPoolOrBuilder() {
    return getPool();
  }

  public static final int AGENT_FIELD_NUMBER = 5;
  private org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent agent_;
  /**
   * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
   * @return Whether the agent field is set.
   */
  @java.lang.Override
  public boolean hasAgent() {
    return agent_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
   * @return The agent.
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent getAgent() {
    return agent_ == null ? org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.getDefaultInstance() : agent_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
   */
  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder getAgentOrBuilder() {
    return getAgent();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getUsernameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, username_);
    }
    if (!getPasswordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
    }
    for (int i = 0; i < urlGroup_.size(); i++) {
      output.writeMessage(3, urlGroup_.get(i));
    }
    if (pool_ != null) {
      output.writeMessage(4, getPool());
    }
    if (agent_ != null) {
      output.writeMessage(5, getAgent());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getUsernameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, username_);
    }
    if (!getPasswordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
    }
    for (int i = 0; i < urlGroup_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, urlGroup_.get(i));
    }
    if (pool_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getPool());
    }
    if (agent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getAgent());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher)) {
      return super.equals(obj);
    }
    org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher other = (org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher) obj;

    if (!getUsername()
        .equals(other.getUsername())) return false;
    if (!getPassword()
        .equals(other.getPassword())) return false;
    if (!getUrlGroupList()
        .equals(other.getUrlGroupList())) return false;
    if (hasPool() != other.hasPool()) return false;
    if (hasPool()) {
      if (!getPool()
          .equals(other.getPool())) return false;
    }
    if (hasAgent() != other.hasAgent()) return false;
    if (hasAgent()) {
      if (!getAgent()
          .equals(other.getAgent())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USERNAME_FIELD_NUMBER;
    hash = (53 * hash) + getUsername().hashCode();
    hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getPassword().hashCode();
    if (getUrlGroupCount() > 0) {
      hash = (37 * hash) + URLGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getUrlGroupList().hashCode();
    }
    if (hasPool()) {
      hash = (37 * hash) + POOL_FIELD_NUMBER;
      hash = (53 * hash) + getPool().hashCode();
    }
    if (hasAgent()) {
      hash = (37 * hash) + AGENT_FIELD_NUMBER;
      hash = (53 * hash) + getAgent().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code wso2.discovery.config.enforcer.BinaryPublisher}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.BinaryPublisher)
      org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherProto.internal_static_wso2_discovery_config_enforcer_BinaryPublisher_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherProto.internal_static_wso2_discovery_config_enforcer_BinaryPublisher_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.class, org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.Builder.class);
    }

    // Construct using org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getUrlGroupFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      username_ = "";

      password_ = "";

      if (urlGroupBuilder_ == null) {
        urlGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        urlGroupBuilder_.clear();
      }
      if (poolBuilder_ == null) {
        pool_ = null;
      } else {
        pool_ = null;
        poolBuilder_ = null;
      }
      if (agentBuilder_ == null) {
        agent_ = null;
      } else {
        agent_ = null;
        agentBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisherProto.internal_static_wso2_discovery_config_enforcer_BinaryPublisher_descriptor;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher getDefaultInstanceForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher build() {
      org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher buildPartial() {
      org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher result = new org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher(this);
      int from_bitField0_ = bitField0_;
      result.username_ = username_;
      result.password_ = password_;
      if (urlGroupBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          urlGroup_ = java.util.Collections.unmodifiableList(urlGroup_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.urlGroup_ = urlGroup_;
      } else {
        result.urlGroup_ = urlGroupBuilder_.build();
      }
      if (poolBuilder_ == null) {
        result.pool_ = pool_;
      } else {
        result.pool_ = poolBuilder_.build();
      }
      if (agentBuilder_ == null) {
        result.agent_ = agent_;
      } else {
        result.agent_ = agentBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher) {
        return mergeFrom((org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher other) {
      if (other == org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher.getDefaultInstance()) return this;
      if (!other.getUsername().isEmpty()) {
        username_ = other.username_;
        onChanged();
      }
      if (!other.getPassword().isEmpty()) {
        password_ = other.password_;
        onChanged();
      }
      if (urlGroupBuilder_ == null) {
        if (!other.urlGroup_.isEmpty()) {
          if (urlGroup_.isEmpty()) {
            urlGroup_ = other.urlGroup_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUrlGroupIsMutable();
            urlGroup_.addAll(other.urlGroup_);
          }
          onChanged();
        }
      } else {
        if (!other.urlGroup_.isEmpty()) {
          if (urlGroupBuilder_.isEmpty()) {
            urlGroupBuilder_.dispose();
            urlGroupBuilder_ = null;
            urlGroup_ = other.urlGroup_;
            bitField0_ = (bitField0_ & ~0x00000001);
            urlGroupBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUrlGroupFieldBuilder() : null;
          } else {
            urlGroupBuilder_.addAllMessages(other.urlGroup_);
          }
        }
      }
      if (other.hasPool()) {
        mergePool(other.getPool());
      }
      if (other.hasAgent()) {
        mergeAgent(other.getAgent());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object username_ = "";
    /**
     * <code>string username = 1;</code>
     * @return The username.
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string username = 1;</code>
     * @return The bytes for username.
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string username = 1;</code>
     * @param value The username to set.
     * @return This builder for chaining.
     */
    public Builder setUsername(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      username_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string username = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsername() {
      
      username_ = getDefaultInstance().getUsername();
      onChanged();
      return this;
    }
    /**
     * <code>string username = 1;</code>
     * @param value The bytes for username to set.
     * @return This builder for chaining.
     */
    public Builder setUsernameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      username_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object password_ = "";
    /**
     * <code>string password = 2;</code>
     * @return The password.
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string password = 2;</code>
     * @return The bytes for password.
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string password = 2;</code>
     * @param value The password to set.
     * @return This builder for chaining.
     */
    public Builder setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      password_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string password = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPassword() {
      
      password_ = getDefaultInstance().getPassword();
      onChanged();
      return this;
    }
    /**
     * <code>string password = 2;</code>
     * @param value The bytes for password to set.
     * @return This builder for chaining.
     */
    public Builder setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      password_ = value;
      onChanged();
      return this;
    }

    private java.util.List<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup> urlGroup_ =
      java.util.Collections.emptyList();
    private void ensureUrlGroupIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        urlGroup_ = new java.util.ArrayList<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup>(urlGroup_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder> urlGroupBuilder_;

    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public java.util.List<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup> getUrlGroupList() {
      if (urlGroupBuilder_ == null) {
        return java.util.Collections.unmodifiableList(urlGroup_);
      } else {
        return urlGroupBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public int getUrlGroupCount() {
      if (urlGroupBuilder_ == null) {
        return urlGroup_.size();
      } else {
        return urlGroupBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup getUrlGroup(int index) {
      if (urlGroupBuilder_ == null) {
        return urlGroup_.get(index);
      } else {
        return urlGroupBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder setUrlGroup(
        int index, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup value) {
      if (urlGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUrlGroupIsMutable();
        urlGroup_.set(index, value);
        onChanged();
      } else {
        urlGroupBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder setUrlGroup(
        int index, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder builderForValue) {
      if (urlGroupBuilder_ == null) {
        ensureUrlGroupIsMutable();
        urlGroup_.set(index, builderForValue.build());
        onChanged();
      } else {
        urlGroupBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder addUrlGroup(org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup value) {
      if (urlGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUrlGroupIsMutable();
        urlGroup_.add(value);
        onChanged();
      } else {
        urlGroupBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder addUrlGroup(
        int index, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup value) {
      if (urlGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUrlGroupIsMutable();
        urlGroup_.add(index, value);
        onChanged();
      } else {
        urlGroupBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder addUrlGroup(
        org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder builderForValue) {
      if (urlGroupBuilder_ == null) {
        ensureUrlGroupIsMutable();
        urlGroup_.add(builderForValue.build());
        onChanged();
      } else {
        urlGroupBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder addUrlGroup(
        int index, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder builderForValue) {
      if (urlGroupBuilder_ == null) {
        ensureUrlGroupIsMutable();
        urlGroup_.add(index, builderForValue.build());
        onChanged();
      } else {
        urlGroupBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder addAllUrlGroup(
        java.lang.Iterable<? extends org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup> values) {
      if (urlGroupBuilder_ == null) {
        ensureUrlGroupIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, urlGroup_);
        onChanged();
      } else {
        urlGroupBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder clearUrlGroup() {
      if (urlGroupBuilder_ == null) {
        urlGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        urlGroupBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public Builder removeUrlGroup(int index) {
      if (urlGroupBuilder_ == null) {
        ensureUrlGroupIsMutable();
        urlGroup_.remove(index);
        onChanged();
      } else {
        urlGroupBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder getUrlGroupBuilder(
        int index) {
      return getUrlGroupFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder getUrlGroupOrBuilder(
        int index) {
      if (urlGroupBuilder_ == null) {
        return urlGroup_.get(index);  } else {
        return urlGroupBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public java.util.List<? extends org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder> 
         getUrlGroupOrBuilderList() {
      if (urlGroupBuilder_ != null) {
        return urlGroupBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(urlGroup_);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder addUrlGroupBuilder() {
      return getUrlGroupFieldBuilder().addBuilder(
          org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.getDefaultInstance());
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder addUrlGroupBuilder(
        int index) {
      return getUrlGroupFieldBuilder().addBuilder(
          index, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.getDefaultInstance());
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.TMURLGroup urlGroup = 3;</code>
     */
    public java.util.List<org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder> 
         getUrlGroupBuilderList() {
      return getUrlGroupFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder> 
        getUrlGroupFieldBuilder() {
      if (urlGroupBuilder_ == null) {
        urlGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroup.Builder, org.wso2.choreo.connect.discovery.config.enforcer.TMURLGroupOrBuilder>(
                urlGroup_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        urlGroup_ = null;
      }
      return urlGroupBuilder_;
    }

    private org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool pool_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPoolOrBuilder> poolBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     * @return Whether the pool field is set.
     */
    public boolean hasPool() {
      return poolBuilder_ != null || pool_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     * @return The pool.
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool getPool() {
      if (poolBuilder_ == null) {
        return pool_ == null ? org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.getDefaultInstance() : pool_;
      } else {
        return poolBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public Builder setPool(org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool value) {
      if (poolBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pool_ = value;
        onChanged();
      } else {
        poolBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public Builder setPool(
        org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder builderForValue) {
      if (poolBuilder_ == null) {
        pool_ = builderForValue.build();
        onChanged();
      } else {
        poolBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public Builder mergePool(org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool value) {
      if (poolBuilder_ == null) {
        if (pool_ != null) {
          pool_ =
            org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.newBuilder(pool_).mergeFrom(value).buildPartial();
        } else {
          pool_ = value;
        }
        onChanged();
      } else {
        poolBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public Builder clearPool() {
      if (poolBuilder_ == null) {
        pool_ = null;
        onChanged();
      } else {
        pool_ = null;
        poolBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder getPoolBuilder() {
      
      onChanged();
      return getPoolFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.PublisherPoolOrBuilder getPoolOrBuilder() {
      if (poolBuilder_ != null) {
        return poolBuilder_.getMessageOrBuilder();
      } else {
        return pool_ == null ?
            org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.getDefaultInstance() : pool_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.PublisherPool pool = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPoolOrBuilder> 
        getPoolFieldBuilder() {
      if (poolBuilder_ == null) {
        poolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPool.Builder, org.wso2.choreo.connect.discovery.config.enforcer.PublisherPoolOrBuilder>(
                getPool(),
                getParentForChildren(),
                isClean());
        pool_ = null;
      }
      return poolBuilder_;
    }

    private org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent agent_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder> agentBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     * @return Whether the agent field is set.
     */
    public boolean hasAgent() {
      return agentBuilder_ != null || agent_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     * @return The agent.
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent getAgent() {
      if (agentBuilder_ == null) {
        return agent_ == null ? org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.getDefaultInstance() : agent_;
      } else {
        return agentBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public Builder setAgent(org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent value) {
      if (agentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        agent_ = value;
        onChanged();
      } else {
        agentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public Builder setAgent(
        org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder builderForValue) {
      if (agentBuilder_ == null) {
        agent_ = builderForValue.build();
        onChanged();
      } else {
        agentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public Builder mergeAgent(org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent value) {
      if (agentBuilder_ == null) {
        if (agent_ != null) {
          agent_ =
            org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.newBuilder(agent_).mergeFrom(value).buildPartial();
        } else {
          agent_ = value;
        }
        onChanged();
      } else {
        agentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public Builder clearAgent() {
      if (agentBuilder_ == null) {
        agent_ = null;
        onChanged();
      } else {
        agent_ = null;
        agentBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder getAgentBuilder() {
      
      onChanged();
      return getAgentFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    public org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder getAgentOrBuilder() {
      if (agentBuilder_ != null) {
        return agentBuilder_.getMessageOrBuilder();
      } else {
        return agent_ == null ?
            org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.getDefaultInstance() : agent_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.ThrottleAgent agent = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder> 
        getAgentFieldBuilder() {
      if (agentBuilder_ == null) {
        agentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgent.Builder, org.wso2.choreo.connect.discovery.config.enforcer.ThrottleAgentOrBuilder>(
                getAgent(),
                getParentForChildren(),
                isClean());
        agent_ = null;
      }
      return agentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.BinaryPublisher)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.BinaryPublisher)
  private static final org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher();
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BinaryPublisher>
      PARSER = new com.google.protobuf.AbstractParser<BinaryPublisher>() {
    @java.lang.Override
    public BinaryPublisher parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BinaryPublisher(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BinaryPublisher> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BinaryPublisher> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.BinaryPublisher getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

