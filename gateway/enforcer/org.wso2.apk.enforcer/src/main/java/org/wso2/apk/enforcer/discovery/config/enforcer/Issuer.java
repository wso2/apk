// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/issuer.proto

package org.wso2.apk.enforcer.discovery.config.enforcer;

/**
 * <pre>
 * Token issuer model
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.config.enforcer.Issuer}
 */
public final class Issuer extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.Issuer)
    IssuerOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Issuer.newBuilder() to construct.
  private Issuer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Issuer() {
    name_ = "";
    issuer_ = "";
    certificateAlias_ = "";
    jwksURL_ = "";
    consumerKeyClaim_ = "";
    certificateFilePath_ = "";
    claimMapping_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Issuer();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Issuer(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            issuer_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            certificateAlias_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            jwksURL_ = s;
            break;
          }
          case 40: {

            validateSubscription_ = input.readBool();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            consumerKeyClaim_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            certificateFilePath_ = s;
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              claimMapping_ = new java.util.ArrayList<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping>();
              mutable_bitField0_ |= 0x00000001;
            }
            claimMapping_.add(
                input.readMessage(org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        claimMapping_ = java.util.Collections.unmodifiableList(claimMapping_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.apk.enforcer.discovery.config.enforcer.IssuerProto.internal_static_wso2_discovery_config_enforcer_Issuer_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.apk.enforcer.discovery.config.enforcer.IssuerProto.internal_static_wso2_discovery_config_enforcer_Issuer_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.class, org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Issuer name
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Issuer name
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISSUER_FIELD_NUMBER = 2;
  private volatile java.lang.Object issuer_;
  /**
   * <pre>
   * Issuer identifier
   * </pre>
   *
   * <code>string issuer = 2;</code>
   * @return The issuer.
   */
  @java.lang.Override
  public java.lang.String getIssuer() {
    java.lang.Object ref = issuer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      issuer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Issuer identifier
   * </pre>
   *
   * <code>string issuer = 2;</code>
   * @return The bytes for issuer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIssuerBytes() {
    java.lang.Object ref = issuer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      issuer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CERTIFICATEALIAS_FIELD_NUMBER = 3;
  private volatile java.lang.Object certificateAlias_;
  /**
   * <pre>
   * Alias of the local certificate to be used for token validation
   * with this issuer
   * </pre>
   *
   * <code>string certificateAlias = 3;</code>
   * @return The certificateAlias.
   */
  @java.lang.Override
  public java.lang.String getCertificateAlias() {
    java.lang.Object ref = certificateAlias_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      certificateAlias_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Alias of the local certificate to be used for token validation
   * with this issuer
   * </pre>
   *
   * <code>string certificateAlias = 3;</code>
   * @return The bytes for certificateAlias.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCertificateAliasBytes() {
    java.lang.Object ref = certificateAlias_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      certificateAlias_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int JWKSURL_FIELD_NUMBER = 4;
  private volatile java.lang.Object jwksURL_;
  /**
   * <pre>
   * JWKS endpoint of the issuer
   * </pre>
   *
   * <code>string jwksURL = 4;</code>
   * @return The jwksURL.
   */
  @java.lang.Override
  public java.lang.String getJwksURL() {
    java.lang.Object ref = jwksURL_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      jwksURL_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * JWKS endpoint of the issuer
   * </pre>
   *
   * <code>string jwksURL = 4;</code>
   * @return The bytes for jwksURL.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getJwksURLBytes() {
    java.lang.Object ref = jwksURL_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      jwksURL_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VALIDATESUBSCRIPTION_FIELD_NUMBER = 5;
  private boolean validateSubscription_;
  /**
   * <pre>
   * Enable or disable subscription validation for this issuer
   * </pre>
   *
   * <code>bool validateSubscription = 5;</code>
   * @return The validateSubscription.
   */
  @java.lang.Override
  public boolean getValidateSubscription() {
    return validateSubscription_;
  }

  public static final int CONSUMERKEYCLAIM_FIELD_NUMBER = 6;
  private volatile java.lang.Object consumerKeyClaim_;
  /**
   * <pre>
   * JWT claim that communicates the consumerKey value
   * </pre>
   *
   * <code>string consumerKeyClaim = 6;</code>
   * @return The consumerKeyClaim.
   */
  @java.lang.Override
  public java.lang.String getConsumerKeyClaim() {
    java.lang.Object ref = consumerKeyClaim_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      consumerKeyClaim_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * JWT claim that communicates the consumerKey value
   * </pre>
   *
   * <code>string consumerKeyClaim = 6;</code>
   * @return The bytes for consumerKeyClaim.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConsumerKeyClaimBytes() {
    java.lang.Object ref = consumerKeyClaim_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      consumerKeyClaim_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CERTIFICATEFILEPATH_FIELD_NUMBER = 7;
  private volatile java.lang.Object certificateFilePath_;
  /**
   * <pre>
   * FilePath of the public certificate mounted in enforcer container
   * </pre>
   *
   * <code>string certificateFilePath = 7;</code>
   * @return The certificateFilePath.
   */
  @java.lang.Override
  public java.lang.String getCertificateFilePath() {
    java.lang.Object ref = certificateFilePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      certificateFilePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * FilePath of the public certificate mounted in enforcer container
   * </pre>
   *
   * <code>string certificateFilePath = 7;</code>
   * @return The bytes for certificateFilePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCertificateFilePathBytes() {
    java.lang.Object ref = certificateFilePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      certificateFilePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLAIMMAPPING_FIELD_NUMBER = 8;
  private java.util.List<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping> claimMapping_;
  /**
   * <pre>
   * Claim mapping for the issuer
   * </pre>
   *
   * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
   */
  @java.lang.Override
  public java.util.List<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping> getClaimMappingList() {
    return claimMapping_;
  }
  /**
   * <pre>
   * Claim mapping for the issuer
   * </pre>
   *
   * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder> 
      getClaimMappingOrBuilderList() {
    return claimMapping_;
  }
  /**
   * <pre>
   * Claim mapping for the issuer
   * </pre>
   *
   * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
   */
  @java.lang.Override
  public int getClaimMappingCount() {
    return claimMapping_.size();
  }
  /**
   * <pre>
   * Claim mapping for the issuer
   * </pre>
   *
   * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
   */
  @java.lang.Override
  public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping getClaimMapping(int index) {
    return claimMapping_.get(index);
  }
  /**
   * <pre>
   * Claim mapping for the issuer
   * </pre>
   *
   * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
   */
  @java.lang.Override
  public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder getClaimMappingOrBuilder(
      int index) {
    return claimMapping_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!getIssuerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, issuer_);
    }
    if (!getCertificateAliasBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, certificateAlias_);
    }
    if (!getJwksURLBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, jwksURL_);
    }
    if (validateSubscription_ != false) {
      output.writeBool(5, validateSubscription_);
    }
    if (!getConsumerKeyClaimBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, consumerKeyClaim_);
    }
    if (!getCertificateFilePathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, certificateFilePath_);
    }
    for (int i = 0; i < claimMapping_.size(); i++) {
      output.writeMessage(8, claimMapping_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!getIssuerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, issuer_);
    }
    if (!getCertificateAliasBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, certificateAlias_);
    }
    if (!getJwksURLBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, jwksURL_);
    }
    if (validateSubscription_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, validateSubscription_);
    }
    if (!getConsumerKeyClaimBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, consumerKeyClaim_);
    }
    if (!getCertificateFilePathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, certificateFilePath_);
    }
    for (int i = 0; i < claimMapping_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, claimMapping_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.apk.enforcer.discovery.config.enforcer.Issuer)) {
      return super.equals(obj);
    }
    org.wso2.apk.enforcer.discovery.config.enforcer.Issuer other = (org.wso2.apk.enforcer.discovery.config.enforcer.Issuer) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getIssuer()
        .equals(other.getIssuer())) return false;
    if (!getCertificateAlias()
        .equals(other.getCertificateAlias())) return false;
    if (!getJwksURL()
        .equals(other.getJwksURL())) return false;
    if (getValidateSubscription()
        != other.getValidateSubscription()) return false;
    if (!getConsumerKeyClaim()
        .equals(other.getConsumerKeyClaim())) return false;
    if (!getCertificateFilePath()
        .equals(other.getCertificateFilePath())) return false;
    if (!getClaimMappingList()
        .equals(other.getClaimMappingList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + ISSUER_FIELD_NUMBER;
    hash = (53 * hash) + getIssuer().hashCode();
    hash = (37 * hash) + CERTIFICATEALIAS_FIELD_NUMBER;
    hash = (53 * hash) + getCertificateAlias().hashCode();
    hash = (37 * hash) + JWKSURL_FIELD_NUMBER;
    hash = (53 * hash) + getJwksURL().hashCode();
    hash = (37 * hash) + VALIDATESUBSCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getValidateSubscription());
    hash = (37 * hash) + CONSUMERKEYCLAIM_FIELD_NUMBER;
    hash = (53 * hash) + getConsumerKeyClaim().hashCode();
    hash = (37 * hash) + CERTIFICATEFILEPATH_FIELD_NUMBER;
    hash = (53 * hash) + getCertificateFilePath().hashCode();
    if (getClaimMappingCount() > 0) {
      hash = (37 * hash) + CLAIMMAPPING_FIELD_NUMBER;
      hash = (53 * hash) + getClaimMappingList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.apk.enforcer.discovery.config.enforcer.Issuer prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Token issuer model
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.config.enforcer.Issuer}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.Issuer)
      org.wso2.apk.enforcer.discovery.config.enforcer.IssuerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.IssuerProto.internal_static_wso2_discovery_config_enforcer_Issuer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.IssuerProto.internal_static_wso2_discovery_config_enforcer_Issuer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.class, org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.Builder.class);
    }

    // Construct using org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getClaimMappingFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      issuer_ = "";

      certificateAlias_ = "";

      jwksURL_ = "";

      validateSubscription_ = false;

      consumerKeyClaim_ = "";

      certificateFilePath_ = "";

      if (claimMappingBuilder_ == null) {
        claimMapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        claimMappingBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.IssuerProto.internal_static_wso2_discovery_config_enforcer_Issuer_descriptor;
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.Issuer getDefaultInstanceForType() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.Issuer build() {
      org.wso2.apk.enforcer.discovery.config.enforcer.Issuer result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.Issuer buildPartial() {
      org.wso2.apk.enforcer.discovery.config.enforcer.Issuer result = new org.wso2.apk.enforcer.discovery.config.enforcer.Issuer(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      result.issuer_ = issuer_;
      result.certificateAlias_ = certificateAlias_;
      result.jwksURL_ = jwksURL_;
      result.validateSubscription_ = validateSubscription_;
      result.consumerKeyClaim_ = consumerKeyClaim_;
      result.certificateFilePath_ = certificateFilePath_;
      if (claimMappingBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          claimMapping_ = java.util.Collections.unmodifiableList(claimMapping_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.claimMapping_ = claimMapping_;
      } else {
        result.claimMapping_ = claimMappingBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.apk.enforcer.discovery.config.enforcer.Issuer) {
        return mergeFrom((org.wso2.apk.enforcer.discovery.config.enforcer.Issuer)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.apk.enforcer.discovery.config.enforcer.Issuer other) {
      if (other == org.wso2.apk.enforcer.discovery.config.enforcer.Issuer.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getIssuer().isEmpty()) {
        issuer_ = other.issuer_;
        onChanged();
      }
      if (!other.getCertificateAlias().isEmpty()) {
        certificateAlias_ = other.certificateAlias_;
        onChanged();
      }
      if (!other.getJwksURL().isEmpty()) {
        jwksURL_ = other.jwksURL_;
        onChanged();
      }
      if (other.getValidateSubscription() != false) {
        setValidateSubscription(other.getValidateSubscription());
      }
      if (!other.getConsumerKeyClaim().isEmpty()) {
        consumerKeyClaim_ = other.consumerKeyClaim_;
        onChanged();
      }
      if (!other.getCertificateFilePath().isEmpty()) {
        certificateFilePath_ = other.certificateFilePath_;
        onChanged();
      }
      if (claimMappingBuilder_ == null) {
        if (!other.claimMapping_.isEmpty()) {
          if (claimMapping_.isEmpty()) {
            claimMapping_ = other.claimMapping_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureClaimMappingIsMutable();
            claimMapping_.addAll(other.claimMapping_);
          }
          onChanged();
        }
      } else {
        if (!other.claimMapping_.isEmpty()) {
          if (claimMappingBuilder_.isEmpty()) {
            claimMappingBuilder_.dispose();
            claimMappingBuilder_ = null;
            claimMapping_ = other.claimMapping_;
            bitField0_ = (bitField0_ & ~0x00000001);
            claimMappingBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getClaimMappingFieldBuilder() : null;
          } else {
            claimMappingBuilder_.addAllMessages(other.claimMapping_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.apk.enforcer.discovery.config.enforcer.Issuer parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.apk.enforcer.discovery.config.enforcer.Issuer) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Issuer name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Issuer name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Issuer name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object issuer_ = "";
    /**
     * <pre>
     * Issuer identifier
     * </pre>
     *
     * <code>string issuer = 2;</code>
     * @return The issuer.
     */
    public java.lang.String getIssuer() {
      java.lang.Object ref = issuer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        issuer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Issuer identifier
     * </pre>
     *
     * <code>string issuer = 2;</code>
     * @return The bytes for issuer.
     */
    public com.google.protobuf.ByteString
        getIssuerBytes() {
      java.lang.Object ref = issuer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        issuer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Issuer identifier
     * </pre>
     *
     * <code>string issuer = 2;</code>
     * @param value The issuer to set.
     * @return This builder for chaining.
     */
    public Builder setIssuer(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      issuer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer identifier
     * </pre>
     *
     * <code>string issuer = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssuer() {
      
      issuer_ = getDefaultInstance().getIssuer();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer identifier
     * </pre>
     *
     * <code>string issuer = 2;</code>
     * @param value The bytes for issuer to set.
     * @return This builder for chaining.
     */
    public Builder setIssuerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      issuer_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object certificateAlias_ = "";
    /**
     * <pre>
     * Alias of the local certificate to be used for token validation
     * with this issuer
     * </pre>
     *
     * <code>string certificateAlias = 3;</code>
     * @return The certificateAlias.
     */
    public java.lang.String getCertificateAlias() {
      java.lang.Object ref = certificateAlias_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        certificateAlias_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Alias of the local certificate to be used for token validation
     * with this issuer
     * </pre>
     *
     * <code>string certificateAlias = 3;</code>
     * @return The bytes for certificateAlias.
     */
    public com.google.protobuf.ByteString
        getCertificateAliasBytes() {
      java.lang.Object ref = certificateAlias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        certificateAlias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Alias of the local certificate to be used for token validation
     * with this issuer
     * </pre>
     *
     * <code>string certificateAlias = 3;</code>
     * @param value The certificateAlias to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateAlias(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      certificateAlias_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Alias of the local certificate to be used for token validation
     * with this issuer
     * </pre>
     *
     * <code>string certificateAlias = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCertificateAlias() {
      
      certificateAlias_ = getDefaultInstance().getCertificateAlias();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Alias of the local certificate to be used for token validation
     * with this issuer
     * </pre>
     *
     * <code>string certificateAlias = 3;</code>
     * @param value The bytes for certificateAlias to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateAliasBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      certificateAlias_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object jwksURL_ = "";
    /**
     * <pre>
     * JWKS endpoint of the issuer
     * </pre>
     *
     * <code>string jwksURL = 4;</code>
     * @return The jwksURL.
     */
    public java.lang.String getJwksURL() {
      java.lang.Object ref = jwksURL_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jwksURL_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * JWKS endpoint of the issuer
     * </pre>
     *
     * <code>string jwksURL = 4;</code>
     * @return The bytes for jwksURL.
     */
    public com.google.protobuf.ByteString
        getJwksURLBytes() {
      java.lang.Object ref = jwksURL_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jwksURL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * JWKS endpoint of the issuer
     * </pre>
     *
     * <code>string jwksURL = 4;</code>
     * @param value The jwksURL to set.
     * @return This builder for chaining.
     */
    public Builder setJwksURL(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      jwksURL_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JWKS endpoint of the issuer
     * </pre>
     *
     * <code>string jwksURL = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearJwksURL() {
      
      jwksURL_ = getDefaultInstance().getJwksURL();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JWKS endpoint of the issuer
     * </pre>
     *
     * <code>string jwksURL = 4;</code>
     * @param value The bytes for jwksURL to set.
     * @return This builder for chaining.
     */
    public Builder setJwksURLBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      jwksURL_ = value;
      onChanged();
      return this;
    }

    private boolean validateSubscription_ ;
    /**
     * <pre>
     * Enable or disable subscription validation for this issuer
     * </pre>
     *
     * <code>bool validateSubscription = 5;</code>
     * @return The validateSubscription.
     */
    @java.lang.Override
    public boolean getValidateSubscription() {
      return validateSubscription_;
    }
    /**
     * <pre>
     * Enable or disable subscription validation for this issuer
     * </pre>
     *
     * <code>bool validateSubscription = 5;</code>
     * @param value The validateSubscription to set.
     * @return This builder for chaining.
     */
    public Builder setValidateSubscription(boolean value) {
      
      validateSubscription_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enable or disable subscription validation for this issuer
     * </pre>
     *
     * <code>bool validateSubscription = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearValidateSubscription() {
      
      validateSubscription_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object consumerKeyClaim_ = "";
    /**
     * <pre>
     * JWT claim that communicates the consumerKey value
     * </pre>
     *
     * <code>string consumerKeyClaim = 6;</code>
     * @return The consumerKeyClaim.
     */
    public java.lang.String getConsumerKeyClaim() {
      java.lang.Object ref = consumerKeyClaim_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerKeyClaim_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * JWT claim that communicates the consumerKey value
     * </pre>
     *
     * <code>string consumerKeyClaim = 6;</code>
     * @return The bytes for consumerKeyClaim.
     */
    public com.google.protobuf.ByteString
        getConsumerKeyClaimBytes() {
      java.lang.Object ref = consumerKeyClaim_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerKeyClaim_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * JWT claim that communicates the consumerKey value
     * </pre>
     *
     * <code>string consumerKeyClaim = 6;</code>
     * @param value The consumerKeyClaim to set.
     * @return This builder for chaining.
     */
    public Builder setConsumerKeyClaim(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      consumerKeyClaim_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JWT claim that communicates the consumerKey value
     * </pre>
     *
     * <code>string consumerKeyClaim = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearConsumerKeyClaim() {
      
      consumerKeyClaim_ = getDefaultInstance().getConsumerKeyClaim();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JWT claim that communicates the consumerKey value
     * </pre>
     *
     * <code>string consumerKeyClaim = 6;</code>
     * @param value The bytes for consumerKeyClaim to set.
     * @return This builder for chaining.
     */
    public Builder setConsumerKeyClaimBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      consumerKeyClaim_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object certificateFilePath_ = "";
    /**
     * <pre>
     * FilePath of the public certificate mounted in enforcer container
     * </pre>
     *
     * <code>string certificateFilePath = 7;</code>
     * @return The certificateFilePath.
     */
    public java.lang.String getCertificateFilePath() {
      java.lang.Object ref = certificateFilePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        certificateFilePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * FilePath of the public certificate mounted in enforcer container
     * </pre>
     *
     * <code>string certificateFilePath = 7;</code>
     * @return The bytes for certificateFilePath.
     */
    public com.google.protobuf.ByteString
        getCertificateFilePathBytes() {
      java.lang.Object ref = certificateFilePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        certificateFilePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * FilePath of the public certificate mounted in enforcer container
     * </pre>
     *
     * <code>string certificateFilePath = 7;</code>
     * @param value The certificateFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateFilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      certificateFilePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * FilePath of the public certificate mounted in enforcer container
     * </pre>
     *
     * <code>string certificateFilePath = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearCertificateFilePath() {
      
      certificateFilePath_ = getDefaultInstance().getCertificateFilePath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * FilePath of the public certificate mounted in enforcer container
     * </pre>
     *
     * <code>string certificateFilePath = 7;</code>
     * @param value The bytes for certificateFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      certificateFilePath_ = value;
      onChanged();
      return this;
    }

    private java.util.List<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping> claimMapping_ =
      java.util.Collections.emptyList();
    private void ensureClaimMappingIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        claimMapping_ = new java.util.ArrayList<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping>(claimMapping_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder> claimMappingBuilder_;

    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public java.util.List<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping> getClaimMappingList() {
      if (claimMappingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(claimMapping_);
      } else {
        return claimMappingBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public int getClaimMappingCount() {
      if (claimMappingBuilder_ == null) {
        return claimMapping_.size();
      } else {
        return claimMappingBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping getClaimMapping(int index) {
      if (claimMappingBuilder_ == null) {
        return claimMapping_.get(index);
      } else {
        return claimMappingBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder setClaimMapping(
        int index, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping value) {
      if (claimMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClaimMappingIsMutable();
        claimMapping_.set(index, value);
        onChanged();
      } else {
        claimMappingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder setClaimMapping(
        int index, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder builderForValue) {
      if (claimMappingBuilder_ == null) {
        ensureClaimMappingIsMutable();
        claimMapping_.set(index, builderForValue.build());
        onChanged();
      } else {
        claimMappingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder addClaimMapping(org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping value) {
      if (claimMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClaimMappingIsMutable();
        claimMapping_.add(value);
        onChanged();
      } else {
        claimMappingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder addClaimMapping(
        int index, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping value) {
      if (claimMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClaimMappingIsMutable();
        claimMapping_.add(index, value);
        onChanged();
      } else {
        claimMappingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder addClaimMapping(
        org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder builderForValue) {
      if (claimMappingBuilder_ == null) {
        ensureClaimMappingIsMutable();
        claimMapping_.add(builderForValue.build());
        onChanged();
      } else {
        claimMappingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder addClaimMapping(
        int index, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder builderForValue) {
      if (claimMappingBuilder_ == null) {
        ensureClaimMappingIsMutable();
        claimMapping_.add(index, builderForValue.build());
        onChanged();
      } else {
        claimMappingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder addAllClaimMapping(
        java.lang.Iterable<? extends org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping> values) {
      if (claimMappingBuilder_ == null) {
        ensureClaimMappingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, claimMapping_);
        onChanged();
      } else {
        claimMappingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder clearClaimMapping() {
      if (claimMappingBuilder_ == null) {
        claimMapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        claimMappingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public Builder removeClaimMapping(int index) {
      if (claimMappingBuilder_ == null) {
        ensureClaimMappingIsMutable();
        claimMapping_.remove(index);
        onChanged();
      } else {
        claimMappingBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder getClaimMappingBuilder(
        int index) {
      return getClaimMappingFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder getClaimMappingOrBuilder(
        int index) {
      if (claimMappingBuilder_ == null) {
        return claimMapping_.get(index);  } else {
        return claimMappingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public java.util.List<? extends org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder> 
         getClaimMappingOrBuilderList() {
      if (claimMappingBuilder_ != null) {
        return claimMappingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(claimMapping_);
      }
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder addClaimMappingBuilder() {
      return getClaimMappingFieldBuilder().addBuilder(
          org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.getDefaultInstance());
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder addClaimMappingBuilder(
        int index) {
      return getClaimMappingFieldBuilder().addBuilder(
          index, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.getDefaultInstance());
    }
    /**
     * <pre>
     * Claim mapping for the issuer
     * </pre>
     *
     * <code>repeated .wso2.discovery.config.enforcer.ClaimMapping claimMapping = 8;</code>
     */
    public java.util.List<org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder> 
         getClaimMappingBuilderList() {
      return getClaimMappingFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder> 
        getClaimMappingFieldBuilder() {
      if (claimMappingBuilder_ == null) {
        claimMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMapping.Builder, org.wso2.apk.enforcer.discovery.config.enforcer.ClaimMappingOrBuilder>(
                claimMapping_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        claimMapping_ = null;
      }
      return claimMappingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.Issuer)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.Issuer)
  private static final org.wso2.apk.enforcer.discovery.config.enforcer.Issuer DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.apk.enforcer.discovery.config.enforcer.Issuer();
  }

  public static org.wso2.apk.enforcer.discovery.config.enforcer.Issuer getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Issuer>
      PARSER = new com.google.protobuf.AbstractParser<Issuer>() {
    @java.lang.Override
    public Issuer parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Issuer(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Issuer> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Issuer> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.apk.enforcer.discovery.config.enforcer.Issuer getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

